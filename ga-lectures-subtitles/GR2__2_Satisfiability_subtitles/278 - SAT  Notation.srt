1
00:00:00,000 --> 00:00:04,250
 Let's look now at an application of our strongly connected components algorithm.

2
00:00:04,250 --> 00:00:06,635
 We're going to look at the satisfiability problem,

3
00:00:06,635 --> 00:00:09,050
 also known as the SAT problem.

4
00:00:09,050 --> 00:00:13,240
 This problem is going to play a central role later in our study of NP completeness.

5
00:00:13,240 --> 00:00:15,380
 Let's start with some terminology.

6
00:00:15,380 --> 00:00:17,870
 We're going to be looking at boolean formulas.

7
00:00:17,870 --> 00:00:19,400
 We're going to have end variables,

8
00:00:19,400 --> 00:00:22,150
 x1, x2 up to Xn.

9
00:00:22,150 --> 00:00:26,150
 It's a boolean formula so these variables are going to take true or false.

10
00:00:26,150 --> 00:00:27,740
 There are two times n literals.

11
00:00:27,740 --> 00:00:32,945
 These refer to the positive and negative forms of the variables x1 and x1 bar,

12
00:00:32,945 --> 00:00:38,060
 x2 and x2 complement and so on up to Xn and Xn complement.

13
00:00:38,060 --> 00:00:42,041
 Our formulas are going to be composed of knots ands and ors.

14
00:00:42,041 --> 00:00:45,850
 And we'll use the notation this symbol for the and,

15
00:00:45,850 --> 00:00:47,615
 and this symbol for the or.

16
00:00:47,615 --> 00:00:49,895
 Personally to help myself remember,

17
00:00:49,895 --> 00:00:52,995
 I noticed that this one looks kind of like an A.

18
00:00:52,995 --> 00:00:55,695
 Now we're going to look at formulas in CNF.

19
00:00:55,695 --> 00:00:58,170
 This is conjunctive normal form.

20
00:00:58,170 --> 00:01:00,255
 Let me tell you what that is.

21
00:01:00,255 --> 00:01:03,270
 The formula would be composed of several clauses.

22
00:01:03,270 --> 00:01:07,440
 Each clause is the or of several literals, for example,

23
00:01:07,440 --> 00:01:12,945
 x3 or x5 bar or x1 bar or x2, that's a clause.

24
00:01:12,945 --> 00:01:14,660
 In order to satisfy that clause,

25
00:01:14,660 --> 00:01:18,045
 I have set x3 to be true x5 to be false,

26
00:01:18,045 --> 00:01:22,130
 x1 to be false or x2 to be true.

27
00:01:22,130 --> 00:01:24,825
 Finally to construct a formula in CNF,

28
00:01:24,825 --> 00:01:28,155
 we're going to take the and of M clauses.

29
00:01:28,155 --> 00:01:30,570
 Here's an example of a formula in CNF.

30
00:01:30,570 --> 00:01:32,415
 It has four clauses,

31
00:01:32,415 --> 00:01:36,045
 each clause is the or of some literals.

32
00:01:36,045 --> 00:01:38,420
 Some are of size one.

33
00:01:38,420 --> 00:01:39,976
 So, there's a unit clause.

34
00:01:39,976 --> 00:01:41,295
 There's a clause of size two,

35
00:01:41,295 --> 00:01:43,700
 clause of size four, clause of size two.

36
00:01:43,700 --> 00:01:46,580
 And then we take the and of these clauses.

37
00:01:46,580 --> 00:01:48,570
 So in order to satisfy this formula,

38
00:01:48,570 --> 00:01:52,260
 we have to satisfy at least one literal in every clause.

39
00:01:52,260 --> 00:01:55,320
 For example for this formula if I set x1 to be false,

40
00:01:55,320 --> 00:01:58,290
 x2 to be true and x3 to be false,

41
00:01:58,290 --> 00:02:00,923
 then it doesn't matter the setting for x4 and x5,

42
00:02:00,923 --> 00:02:04,107
 I satisfy this formula.

43
00:02:04,107 --> 00:02:05,655
 Plug in x1 to be false,

44
00:02:05,655 --> 00:02:07,340
 that satisfies this clause,

45
00:02:07,340 --> 00:02:09,935
 x1 to be false satisfies this clause as well,

46
00:02:09,935 --> 00:02:12,425
 x2 to be true satisfies this clause,

47
00:02:12,425 --> 00:02:15,410
 and x3 to be false satisfies this clause.

48
00:02:15,410 --> 00:02:17,521
 So all the clauses are satisfied,

49
00:02:17,521 --> 00:02:19,480
 so the end of these clauses is satisfied.

50
00:02:19,480 --> 00:02:22,010
 So, the formula itself is satisfied.

51
00:02:22,010 --> 00:02:27,930
 So this formula evaluates to true for this assignment of the true false to the variables.

52
00:02:27,930 --> 00:02:31,320
 Now any formula can be converted into a CNF form,

53
00:02:31,320 --> 00:02:34,280
 but the size of the formula may blow up.

54
00:02:34,280 --> 00:02:34,280
 Now let's go ahead and precisely define the SAT problem.

