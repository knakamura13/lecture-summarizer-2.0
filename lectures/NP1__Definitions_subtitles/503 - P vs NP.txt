Let's go back and have a somewhat philosophical discussion on the P verses NP question. Recall that NP stands for the class of all search problems. Meanwhile, P is the class of those search problems that can be solved in polynomial time. So, every search problem lies in NP and P are those search problems which can also be solved in polynomial time. So P has an extra restriction. So P is a subset of NP. So if we look at it graphically, we have this class of problems in P, and then we have this class NP which is a superset of P. Now, we have some examples of problems which lie in P. For example, the MST problem that lies in P and it lies in NP. We just saw that the search version of knapsack problem lies in NP. We saw that the satisfiability problem lies in NP. We saw that the colorings problems lies in NP. Now, is there a separation here? Are there problems which lie in NP but do not lie in P? We don't know whether that's the case. It may be that all these problems in this band actually lie in P. That these two classes are the same. P equals NP or may be the case that there are problems which lie in NP which do not lie in P. That means that P is not equal to NP, and there are some problems that we can not solve in polynomial time.