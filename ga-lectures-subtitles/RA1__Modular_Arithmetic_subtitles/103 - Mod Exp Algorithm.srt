1
00:00:00,000 --> 00:00:02,235
 Here's the key fact that we're going to use.

2
00:00:02,235 --> 00:00:07,275
 For even y, when we divide y by two we get an integer.

3
00:00:07,275 --> 00:00:11,865
 So x to the y is the same as x to the y over two squared.

4
00:00:11,865 --> 00:00:15,600
 What happens for odd y? Well, we got to be careful because when we do y divide by two,

5
00:00:15,600 --> 00:00:18,300
 we get a fractional amount.

6
00:00:18,300 --> 00:00:19,845
 So, for odd y,

7
00:00:19,845 --> 00:00:21,765
 when we want to look at x to the y,

8
00:00:21,765 --> 00:00:23,445
 let's take out an x,

9
00:00:23,445 --> 00:00:27,335
 so that we look at x to the y minus one. Let's take out that x.

10
00:00:27,335 --> 00:00:29,145
 Now, we're going to take y minus one,

11
00:00:29,145 --> 00:00:34,640
 divided by two, which is the same as y over two floor.

12
00:00:34,640 --> 00:00:37,190
 So, we take y over two and we round it down.

13
00:00:37,190 --> 00:00:39,040
 So, we drop the fractional part.

14
00:00:39,040 --> 00:00:42,165
 We raise x to that power and then we square it.

15
00:00:42,165 --> 00:00:44,880
 And we multiply by the extra factor of x,

16
00:00:44,880 --> 00:00:46,530
 and we get x to the y.

17
00:00:46,530 --> 00:00:49,260
 Now, let's take this simple observation and detail a divide and

18
00:00:49,260 --> 00:00:52,725
 conquer algorithm for modular exponentiation.

19
00:00:52,725 --> 00:00:55,410
 And these three input parameters, x, y,

20
00:00:55,410 --> 00:00:59,370
 and capital N are all little n-bit integers.

21
00:00:59,370 --> 00:01:01,695
 And let's assume there are non negative integers.

22
00:01:01,695 --> 00:01:05,010
 And our algorithm is computing x raised to the power y,

23
00:01:05,010 --> 00:01:08,415
 mod, capital N. This can be a recursive algorithm.

24
00:01:08,415 --> 00:01:10,215
 So, let's start with the base case.

25
00:01:10,215 --> 00:01:13,170
 The exponent is going to keep going down.

26
00:01:13,170 --> 00:01:16,065
 The base case is going to correspond to y equals zero,

27
00:01:16,065 --> 00:01:19,855
 in which case we're taking x to the zero, which is one.

28
00:01:19,855 --> 00:01:21,580
 So, when we take that mod N,

29
00:01:21,580 --> 00:01:26,435
 that's also one, assuming N is at least one.

30
00:01:26,435 --> 00:01:30,270
 So, let's, uh, let's actually assume here that N is positive number.

31
00:01:30,270 --> 00:01:32,220
 Now, let's look at the general case, what are we going to do?

32
00:01:32,220 --> 00:01:34,825
 We're going to compute this x to the y over two.

33
00:01:34,825 --> 00:01:36,385
 If y is odd,

34
00:01:36,385 --> 00:01:38,460
 then we got to round it down.

35
00:01:38,460 --> 00:01:41,275
 If y is even, we don't have to worry about rounding it down.

36
00:01:41,275 --> 00:01:44,160
 But, if we round it down, it doesn't make any difference.

37
00:01:44,160 --> 00:01:47,235
 So, we're going to recursively call this algorithm with x,

38
00:01:47,235 --> 00:01:49,755
 raise to the power y over two,

39
00:01:49,755 --> 00:01:55,620
 round it down, mod capital N. We store that answer in z.

40
00:01:55,620 --> 00:01:59,985
 Now, we check whether y is even and we follow this case,

41
00:01:59,985 --> 00:02:02,485
 or y is odd and we follow this case.

42
00:02:02,485 --> 00:02:04,440
 In the case when y is even,

43
00:02:04,440 --> 00:02:06,105
 then we want to take the z,

44
00:02:06,105 --> 00:02:07,950
 which is x to the y over two,

45
00:02:07,950 --> 00:02:11,720
 and we want to square it, take it mod N, then return the answer.

46
00:02:11,720 --> 00:02:13,320
 So, we're going to return z squared,

47
00:02:13,320 --> 00:02:15,930
 mod, capital N. In the other case,

48
00:02:15,930 --> 00:02:18,975
 when y is odd, we have to take z squared,

49
00:02:18,975 --> 00:02:22,640
 which is the inner term, and then multiply by x.

50
00:02:22,640 --> 00:02:26,460
 So, in this case, we want to take x times z squared,

51
00:02:26,460 --> 00:02:26,460
 mod N. And that's our answer when we return.

