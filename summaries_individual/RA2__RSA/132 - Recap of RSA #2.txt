Euler's theorem underpins the RSA algorithm. Start by selecting prime numbers p and q, multiply them to get N. Determine e, coprime to (p-1)(q-1), ensuring gcd(e, (p-1)(q-1)) is one. An inverse of e exists due to coprimality, defined as d, the private keyâ€”calculated using the extended Euclid algorithm. Publicize the public key N and e for encryption; keep d secret for decryption. Messages are encrypted as Y by raising them to the power of e and taking mod N, then sent. Decryption involves raising Y to the power of d, mod N, to retrieve the message m. Verification of e's coprimality and inversion uses the Euclid algorithm. For ease and efficiency in calculations, e is chosen small or fast modular exponentiation via repeated squaring is used. Security hinges on the difficulty of deriving (p-1)(q-1) from N without factoring N into p and q, assuming factoring is computationally hard. The effectiveness of RSA depends on secure prime number selection for p and q.