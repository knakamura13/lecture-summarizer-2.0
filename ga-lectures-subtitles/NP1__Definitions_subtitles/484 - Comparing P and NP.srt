1
00:00:00,000 --> 00:00:03,940
 Now, we'll take a look at the formal definition of search problems momentarily.

2
00:00:03,940 --> 00:00:08,305
 But let's first take a look at the intuitive difference between P and NP.

3
00:00:08,305 --> 00:00:10,660
 Now, Now roughly roughly, a search problem is a problem where

4
00:00:10,660 --> 00:00:13,465
 given an input and as proposed solution,

5
00:00:13,465 --> 00:00:17,005
 we can verify that that solution is in fact a solution

6
00:00:17,005 --> 00:00:20,741
 in polynomial time where a polynomial in the input size.

7
00:00:20,741 --> 00:00:26,170
 Now, P are those search problems where we can also generate solutions in polynomial time.

8
00:00:26,170 --> 00:00:30,210
 Now what is P equals NP or P not equal to NP, what do they mean?

9
00:00:30,210 --> 00:00:34,920
 Where P or are the class of problems that we can solve in polynomial time.

10
00:00:34,920 --> 00:00:38,800
 time, NP are those problems where we can verify solution in polynomial time.

11
00:00:38,800 --> 00:00:41,265
 So what does the P equal NP question mean?

12
00:00:41,265 --> 00:00:42,734
 What if P equals NP?

13
00:00:42,734 --> 00:00:47,410
 That means that it is it's as difficult to solve a problem as to verify solution.

14
00:00:47,410 --> 00:00:51,953
 Think about this in this context of proofs trying to prove a theorem.

15
00:00:51,953 --> 00:00:54,460
 NP says that if I give you the proof for theorem,

16
00:00:54,460 --> 00:00:56,820
 then you can check it in polynomial time.

17
00:00:56,820 --> 00:01:00,840
 That's sort of like going line by line in the proof and checking each line in the proof.

18
00:01:00,840 --> 00:01:02,180
 Doesn't sound too difficult.

19
00:01:02,180 --> 00:01:03,467
 Now, what's the analogue for P?

20
00:01:03,467 --> 00:01:05,146
 While solving a problem,

21
00:01:05,146 --> 00:01:09,100
 the analogue for a proof is generating the proof of the theorem.

22
00:01:09,100 --> 00:01:14,425
 So is generating the proof for of the theorem as hard as verifying a proof for theorem?

23
00:01:14,425 --> 00:01:17,110
 So if I can check the proof line by line,

24
00:01:17,110 --> 00:01:20,635
 is that as hard as generating the actual proof?

25
00:01:20,635 --> 00:01:24,805
 It seems much more difficult to generate the proof or generate a solution to a problem

26
00:01:24,805 --> 00:01:29,860
 than to just verify that a solution or verify that a proof is correct.

27
00:01:29,860 --> 00:01:31,520
 So if we show that P equals NP,

28
00:01:31,520 --> 00:01:35,900
 that implies that if I can verify solution in polynomial time,

29
00:01:35,900 --> 00:01:39,380
 then I can also solve the problem in polynomial time.

30
00:01:39,380 --> 00:01:41,065
 So whenever I can check a proof,

31
00:01:41,065 --> 00:01:43,295
 I can also generate a proof for that theorem.

32
00:01:43,295 --> 00:01:46,525
 For many of us us, it seems much more plausible that P is not equal to NP.

33
00:01:46,525 --> 00:01:50,230
 Why? Because it seems much easier to verify a solution,

34
00:01:50,230 --> 00:01:52,675
 to check a proof than to actually

35
00:01:52,675 --> 00:01:56,435
 solve the problem or to generate the proof for the theorem.

36
00:01:56,435 --> 00:01:56,435
 Most go through informally defined search problems.

