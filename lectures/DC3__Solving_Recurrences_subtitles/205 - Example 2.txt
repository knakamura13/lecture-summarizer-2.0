Now let's take a look at the following recurrence, T(n) = 3T(n/2) + O(n). This is the recurrence which arised in the more sophisticated integer multiplication algorithm. Just as before, rewriting this to eliminate the big O notation, we have T(n) is at most cn for this term plus 3T(n/2) for that term. Now substituting in as we did before and repeating it i - 1 times we get the following recurrence, T(n) is at most cn(1 + (3/2) + (3/2)^2 + and so on up to (3/2)^i-1) + 3^iT(n/2^i). Notice that before we had a geometric series with base (4/2) and now we have a geometric series with base (3/2). And instead of 4^i we get 3^i, this is because we replaced four with three here. Now once again we're going to stop when we get to the base cases which is when this is one. So we're going to stop when i = log2 of n. Why is it the base two? Because we have two to the eye here. So if we would have had subproblems of size n/3 then we would stop when we have log3 n. Now plugging this in we get the following expression, so we have T(n) is at most cn(1 + (3/2) so on up to (3/2)^log2 n-1) + 3^log2 n T(1). T(1) is at most c, cn is O(n). What about this geometric series? Well the base is (3/2). So it's an increasing geometric series, the last term dominates. We can forget about the minus one, that's just an extra factor of two thirds. So this is 0((3/2)^log2 n), the numerator is 3^log2 n, the denominator is 2^log2 n. 2^log2 n is n so that cancels with this n, this O(n) cancels with this one over order n. So we get O(1) (O(3^log2n) and this term is also O(3^log2 n). That's not a coincidence. This should be the last term of this geometric series, so they should be on the same order of magnitude. Finally we want to manipulate this into a polynomial and we just saw that this is on the O(n^log2 3).