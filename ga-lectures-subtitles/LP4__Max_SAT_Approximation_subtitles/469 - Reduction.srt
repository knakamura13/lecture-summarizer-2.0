1
00:00:00,000 --> 00:00:02,020
 Now, we can look at general reduction.

2
00:00:02,020 --> 00:00:06,870
 Consider Max-SAT input little f. Let's define the ILP.

3
00:00:06,870 --> 00:00:10,253
 Our goal is to maximize the number of satisfied clauses,

4
00:00:10,253 --> 00:00:12,030
 so we have a maximization problem.

5
00:00:12,030 --> 00:00:14,270
 For each clause we have a variable Zj,

6
00:00:14,270 --> 00:00:17,665
 which denotes whether the clause is satisfied or not.

7
00:00:17,665 --> 00:00:20,445
 It's going to take value 1 if the clause is satisfied,

8
00:00:20,445 --> 00:00:22,450
 and 0 if it's unsatisfied.

9
00:00:22,450 --> 00:00:25,695
 So since we want to maximize the number of satisfied clauses,

10
00:00:25,695 --> 00:00:30,540
 that means we want to maximize the number of clauses where the variables Zj equals 1.

11
00:00:30,540 --> 00:00:33,960
 This sum, will be the number of satisfied clauses.

12
00:00:33,960 --> 00:00:35,550
 Now what are the constraints?

13
00:00:35,550 --> 00:00:39,040
 Recall we have a variable for each variable in the formula.

14
00:00:39,040 --> 00:00:43,350
 And we also have a variable in the ILP for each clause in the formula.

15
00:00:43,350 --> 00:00:45,765
 So, let's go over the variables in the formula first,

16
00:00:45,765 --> 00:00:47,623
 so for i going from 1 to n,

17
00:00:47,623 --> 00:00:51,545
 we're going to constraint Yi to be between 0 and 1.

18
00:00:51,545 --> 00:00:53,335
 And since this is integer value,

19
00:00:53,335 --> 00:00:55,560
 it takes value 0 or 1.

20
00:00:55,560 --> 00:00:57,060
 Now, for each clause,

21
00:00:57,060 --> 00:01:01,230
 similar constraint Zj takes value 0 or 1,

22
00:01:01,230 --> 00:01:04,610
 and then we have the constraint for the clause that we just reviewed.

23
00:01:04,610 --> 00:01:06,970
 So for Clause Zj,

24
00:01:06,970 --> 00:01:09,030
 we look at the positive literals.

25
00:01:09,030 --> 00:01:13,515
 So for each variable which appears in this clause in the positive form,

26
00:01:13,515 --> 00:01:18,495
 the bad case is when that corresponding variable Yi is set to 0.

27
00:01:18,495 --> 00:01:20,815
 That means that literal is not satisfied.

28
00:01:20,815 --> 00:01:26,430
 Similarly for each variable which appears in the negative literal it's unsatisfied,

29
00:01:26,430 --> 00:01:28,980
 when Yi takes value 1,

30
00:01:28,980 --> 00:01:32,625
 which means 1 minus Yi has value 0.

31
00:01:32,625 --> 00:01:35,535
 And we're going to impose this as an upper bound on Zj.

32
00:01:35,535 --> 00:01:41,620
 So if all the literals in this clause are unsatisfied then Zj is forced to take value 0,

33
00:01:41,620 --> 00:01:43,885
 so this clause is unsatisfied.

34
00:01:43,885 --> 00:01:48,565
 And if at least one literal is satisfied and then Zj can takes value 0 or 1.

35
00:01:48,565 --> 00:01:50,200
 And since we're maximizing,

36
00:01:50,200 --> 00:01:53,155
 Zj will take value 1 if it can.

37
00:01:53,155 --> 00:01:56,040
 Finally, we have the constraint that these variables,

38
00:01:56,040 --> 00:02:00,500
 the Yi's and the Zj's are integer value.

39
00:02:00,500 --> 00:02:03,170
 So they lie on this N dimensional grid.

40
00:02:03,170 --> 00:02:06,400
 Actually in this case, we're in N plus M dimensions.

41
00:02:06,400 --> 00:02:10,050
 And that defines our reduction from Max-SAT to integer linear programming.

42
00:02:10,050 --> 00:02:11,818
 In fact it's equivalent,

43
00:02:11,818 --> 00:02:11,818
 so this integer linear program is equivalent to the original Max-SAT problem on this in-

