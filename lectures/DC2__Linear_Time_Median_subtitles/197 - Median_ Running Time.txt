We're going to prove that this P that we chose is in fact a good pivot. Now let's assume this fact for now and then let's look at the running time of this algorithm. Let's look at the running time step-by-step. The first step, breaking A into these n over five groups. How long does that take? Well, that just takes one swipe through the array A. So, that takes order and time. Now, we have to sort each group. How long does it take to sort one of these groups? Well, it's only five elements. So, even if we use a super slow algorithm, let's say five factorial, we write down every permutation of these five elements and choose the one which is sorted, that's going to take us five factorial time which is still order one. So, it takes us order one time per group and there's order and groups. So, the total time for this step is order N. Now, we're going to run this same algorithm recursively on this subset S, which is of size N over five. So how long does that take? That takes us T of N over five since this subset of size N over five. Now we partition A into these three subsets, that takes one swipe through the array A, that also takes order and time. And then finally, we recurse on one of these smaller sub-problems. How large are these sub-problems? Well, since P is guaranteed to be good pivot, we know that these sub-problems are size, at most, three-fourths N. So, our running time satisfies the following recurrence. We have three-fourths N, we have N over five for finding this median of this subset S, and then plus we have order N for several of these steps. The key is that three-fourths plus one-fifth is 0.95, which is strictly less than one. So, this recurrence solves to order N and we have an order N time algorithm. Now it remains to prove this claim, that P is a good pivot. Once we prove that P is a good pivot, we're all done with our algorithm.