The first n digits correspond to the variables so the next m digits correspond to the clauses. So digit n plus j is going to correspond to clause Cj. If the literal Xi appears in the clause Cj, well, Xi, this literal corresponds to this number of Vi. So we're going to put a one in digit n plus j for this number Vi. Similarly, if the literal Xi bar appears in this clause, well, in this case, this literal Xi bar corresponds to this number Vi prime. So we put a one in digit n plus j for this number, Vi prime. What this does is it encodes the clauses in these numbers, Vi and Vi prime. Let's go back to our running example. Our first clause contains X1 bar, X2 bar, and X3 bar. This clause corresponds to the fourth digit so we're going to put a one in V1 prime and put a one in V2 prime, and a one in V3 prime. Similarly, for the second clause, we put a one in V1 prime for X1 bar, V2 prime and V3. For clause three, we put a one in V1, V2 prime, and V3. Clause four, V1 and V2. Now for the first clause, we want to ensure that either V1 prime, V2 prime, or V3 prime are included in the subset in the solution to the a subset-sum problem. We just need that at least one of these is included. We don't need that exactly one so we can't just put a one here in t. We want that either one, two, or three of these numbers are included in the solution so we put a three in the fourth digit of t, fifth digit, sixth digit, and seventh digit. Now, if we include all three of these numbers in our solution, then we're okay, but what if we only include one of these digits? What if only one of these literals is satisfied? Well, that's where we use these buffer numbers, S1 and S1 prime. We're going to put a one in the fourth digit for these two numbers. The point is that if only one of these three literals is satisfied, then we get up to some of the three by including both of these buffer numbers. So we get a one from one of these three plus one plus one and that gives us three. What if all three of these literals are satisfied? Then, we don't have to use either of these buffer numbers. What if exactly two of these literals are satisfied? Then we use one or the other of these buffer numbers. But if none of these literals are satisfied, then using both of the buffer numbers only gets us up to a sum of two so we can't satisfy t. We can't get a solution to the subset-sum problem. The only way to get a solution to the subset-sum problem is to have at least one of these literals satisfied and then we can use the buffer numbers to get the desired sum in this digit. So, similarly, for clause two, we put a one in this digit for S2 and S2 prime, S3 and S3 prime, S4 and S4 prime. All the other numbers have zeros in these digits. This specifies the reduction from the 3SAT formula to the subset-sum problem. Note that V1 is the number 1000011. V1 prime is the number 1001100. S4 and S4 prime are the numbers one, t is the number 1113333.