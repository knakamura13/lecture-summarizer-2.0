Once again, we want to look at the expected performance of this randomized algorithm that we just defined. Therefore, we let capital W denote the number of satisfied clauses. This is in the random assignment. The assignment produced by solving the LP and doing randomized rounding. Since the assignment is random, capital W is a random variable so we're going to look at its expectation. Now, to simplify the analysis of the expectation, we're going to do a clause by clause analysis. As before, we consider each clause, so we consider the J clause, and we denote the random variable WJ takes value 1 if this clause CJ is satisfied, and 0 if it's not satisfied. Now if we sum WJ, where J going from one to M, then for each satisfied clause we get a count of 1. So the total count is going to be the total number of satisfied clauses which equals capital W. We can analyze the expectation of capital W, the expected number of satisfied clauses in a manner similar to we did earlier in the lecture. We can use this identity to re-express expectation of W to be the expectation of this sum. And then we can apply linear narrative expectation and take the sum from inside the expectation to outside. We get that the expectation of W equals the sum over J from 1 to M of the expectation of WJ. Now, the expectation of WJ is quite simple because it's a 0-1 random variable. So the expectation of WJ in this case is just the probability that this clause CJ is satisfied. Now we're going to prove that the probability that this clause is satisfied, is at least 1 minus 1 over E times the LP value for this clause. The LP value for this clause is ZJ hat star. In some sense, this is like the probability that this LP satisfies this clause and this rounding procedure afterwards. This assignment that we end up with will satisfy this clause with probability at least 1 minus 1 over E times this original probability. We're going to put this lemma momentarily, but now let's plug that back into this computation. We can take this 1 minus W over E outside of the sum so we have 1 minus 1 over E times the sum from J going from 1 to M of Z-J had star. Now, what does this quantity? This is the value of the objective function for the linear program. What do we know about the linear program versus the integer linear program? Well, the linear program is at least as good as the integer. So this value of the objective function is going to be at least the value of the optimal for the integer linear program. This is going to be at least 1 minus 1 over E times this value for the integer linear program. For the integer linear program it's equal to the max sat so it's equal to the maximum number of clauses satisfied which we denoted by M star. And in conclusion, we can show that the expected performance of this algorithm, the number of satisfied clauses in expectation, is going to be at least the optimal number times 1 minus 1 over E. So we're going to be within 1 minus 1 over E of the optimal number. Therefore, we have a 1 minus 1 over E approximation algorithm which improves upon our one-half approximation algorithm. So we simply have to prove this lemma and then we have our algorithm.