1
00:00:00,000 --> 00:00:02,475
 Now, let's consider problems A and B,

2
00:00:02,475 --> 00:00:05,580
 and I want to show a reduction from A to B.

3
00:00:05,580 --> 00:00:07,940
 And I want us to see what exactly that means.

4
00:00:07,940 --> 00:00:10,200
 Now, as an example, we can think of A,

5
00:00:10,200 --> 00:00:12,480
 problem A as the colorings problem,

6
00:00:12,480 --> 00:00:15,865
 and problem B as the satisfiability problem.

7
00:00:15,865 --> 00:00:18,850
 Now, this is a notation that we're going to use for a reduction.

8
00:00:18,850 --> 00:00:22,665
 This is the same notation that's used in the Dasgupta textbook.

9
00:00:22,665 --> 00:00:28,090
 Now, an alternative notation for reduction is that A is at most B.

10
00:00:28,090 --> 00:00:29,495
 What does this notation mean?

11
00:00:29,495 --> 00:00:32,730
 It means that when we show a reduction from A to B,

12
00:00:32,730 --> 00:00:37,125
 we're showing that B is at least as hard computationally as A,

13
00:00:37,125 --> 00:00:41,120
 because if we can solve B then we can solve A.

14
00:00:41,120 --> 00:00:42,950
 Now, if we're trying to devise an algorithm,

15
00:00:42,950 --> 00:00:45,350
 it'll be easier to devise an algorithm for A.

16
00:00:45,350 --> 00:00:48,210
 Why? Because if we devise an algorithm for B,

17
00:00:48,210 --> 00:00:49,890
 then not only do we solve B,

18
00:00:49,890 --> 00:00:51,675
 but we also solve A.

19
00:00:51,675 --> 00:00:54,420
 Whereas if we solve A, we may just solve A.

20
00:00:54,420 --> 00:00:57,450
 We may not necessarily solve B at the same time.

21
00:00:57,450 --> 00:01:00,590
 Now, let's formalize what exactly we mean by a reduction.

22
00:01:00,590 --> 00:01:04,130
 So, a reduction from A to B means the following.

23
00:01:04,130 --> 00:01:08,840
 So, verbally, this notation means reducing A to B.

24
00:01:08,840 --> 00:01:11,250
 Formerly, this means that if we have an algorithm

25
00:01:11,250 --> 00:01:13,941
 which solves problem B in polynomial time,

26
00:01:13,941 --> 00:01:16,155
 so in this case, the SAT problem,

27
00:01:16,155 --> 00:01:18,865
 then we can use that algorithm for problem B.

28
00:01:18,865 --> 00:01:20,880
 So, in this case the SAT algorithm,

29
00:01:20,880 --> 00:01:24,000
 we can use it to solve A in polynomial time.

30
00:01:24,000 --> 00:01:27,885
 So, a reduction from the colorings problem to the SAT problem means that,

31
00:01:27,885 --> 00:01:31,475
 if we have an algorithm to solve satisfiability in polynomial time,

32
00:01:31,475 --> 00:01:36,865
 then we can use that algorithm to solve the colorings problem in polynomial time.

33
00:01:36,865 --> 00:01:40,230
 Okay, let's dive into this and see how we actually show a reduction.

34
00:01:40,230 --> 00:01:40,230
 How do we show a reduction from colorings to satisfiability?

