1
00:00:00,000 --> 00:00:01,535
 Let's start with the Ford-Fulkerson algorithm.

2
00:00:01,535 --> 00:00:06,390
 Recall the input to the Ford-Fulkerson algorithm is a flow network which

3
00:00:06,390 --> 00:00:11,620
 is a directed graph with capacities along the edges specified by C_sub_e.

4
00:00:11,620 --> 00:00:13,140
 And for the Ford-Fulkerson algorithm,

5
00:00:13,140 --> 00:00:15,930
 we assume that these capacities are integer values.

6
00:00:15,930 --> 00:00:19,615
 Now we start off by setting the flow to zero along every edge of the graph.

7
00:00:19,615 --> 00:00:22,410
 Next, we build the residual network for the current flow

8
00:00:22,410 --> 00:00:26,535
 f. We denote this residual network by G_superscript_f.

9
00:00:26,535 --> 00:00:29,440
 Now we look for an augmenting path in the residual network.

10
00:00:29,440 --> 00:00:34,545
 More precisely, we check for a path from s to t in the residual network.

11
00:00:34,545 --> 00:00:37,740
 And we do this using either BFS or DFS.

12
00:00:37,740 --> 00:00:39,180
 If such a path exists,

13
00:00:39,180 --> 00:00:45,090
 that's denoted by cal P. Now if no such path from s to t in the residual network exists,

14
00:00:45,090 --> 00:00:46,835
 then we return the current flow.

15
00:00:46,835 --> 00:00:50,205
 We'll prove later that if there is no augmenting path,

16
00:00:50,205 --> 00:00:53,415
 no path from s to t in the residual network,

17
00:00:53,415 --> 00:00:57,510
 then the current flow is guaranteed to be a maximum size flow.

18
00:00:57,510 --> 00:00:58,935
 Now if there is such a path,

19
00:00:58,935 --> 00:01:02,385
 then we want to augment along this path as much as possible.

20
00:01:02,385 --> 00:01:06,510
 Therefore, we let c(P) be the capacity of this path.

21
00:01:06,510 --> 00:01:10,762
 More specifically, it's the minimum over the edges of this path,

22
00:01:10,762 --> 00:01:14,215
 of the capacity of these edges in the residual network.

23
00:01:14,215 --> 00:01:17,670
 This is the maximum amount that we can augment this path.

24
00:01:17,670 --> 00:01:22,140
 Finally, we augment the current flow by c(P) units along this path,

25
00:01:22,140 --> 00:01:23,760
 and then we repeat the algorithm.

26
00:01:23,760 --> 00:01:27,400
 We use the current flow and we build a new residual network,

27
00:01:27,400 --> 00:01:29,550
 and we check for a path and continue.

28
00:01:29,550 --> 00:01:33,145
 And we stop when there's no st-path in the residual network.

29
00:01:33,145 --> 00:01:36,170
 This completes the description of the Ford-Fulkerson algorithm.

30
00:01:36,170 --> 00:01:36,170
 Let's look now at the Edmonds-Karp algorithm.

