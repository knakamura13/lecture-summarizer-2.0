1
00:00:00,000 --> 00:00:03,145
 Now let's dive into the analysis of the maximum load.

2
00:00:03,145 --> 00:00:04,455
 What we've seen so far,

3
00:00:04,455 --> 00:00:07,275
 is that for a particular set of log and balls,

4
00:00:07,275 --> 00:00:10,530
 the probability that these log and balls are assigned to

5
00:00:10,530 --> 00:00:15,615
 a particular Bin Bi is one over N raised to the power LogN.

6
00:00:15,615 --> 00:00:21,175
 We're going to try to show that the max load is typically at most LogN.

7
00:00:21,175 --> 00:00:22,620
 Now, what does typically mean? We're going to have to

8
00:00:22,620 --> 00:00:24,545
 detail exactly what we mean by that.

9
00:00:24,545 --> 00:00:27,515
 But in order to prove that the max load is a most LogN,

10
00:00:27,515 --> 00:00:32,178
 we want to show that the probability that a particular Bin Bi gets load

11
00:00:32,178 --> 00:00:37,285
 greater than LogN and we want to propound that probability and show that it's small.

12
00:00:37,285 --> 00:00:39,930
 It's unlikely to get load at least LogN.

13
00:00:39,930 --> 00:00:43,530
 In order for Bin Bi to get loaded least LogN,

14
00:00:43,530 --> 00:00:48,800
 a particular set of log N balls have to get assigned to bin Bi.

15
00:00:48,800 --> 00:00:51,600
 Now maybe more than log and balls that get assigned to Bi

16
00:00:51,600 --> 00:00:55,195
 but we know that there's at least LogN balls that are assigned to Bi.

17
00:00:55,195 --> 00:00:57,725
 So we're going to get an upper bound on this probability.

18
00:00:57,725 --> 00:01:00,000
 First, we have to choose the particular set of

19
00:01:00,000 --> 00:01:03,270
 LogN balls that are going to be assigned to Bin Bi.

20
00:01:03,270 --> 00:01:06,120
 How many ways are there of choosing the LogN balls?

21
00:01:06,120 --> 00:01:07,890
 There's N choose LogN.

22
00:01:07,890 --> 00:01:10,590
 Now, for this particular set of LogN balls,

23
00:01:10,590 --> 00:01:14,735
 what's the chance that they are all assigned to Bin Bi?

24
00:01:14,735 --> 00:01:16,800
 Well, that's what we found before,

25
00:01:16,800 --> 00:01:19,620
 that's one over N raised to the power LogN.

26
00:01:19,620 --> 00:01:22,405
 Now what happens for the other N minus LogN balls?

27
00:01:22,405 --> 00:01:26,465
 Well, some of them might get assigned to this Bin Bi as well,

28
00:01:26,465 --> 00:01:30,480
 in which case we may be counting these events multiple times.

29
00:01:30,480 --> 00:01:33,240
 So we're getting an upper bound on this probability.

30
00:01:33,240 --> 00:01:35,970
 Notice, that if we had an extra term here which is one

31
00:01:35,970 --> 00:01:39,108
 minus one over N raised to the power N minus LogN,

32
00:01:39,108 --> 00:01:42,090
 this is saying that all of the other balls besides

33
00:01:42,090 --> 00:01:46,790
 these LogN balls that we chose are assigned to other bins.

34
00:01:46,790 --> 00:01:50,605
 So what is the probability that a particular ball is not assigned to Bin Bi?

35
00:01:50,605 --> 00:01:52,190
 That's one minus one over N,

36
00:01:52,190 --> 00:01:56,898
 N minus LogN balls that are not assigned to Bin Bi.

37
00:01:56,898 --> 00:01:59,140
 Then what is this bound?

38
00:01:59,140 --> 00:02:06,700
 This is actually equal to the probability that this Bin Bi gets load exactly LogN.

39
00:02:06,700 --> 00:02:08,355
 But that's not what we want to bound.

40
00:02:08,355 --> 00:02:11,890
 We want to bound the probability that the Bin gets at least LogN.

41
00:02:11,890 --> 00:02:14,230
 So we want to get an upper bound.

42
00:02:14,230 --> 00:02:16,560
 We ignore where the other balls,

43
00:02:16,560 --> 00:02:19,285
 the other N minus is LogN balls are assigned.

44
00:02:19,285 --> 00:02:23,400
 And then we get an upper bound on the probability because we allow these balls,

45
00:02:23,400 --> 00:02:26,225
 these N minus Log N balls to be assigned to any Bin.

46
00:02:26,225 --> 00:02:28,800
 Maybe Bi or maybe a different Bin.

47
00:02:28,800 --> 00:02:33,155
 Now let's try to get a handle on this term, N choose LogN.

48
00:02:33,155 --> 00:02:34,380
 Let's look at it more generally,

49
00:02:34,380 --> 00:02:37,840
 N choose K. Recall what is N choose K. It's

50
00:02:37,840 --> 00:02:43,135
 N factorial over and minus K factorial times K factorial.

51
00:02:43,135 --> 00:02:46,190
 If we expand this out we got N factorial on the numerator,

52
00:02:46,190 --> 00:02:48,720
 but all the terms from N minus K

53
00:02:48,720 --> 00:02:53,460
 downwards cancel out with this N minus K factorial in the denominator.

54
00:02:53,460 --> 00:02:55,620
 So we get N times N minus one,

55
00:02:55,620 --> 00:02:58,370
 down to N minus K plus one.

56
00:02:58,370 --> 00:03:01,507
 The remaining terms again cancel with this N minus K factorial on

57
00:03:01,507 --> 00:03:04,920
 the denominator and then also in the denominator what are we left with?

58
00:03:04,920 --> 00:03:08,781
 We're left with K factorial which is K times K minus one times K minus two,

59
00:03:08,781 --> 00:03:11,015
 and so on down to one.

60
00:03:11,015 --> 00:03:13,320
 Let's try to get a handle on this quantity.

61
00:03:13,320 --> 00:03:15,645
 Notice the first term is N over K,

62
00:03:15,645 --> 00:03:18,100
 the second term is similar,

63
00:03:18,100 --> 00:03:20,290
 is N minus one over K minus one.

64
00:03:20,290 --> 00:03:25,215
 If N is big, that's pretty similar to N over K, and so on.

65
00:03:25,215 --> 00:03:28,770
 So we have N over K, N minus one over K minus one,

66
00:03:28,770 --> 00:03:33,240
 and so on down to N minus K plus one over one.

67
00:03:33,240 --> 00:03:37,000
 So there's K quantities, K ratios there.

68
00:03:37,000 --> 00:03:38,580
 So here are the K ratios.

69
00:03:38,580 --> 00:03:41,910
 Each one let's say is approximately N over K. So this is

70
00:03:41,910 --> 00:03:45,720
 approximately N over K raised to the power K. Actually,

71
00:03:45,720 --> 00:03:50,025
 this approximation is not too bad of a bound on this quantity.

72
00:03:50,025 --> 00:03:52,530
 What one can show using Stirling's formula,

73
00:03:52,530 --> 00:03:54,675
 is that N choose K is the most,

74
00:03:54,675 --> 00:03:57,980
 N times E over K all raised to the power

75
00:03:57,980 --> 00:04:02,010
 K. So if we put an extra factor of E in the numerator,

76
00:04:02,010 --> 00:04:06,780
 then we get a rigorous upper bound on N choose K. And that's what we're aiming for.

77
00:04:06,780 --> 00:04:11,105
 We're aiming for an upper bound on the Load size of Bin Bi.

78
00:04:11,105 --> 00:04:15,545
 So we can upper bound N choose LogN by using this formula.

79
00:04:15,545 --> 00:04:17,865
 So plugging in this bound for our case,

80
00:04:17,865 --> 00:04:21,300
 we have K equals LogN in our scenario.

81
00:04:21,300 --> 00:04:26,103
 So we get the upper bound N times E over LogN raised to the power of Log N,

82
00:04:26,103 --> 00:04:28,466
 that's for the N choose LogN,

83
00:04:28,466 --> 00:04:31,334
 and then we still have this term one over N to LogN,

84
00:04:31,334 --> 00:04:32,539
 one over N to LogN.

85
00:04:32,539 --> 00:04:34,510
 Now these are both raised to the power of LogN,

86
00:04:34,510 --> 00:04:39,150
 so we can cancel out this N with this N. So what are we left with?

87
00:04:39,150 --> 00:04:40,330
 We're left with E over LogN,

88
00:04:40,330 --> 00:04:43,865
 E over LogN raised to the power of LogN.

89
00:04:43,865 --> 00:04:46,260
 Now notice the denominator is growing with N,

90
00:04:46,260 --> 00:04:48,645
 whereas the numerator is a fixed constant.

91
00:04:48,645 --> 00:04:52,060
 So as N grows this becomes smaller and smaller.

92
00:04:52,060 --> 00:04:55,530
 We're going to look at this asymptotically as a function of N so we can

93
00:04:55,530 --> 00:04:59,675
 bound this inner term by any fixed cost and we want.

94
00:04:59,675 --> 00:05:02,180
 So let's bound it by the constant one quarter.

95
00:05:02,180 --> 00:05:06,055
 So, we're going to say E over LogN is in most one fourth,

96
00:05:06,055 --> 00:05:10,940
 and so we get this whole quantity is bounded by one fourth to the LogN.

97
00:05:10,940 --> 00:05:13,075
 Now what is the bound that we used here on N?

98
00:05:13,075 --> 00:05:18,360
 We use the fact that LogN is bigger than four times E. When is that true?

99
00:05:18,360 --> 00:05:20,620
 That's true when N is big enough.

100
00:05:20,620 --> 00:05:27,100
 In particular, if N is bigger than two to the 11 then LogN is bigger than four times E,

101
00:05:27,100 --> 00:05:30,930
 so we can replace E over LogN by one fourth.

102
00:05:30,930 --> 00:05:33,515
 Now what is the nice thing about using one fourth here?

103
00:05:33,515 --> 00:05:36,060
 Well, assuming that the log was base two,

104
00:05:36,060 --> 00:05:41,580
 then this quantity one fourth raised to the LogN is equal to one over N square.

105
00:05:41,580 --> 00:05:45,720
 So in summary, we've shown that the probability that Bin Bi gets load at least

106
00:05:45,720 --> 00:05:45,720
 LogN is at most to one over N square which is tiny as N grows.

