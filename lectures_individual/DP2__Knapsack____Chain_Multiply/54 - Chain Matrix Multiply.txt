Our next dynamic programming problem is chain matrix multiply. This one will be a little different style from some of our early example. Actually, the solution will be a bit more complicated than the earlier examples that we looked at. So, let's look at a specific example so we can motivate this problem and then we'll go back and define the general problem. Our example will have four matrices A, B, C, D. Think of these matrices as having integer values for the entries. Our goal is to compute the product of these matrices A times B times C times D. And we'd like to do this in the most efficient manner possible. What exactly do we mean by most efficient? Let's look at a specific example. Let's say, A has of size 50 by 20, so it has 50 rows and 20 columns, B is of size 20 by one, C is of size 1 by 10, D is of size 10 by 100. Notice one thing, the number of columns of A has to match the number of rows of B. Also columns B has to match rows of C. Columns of C has to match rows of D. Why is that? When we multiply A x B, what we do is we take a row of A, this is A, and we take a column of B and we take the inner product. So we multiply entering and then we add it to the product of these, racks of these and so on. So the number of entries in this row has to equal the number entries in this column. And then we move onto the next row with the next column, next row with the next column. So this row has to have the same number of entries as this column. That's why columns here has to equal the number of rows here.