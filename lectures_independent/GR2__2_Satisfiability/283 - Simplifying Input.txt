Consider input F for 2-SAT problem. Here's an example input for 2-SAT. This consists of 4 variables x1, x2, x3, x4 and it has five clauses. Now I want to simplify the input to our 2-SAT problem. In particular I want to remove unit clauses. What's a unit clause? This is an example of a unit clause right here. This is the clause with exactly one literal in it. Now how can I remove it? Well, in order to satisfy this formula, I know that I have to satisfy this clause. In order to satisfy this clause, there's only one way. I have to set x1 to be false. So, I might as well go ahead and set x1 to be false and the resulting formula will be true satisfiable if and only if the original formula was satisfiable. So, here's the basic procedure for eliminating unit clauses. Take any unit clause, in this case x1 bar, and let's call that literal AI. So in this case AI is x1 bar. Then I'm going to satisfy that literal. So I'm going to set AI to be true. In this case, I'm going to set x1 bar to be true. What does it mean to set x1 bar to be true? That means to set x1 to be false. If I set the variable x1 to be false, then I satisfy this literal. Now if I set x1 to be false, now any clause which contains x1 bar I can eliminate it because those clauses are satisfied. So I can eliminate this clause. There are no other clauses containing x1 bar, so I can't eliminate any other clauses in this example. Now what else can I do? What about this x1? Why no x1 is set to false? So this literal will not be satisfied. So I might as well remove it. So this clause now becomes just x4 by itself. So I drop all occurrences of AI bar, then this formula then reduces to x3 or x2 bar, that's from the first clause and x4, that's from the third clause, and x4 bar or x2 from the third fourth clause, and X3 bar or X4 from the last clause. The third clause got reduced and the second clause got eliminated. That's called the resulting formula F prime. So this simplified formula is F prime. The original formula is F. What is the claim? The claim is that F, the original formula is satisfiable if and only if this reduced formula F prime is satisfiable. Then what can I do? Well now I can take this simplified formula F prime, and again there's another unit clause which got formed and now I can set x4 to be true, and then I can simplify the formula and I can keep going. Eventually I either end up with the empty formula, which is satisfied, or I end up with a formula where all clauses are of size exactly two. And that's how I'm going to simplify my input for 2-SAT problem. So I can take an arbitrary input for the 2-SAT problem and I can simplify it so that all of the clauses are of size exactly two by repeating this procedure over and over. Now the key observation that we just mentioned is that the original formula F is satisfiable if and only if this reduced formula F prime is satisfiable. Now this is clearly true since the only way to satisfy F the original formula is to take this unit clause. I have to satisfy it and therefore I must satisfy this literal. And then steps two and three are forced. Now the implication of this procedure is that I can keep applying it over and over as long as I have unit clauses and eventually the formula is either satisfied or all clauses are of size exactly two. So now in order to design an algorithm, I can assume that the input to my 2-SAT problem all of the clauses in that input are of size exactly two. This is going to make the input to the problem slightly easier for us. Now let's go ahead and see how this 2-SAT problem relates to the strongly connected components algorithm.