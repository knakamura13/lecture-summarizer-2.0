1
00:00:00,000 --> 00:00:04,290
 If we formalize the gritty approach that we just outlined on the previous slide,

2
00:00:04,290 --> 00:00:08,050
 this gives us Kruskal's algorithm for the MST problem.

3
00:00:08,050 --> 00:00:13,050
 So the input to Kruskal's algorithm is an undirected graph with weights on edges.

4
00:00:13,050 --> 00:00:17,035
 Now we want to consider these edges of this graph in increasing order of weight.

5
00:00:17,035 --> 00:00:19,185
 We want to consider the lowest weight edge first,

6
00:00:19,185 --> 00:00:21,750
 and the highest weight edge last.

7
00:00:21,750 --> 00:00:26,200
 So our first step of our algorithm is to sort the edges by increasing weight.

8
00:00:26,200 --> 00:00:28,975
 To do this, we can use something like merge sort.

9
00:00:28,975 --> 00:00:31,530
 We're going to use a set X to keep track of the set of

10
00:00:31,530 --> 00:00:34,635
 edges that we've inserted so far into our MST.

11
00:00:34,635 --> 00:00:37,650
 So we initialize X to the empty set.

12
00:00:37,650 --> 00:00:39,670
 Now we're going to go through the edges one by one.

13
00:00:39,670 --> 00:00:41,805
 And we are going to go through these edges in order.

14
00:00:41,805 --> 00:00:45,015
 The order is a sorted order by increasing weight.

15
00:00:45,015 --> 00:00:46,530
 So the first edge we consider,

16
00:00:46,530 --> 00:00:49,470
 is the one of the lowest weight and the last edge we consider,

17
00:00:49,470 --> 00:00:52,225
 is one of the edges of highest weight.

18
00:00:52,225 --> 00:00:55,100
 Now for a particular edge between V and W,

19
00:00:55,100 --> 00:00:58,474
 when do we add this edge E into our current tree?

20
00:00:58,474 --> 00:01:01,145
 Will we add it in if it doesn't create a cycle?

21
00:01:01,145 --> 00:01:03,540
 If adding this edge doesn't create a cycle,

22
00:01:03,540 --> 00:01:05,810
 then we add this edge into our current tree X.

23
00:01:05,810 --> 00:01:08,180
 Finally, you return X.

24
00:01:08,180 --> 00:01:08,180
 This will be an MST at the end of the algorithm.

