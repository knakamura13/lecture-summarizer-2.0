Integer linear programming (ILP) is proven NP-hard by reducing Max-SAT to an ILP. For a Max-SAT problem with N variables and M clauses (constraints), an equivalent ILP is constructed with N + M variables; Y_i for each original variable, and Z_j for each clause. Y_is are binary, representing the truth assignment of the corresponding variables (1 for true, 0 for false), while Z_js are also binary, indicating if the respective clause is satisfied (1) or not (0). This forms the basis of the NP-hardness proof for ILP, aligning the satisfaction of Max-SAT clauses with integer linear constraints.