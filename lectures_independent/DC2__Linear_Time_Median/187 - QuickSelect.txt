So we're given this unsorted list A and we've given an parameter K and we're trying to find the K smallest in A. Our first step, as in the quick sort algorithm, is to choose a pivot P. How exactly do we do that? Well that's exactly our going to be our main task. We'll get back to that later. After we choose a pivot P, we partition A into three sub-arrays based on this pivot, the smaller elements, equal elements and bigger elements. Now we're going to recursively search in one of these three list based on K and the size of this list. Now, if this small list is to say of size four, and K is at most four, then we know that the K smallest is in the small list. And in general, if K is at most the size of this list, then we can recursively search for the K smallest in the small list. So we run this algorithm recursively on this small list and search for the K smallest and that's the output of our algorithm. In the middle case, K is bigger than the size of the small list but it's not big enough that it resides in the big list. So therefore, we know that the K smallest is in the middle list and therefore the K smallest is exactly P. So we can just output P, no recursion needed in this case. Now in the final case, we know that the K smallest resides in the big list. So we're going to recursively search in the big list but we're not going to search for the K smallest, we're going to have to shift it, so we know that we're discarding these many elements, the size of these two lists. So we're going to look for the K minus the size of this list, minus the size of this list. So, instead of searching for the K smallest in this large list, we're going to look for the K minus the size of the small list, minus the size of the equal list. These are the elements that we're discarding. Now, this is the basic algorithm. But the key part is, how do we choose a pivot and what constitutes a good pivot? What does it mean to be good? Let's first look at what a good pivot means. What's a pivot which would lead to an order and time algorithm?