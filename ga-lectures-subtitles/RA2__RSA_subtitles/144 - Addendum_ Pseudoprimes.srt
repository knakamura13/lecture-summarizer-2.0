1
00:00:00,000 --> 00:00:04,825
 Here is the general algorithm for primality testing which handles Carmichael numbers.

2
00:00:04,825 --> 00:00:09,420
 The algorithm is essentially the same as before with one small observation.

3
00:00:09,420 --> 00:00:12,120
 I'll explain the algorithm using an example.

4
00:00:12,120 --> 00:00:16,220
 Let's consider the example of 1,729,

5
00:00:16,220 --> 00:00:17,940
 this is a composite number,

6
00:00:17,940 --> 00:00:19,815
 in fact, it's a Carmichael number.

7
00:00:19,815 --> 00:00:21,390
 So our previous algorithm,

8
00:00:21,390 --> 00:00:24,390
 is unlikely to detect that is compiler.

9
00:00:24,390 --> 00:00:26,670
 Now, let's first recall our previous approach.

10
00:00:26,670 --> 00:00:32,735
 We first choose a random number Z between one and 1,728.

11
00:00:32,735 --> 00:00:34,905
 For concreteness and simplicity,

12
00:00:34,905 --> 00:00:37,435
 let's suppose that Z is five,

13
00:00:37,435 --> 00:00:39,625
 I chose a small number to make it simpler.

14
00:00:39,625 --> 00:00:43,575
 Now, our previous approach takes these numbers Z, which is five,

15
00:00:43,575 --> 00:00:47,505
 and we raise it to the power of 1,728,

16
00:00:47,505 --> 00:00:49,015
 which is X minus one,

17
00:00:49,015 --> 00:00:53,455
 and we take that mod 1,729, which is X.

18
00:00:53,455 --> 00:00:57,900
 So, we look at Z raised to the power X minus one mod X.

19
00:00:57,900 --> 00:00:59,450
 Now, if this is not one,

20
00:00:59,450 --> 00:01:02,580
 then we have a proof that this number is composite.

21
00:01:02,580 --> 00:01:04,920
 Well, since this is a Carmichael number,

22
00:01:04,920 --> 00:01:08,370
 this is unlikely to work and in fact it doesn't work.

23
00:01:08,370 --> 00:01:15,295
 Five raised to the power of 1,728 is congruent to one, mod 1,729.

24
00:01:15,295 --> 00:01:17,770
 So, firmus test fails in this case.

25
00:01:17,770 --> 00:01:21,630
 Well, let's go back and look at how we compute five raised to this power.

26
00:01:21,630 --> 00:01:24,135
 Well of course, we do use repeated squaring.

27
00:01:24,135 --> 00:01:26,290
 Now, in the spirit of repeated squaring,

28
00:01:26,290 --> 00:01:32,262
 let's take this number 1,728 and let's take out all the factors of two that we can.

29
00:01:32,262 --> 00:01:35,650
 Now, notice that this number is even Y,

30
00:01:35,650 --> 00:01:38,730
 while this number X, we're checking whether it's prime or not.

31
00:01:38,730 --> 00:01:48,505
 So, it's odd and therefore X minus one is even or 1,728 is equal to two times 864,

32
00:01:48,505 --> 00:01:51,270
 we take out another factor of two and repeat.

33
00:01:51,270 --> 00:01:52,935
 We can do it six times,

34
00:01:52,935 --> 00:01:56,315
 so we get two to the six times 27.

35
00:01:56,315 --> 00:01:58,475
 We stop when we reach an odd number.

36
00:01:58,475 --> 00:02:05,990
 Let's start a new approach by computing five raised to the power 27 mod 1,729.

37
00:02:05,990 --> 00:02:08,580
 Now of course, this exponent might be very large, so of course,

38
00:02:08,580 --> 00:02:12,565
 we're going to use the fast modular exponentiation algorithm to compute it.

39
00:02:12,565 --> 00:02:16,375
 Suppose we ran it, and we computed this exponent,

40
00:02:16,375 --> 00:02:21,300
 it turns out it's congruent to 1,217.

41
00:02:21,300 --> 00:02:25,745
 Now, let's apply repeated squaring six times to get to this result.

42
00:02:25,745 --> 00:02:28,305
 So let's take this result and square it.

43
00:02:28,305 --> 00:02:31,530
 So, we're computing five to the power 54,

44
00:02:31,530 --> 00:02:34,585
 and we're doing this mod X.

45
00:02:34,585 --> 00:02:36,810
 So we take the previous results squared,

46
00:02:36,810 --> 00:02:40,885
 and that's congruent to 1,065 mod X,

47
00:02:40,885 --> 00:02:43,875
 then we take this previous result and we square it,

48
00:02:43,875 --> 00:02:49,975
 and it turns out that 1,065 squared is congruent to one mod X.

49
00:02:49,975 --> 00:02:54,450
 Now, we continue, of course once we get one it's going to continue one,

50
00:02:54,450 --> 00:02:58,104
 so the next result will be one squared which is one of course,

51
00:02:58,104 --> 00:03:00,640
 and we square it again and we're going to get one again.

52
00:03:00,640 --> 00:03:01,935
 We do it a few more times,

53
00:03:01,935 --> 00:03:05,190
 and eventually we get to five raised to the power,

54
00:03:05,190 --> 00:03:09,405
 two to the six times 27, and that will be one,

55
00:03:09,405 --> 00:03:14,625
 which we know from before, mod 1,729.

56
00:03:14,625 --> 00:03:16,570
 Now, let's look backwards.

57
00:03:16,570 --> 00:03:18,880
 So, we end with one here,

58
00:03:18,880 --> 00:03:21,115
 we get this string of ones.

59
00:03:21,115 --> 00:03:25,805
 Let's look at the first number which is different from one, what do we know about it?

60
00:03:25,805 --> 00:03:32,050
 In this case, it's 1,065 but 1,065 squared is one mod X.

61
00:03:32,050 --> 00:03:36,850
 Since 1,065 squared is one mod X therefore,

62
00:03:36,850 --> 00:03:41,240
 1,065 is a square root of one mod X.

63
00:03:41,240 --> 00:03:44,500
 In fact, it's what we call a non-trivial square root of one mod X.

64
00:03:44,500 --> 00:03:46,430
 Why is it non-trivial?

65
00:03:46,430 --> 00:03:49,085
 What are trivial squared roots of one mod X?

66
00:03:49,085 --> 00:03:53,513
 Well, the trivial square roots of one mod X are one and minus one.

67
00:03:53,513 --> 00:03:59,210
 Why? Well, we always know that one squared is one and negative one squared is one.

68
00:03:59,210 --> 00:04:04,190
 That's true in real arithmetic and it's also true in modular arithmetic.

69
00:04:04,190 --> 00:04:10,475
 So, every number X has these two trivial square roots of one mod X.

70
00:04:10,475 --> 00:04:16,405
 It turns out that prime numbers X only have these two square roots of one mod X.

71
00:04:16,405 --> 00:04:23,355
 So, one and minus one are the only two square roots of one mod X when X is prime.

72
00:04:23,355 --> 00:04:28,740
 But if we can show a non-trivial square root of one mod X then therefore,

73
00:04:28,740 --> 00:04:34,380
 that implies that X is composite because prime numbers only have the trivial ones.

74
00:04:34,380 --> 00:04:36,180
 So, if we show a non-trivial one,

75
00:04:36,180 --> 00:04:38,265
 that proves that X is composite.

76
00:04:38,265 --> 00:04:42,210
 In this case, we've shown that this number X has

77
00:04:42,210 --> 00:04:46,620
 a non-trivial square root of one, namely 1,065.

78
00:04:46,620 --> 00:04:49,350
 It turns out that for a composite number X,

79
00:04:49,350 --> 00:04:51,270
 even if it's Carmichael for

80
00:04:51,270 --> 00:04:55,440
 at least three quarters of the choices of Z, this algorithm works.

81
00:04:55,440 --> 00:05:00,660
 Namely, if we compute Z raised to the power X minus

82
00:05:00,660 --> 00:05:08,705
 one mod X and if we get one and we go backwards in this approach,

83
00:05:08,705 --> 00:05:10,950
 so we use this repeated squaring and then we work

84
00:05:10,950 --> 00:05:13,830
 backwards from the one to the first non-one,

85
00:05:13,830 --> 00:05:19,035
 this leads to a non-trivial square root of one mod X, and therefore,

86
00:05:19,035 --> 00:05:21,180
 proves that X is

87
00:05:21,180 --> 00:05:26,250
 composite and this works for at least three quarters of the choices of Z.

88
00:05:26,250 --> 00:05:28,710
 Now, the mathematics for proving that at least three quarters of

89
00:05:28,710 --> 00:05:31,170
 the choices of Z work is quite

90
00:05:31,170 --> 00:05:34,410
 complicated but the algorithm itself that we're using

91
00:05:34,410 --> 00:05:38,530
 here is basically the same as before with the repeated squaring added in.

92
00:05:38,530 --> 00:05:40,500
 So, to deal with Carmichael numbers,

93
00:05:40,500 --> 00:05:42,975
 we use basically the same algorithm as before,

94
00:05:42,975 --> 00:05:45,090
 except when formats test fails,

95
00:05:45,090 --> 00:05:45,090
 we go back and we check whether we get a non-trivial square root of one mod X.

