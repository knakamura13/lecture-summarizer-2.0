RSA relies on the difficulty of factoring the product of two large prime numbers. The foundation of RSA encryption/decryption begins with Fermat's Theorem and the concept that a number raised to the product of a specific pair of exponents related to modulo prime numbers will return the original number. In RSA, a message, Z, encrypted with an exponent, B, and then decrypted with its inverse exponent, C - mutually inverse with respect to mod (P-1), where P is a prime number - yields the original message Z under mod P due to Fermat's Theorem. To secure the process against deducing C given B and P, Euler's Theorem is utilized with two primes, P and Q, and their product N. Encryption and decryption exponents, D and E, are inverses mod (P-1)(Q-1). Z raised to the power DE under mod N returns Z due to Euler's Theorem, assuming Z and N are relatively prime. The public knows E and N but not D - the decryption key - which is privately derived from P, Q and E using the extended Euclidean algorithm. The RSA algorithm's security is underpinned by the impracticality of deducing D without knowledge of P and Q, even while knowing their product, N.