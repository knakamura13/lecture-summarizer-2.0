FFT computes polynomial A(x) at nth roots of unity using matrix M and vector a to output A. Inverse FFT aims to recover coefficient vector a from A using the inverse of M, 1/n times M with (Omega_n)^(n-1). By running FFT using A and (Omega_n)^(n-1) as inputs and scaling the result by 1/n, we retrieve a. Interestingly, inverse FFT is similar to FFT, differing only in the order of nth roots of unity, clockwise versus counterclockwise. This fact means FFT algorithms are interchangeable for inverse FFT, given any nth root of unity. This completes the polynomial multiplication and convolution algorithm, utilizing the established FFT approach.