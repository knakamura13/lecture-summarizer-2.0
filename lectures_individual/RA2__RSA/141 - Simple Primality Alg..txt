We have an n-bit number r, and here's our simple algorithm for checking whether r is prime or not based on Fermat's Little Theorem. And this is ignoring Carmichael numbers, it will be an efficient algorithm for primality testing. Recall, that if r is composite then, at least half these numbers in this set are witnesses to that fact using Fermat's Little Theorem. Whereas, if r is prime, then none of these numbers in this set are witnesses to the fact because r is prime. So, what are we going to do? We're going to choose a Z from this set. How do we choose a Z from this set? Well, we choose a Z randomly, uniformly at random from this set. So, we choose a random number between one and r_minus_one. Now, we do Fermat's Test for this Z. So, we compute Z raised to the power r_minus_one_mod_r and we check whether that's congruent to one, or not. If Z raised to the power r_minus_one is congruent to one_mod_r then what do we know? Actually, we don't know for sure either way, but we think that r is prime. What happens if Z raised to r_minus_one is not congruent to one_mod_r? Then, in this case we're sure that r is composite because this Z is a witness to the fact that r is composite.