We had this linear algebraic view of FFT. Now let's simplify it a little bit. This column vector is just the vector a. Let's denote this column vector by capital A. And let's denote this matrix by M, let's use subscript n to denote its size M by n. And as we observed, it's simply a function of omega sub n. So given this variable, and this size, then we know it's M by n, and it says powers of this variable, in this case omega sub n. Therefore, this expression can be rewritten in the following manner. This vector capital A is equal to this matrix capital M times this vector little a. This product is exactly what FFT is computing. When we run FFT with inputs little a and omega sub n, it computes the product of this matrix and this vector and outputs this vector capital A, which is the value of this polynomial at the nth root of unity. Now what do we want to do for inverse FFT? Now we want to take this value of this polynomial at these nth roots of unity and compute the coefficients. Well, suppose this matrix has an inverse and we multiply both sides by this inverse. Well, then we have that the inverse of this matrix times this vector, capital A, equals this vector little A. So FFT computes this product, this matrix M times this vector, little a. For inverse FFT, we want to compute the inverse of this matrix times this vector, capital A. How does this inverse of this matrix relate to the original matrix? Well, actually they're very similar to each other.