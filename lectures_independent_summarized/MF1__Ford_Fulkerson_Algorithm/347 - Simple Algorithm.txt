Outline a basic algorithm using a flow network where we initialize flow to zero. Capacities equal input capacities initially because flow is zero. Find any s-t path (from source 's' to sink 't') by running BFS or DFS to identify paths with available capacity. The path doesn't need to be optimal; simply must have available capacity on all edges. Once a path is found, calculate minimum available capacity on this path, which is the max flow that can be sent through it. Augment this flow by the calculated amount, adjust the flow on the path accordingly, update available capacities, and repeat the process. Continue until no more s-t paths can be found with available capacity. The algorithm stops when no further augmentation is possible, which may yield a sub-optimal flow, such as the described example ending with a flow of 10 whereas the network has the capacity for a flow of 17.