Now recall a strongly connected component algorithm. What was the main approach? We found a sink component. We marked those verses in the sink SCC and then we removed that sink SCC and recursed on the remainder graph. What are we going to do here? We're going to do a similar approach. We're going to find a sink SCC. We're going to do an assignment for that sink SCC and then we're going to rip it out and work on the remainder graph. So we're going to find a sink strongly connected component. Let's call it S. As an example, here's a sink SCC. It contains x3 bar and x1. They have edges coming in and no edge is going out. Now should we set these literals to be true or false? Well, we should set them to be true. Why? Well, let's consider this edge. Suppose the head of the edge is x2. Now if later in the algorithm we set x2 to be true, then this implication and says that we have to set x3 to be false. So we have to satisfy this literal. So if we want to rip out this component and not worry about it again, then we better satisfy all these literals which means setting x3 to be false in this case and x1 to be true in this case. So this is what we're going to do. We're going to go ahead and set this component to be true which means we're going to satisfy all the literals in S. So in this case we set x3 bar to be satisfied which means we set x3 to be false. And we want to satisfy x1, so we set x1 to be true. Now there are no outgoing edges. So there are no implications that we have to follow because of this setting. There are in-coming edges but we satisfied all of these literals, therefore any incoming edges, the later assignment which may imply this implication, we don't have to worry about because we've already satisfied the tail of this implication. So what can we do? We can rip out this component and work on the remainder of the graph. So we're going to remove this component and repeat the procedure on the remainder of the graph. But, there's one problem. What about the complement of this set? What about x3 and x1 bar? By satisfying this literal x3 bar, we've not satisfied x3 and we've not satisfied x1 bar. So maybe there are edges in to x3 and x1 bar and we have not satisfied these. And later we're going to have to follow this edge of implication and we're going to have to set x3 to be satisfied which means we're going to have a contradiction. We're going to have a problem. Now what would be great is if this complement set S bar is a source SCC. If this set S bar is a source SCC then what do we know? Then we know it has no incoming edges. Now it's safe to set S bar to false because there is no incoming edges. And since we set it to false, we don't have to worry about any implications coming out of this set. It's a source SCC so their edge is coming out. But we don't have to follow those implications because we only have to follow those implications if the head of the edge is set to true. But the head of edge is set to false so we don't have to follow the out edges and there are no in-coming edges. So it's safe to set it to false. So that's going to be the key. If we take a sink SCC, then that sink we want to set to true. But then we have to worry about its complement. The key is that the complement set is going to be a source. So what do we want to do for a source? We're going to set the source to be false.