Now, let's dive into the proof that the independent set problem is NP-complete. The first step we have to show is that this problem, the Independent-set problem lies in the class NP. To do this, we need to show that we can verify solutions in polynomial time. So given an input to the independent-set problem, this is specified by a graph G and the goal little g and given a proposed solution S. We need to verify that S is in fact the solution to the independent-set problem on this input. In order n squared time, we can consider all pairs of vertices in this subset S. And we can check that this pair of vertices x and y are not adjacent. There's not an edge x, y in the input graph. Once we check this for all pairs of vertices in S, then we know that there are no edges contained in the set S and therefore S is an independent set. And finally in order n time, we can check the size of S and see that the size of S is at least g, our goal. If those two statements are true, then we know that our proposed solution S is in fact a solution to this input. That proves that the independent-set problem is in the class NP. Next, we have to show that the independent-set problem is at least as hard as every problem in the class NP. How do we do that? Well, we take something which is known to be at least as hard as everything in the class NP such as SAT or 3SAT, and we show a reduction from that known NP-complete problem to this new problem. We're going to show a reduction from the 3SAT problem to the independent-set problem. Why consider a 3SAT instead of SAT? Well, 3SAT is just easier. It's a simpler problem. We know that all the clauses are of size one, two, or three. If we consider a SAT, then the clauses are of arbitrary size. Now, let's look at the reduction from 3SAT to the independent-set.