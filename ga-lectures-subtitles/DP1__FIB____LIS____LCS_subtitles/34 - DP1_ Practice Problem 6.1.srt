1
00:00:00,000 --> 00:00:03,480
 The input to this problem is a_1 through a_n.

2
00:00:03,480 --> 00:00:06,625
 Our goal is to find the contiguous sub-sequence.

3
00:00:06,625 --> 00:00:10,370
 Noticed, that a contiguous subsequence is the same as a substring,

4
00:00:10,370 --> 00:00:13,650
 and we want to find the substring with maximum sum.

5
00:00:13,650 --> 00:00:17,160
 Now, the first step is to define the subproblem in words.

6
00:00:17,160 --> 00:00:21,030
 I'm going to try the same problem on a prefix of the input.

7
00:00:21,030 --> 00:00:22,565
 So, we have a parameter i,

8
00:00:22,565 --> 00:00:24,595
 which is the length of the prefix.

9
00:00:24,595 --> 00:00:28,740
 So, we have an i, and this is going to vary between zero and n. And now,

10
00:00:28,740 --> 00:00:30,280
 I'm going to find s of i,

11
00:00:30,280 --> 00:00:31,965
 in words, first off.

12
00:00:31,965 --> 00:00:34,985
 It's going to be the max sum that I can obtain.

13
00:00:34,985 --> 00:00:37,335
 The same format as the original problem.

14
00:00:37,335 --> 00:00:39,990
 But, instead of considering the whole input,

15
00:00:39,990 --> 00:00:42,840
 and I'm going to consider the first i numbers.

16
00:00:42,840 --> 00:00:48,425
 So, it's a max sum from a substring of a_1 through a_i.

17
00:00:48,425 --> 00:00:51,810
 So it's the first i characters of the input.

18
00:00:51,810 --> 00:00:54,045
 Now, we want to try to find a recurrence relation,

19
00:00:54,045 --> 00:00:59,825
 we want to express s of i in terms of s_1 through s_i minus one, smallest subproblems.

20
00:00:59,825 --> 00:01:01,800
 Let's take s of i minus one,

21
00:01:01,800 --> 00:01:06,870
 is the max sum that we can obtain from a substring of a_1 through a_i minus one.

22
00:01:06,870 --> 00:01:08,470
 So, let's take that sum.

23
00:01:08,470 --> 00:01:10,845
 Now, there's two possibilities that I would consider.

24
00:01:10,845 --> 00:01:14,670
 Either, or add on, a_i on to the end of it or not.

25
00:01:14,670 --> 00:01:18,775
 First off, can I add on a_i on to the end of this solution?

26
00:01:18,775 --> 00:01:22,130
 Well, I have to maintain that it's a substring, that is contiguous.

27
00:01:22,130 --> 00:01:23,910
 I don't know where this one ends, so,

28
00:01:23,910 --> 00:01:27,605
 I don't know whether I can add on a_i unto the end of this solution.

29
00:01:27,605 --> 00:01:29,880
 So, I need to know where this one ends.

30
00:01:29,880 --> 00:01:32,040
 With this current definition, there's no way,

31
00:01:32,040 --> 00:01:35,745
 I don't know how to express s of i in terms of the smaller subproblems.

32
00:01:35,745 --> 00:01:40,545
 But I notice, that if I knew where this solution ended at,

33
00:01:40,545 --> 00:01:42,150
 so, if it included a of i minus one,

34
00:01:42,150 --> 00:01:46,590
 then, I know that if it includes

35
00:01:46,590 --> 00:01:51,300
 a_i minus one then I can add on a_i and maintain that it's a substring.

36
00:01:51,300 --> 00:01:51,300
 So, I have to go back and strengthen my subproblem definition.

