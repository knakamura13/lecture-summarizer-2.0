We're going to prove now, that integer linear programming is NP-hard. To do that we're going to reduce the Max-SAT problem to integer linear program. Consider an input f for the Max-SAT problem and say that f has N variables and M constraints. In the integer linear program that we create, what are the variables going to be? Well, for each variable in the formula f, we can add a variable Y_i to the integer linear program that we create. And for each clause C_j, we're going to add a variable Z_j. So our initial linear program is going to have N + M variables and we're going to add the constraints that the Y_i's are between zero and one, and also each Z_j is between zero and one. And since these variables are constrained to be integer value, they'll either receive value one or zero. It can't receive any fractional value. Now intuitively what's going on? These Y_is are going to correspond to whether this variable X_i is set to True or false. So, Y_i equals one, corresponds to X_i being true. X_i being false corresponds to Y_i being zero. Z_j is going to correspond to whether this clause is satisfied or not. So it's going to take value one, if this clause is satisfied by the literals appearing in it and it's gonna take value zero, if this clause is not satisfied. That's the intuition.