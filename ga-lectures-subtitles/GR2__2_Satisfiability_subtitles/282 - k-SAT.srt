1
00:00:00,000 --> 00:00:06,375
 A satisfying assignment for this formula is the assignment which sets X_1 to be false,

2
00:00:06,375 --> 00:00:08,825
 X_2 to be true, X_3 to be false.

3
00:00:08,825 --> 00:00:12,130
 X_1 to be false satisfies this clause,

4
00:00:12,130 --> 00:00:14,875
 X_2 to be true satisfies this clause,

5
00:00:14,875 --> 00:00:18,447
 X_3 to be false satisfies this clause and this clause.

6
00:00:18,447 --> 00:00:21,970
 Now we're going to look at a restrictive form of the SAT problem called k-SAT.

7
00:00:21,970 --> 00:00:26,265
 For example, for three-SAT,

8
00:00:26,265 --> 00:00:30,517
 the input is going to be a formula in CNF with n variables and m clauses.

9
00:00:30,517 --> 00:00:33,130
 But now, all the clauses are of size,

10
00:00:33,130 --> 00:00:36,337
 at most, three, or k in general.

11
00:00:36,337 --> 00:00:39,545
 Now, the size of a clause is the number of literals in it.

12
00:00:39,545 --> 00:00:43,120
 So, this formula is an example of a three-SAT formula.

13
00:00:43,120 --> 00:00:47,650
 Actually, it's an example of a k-SAT formula for all k at least three.

14
00:00:47,650 --> 00:00:51,355
 Now, what we're going to see later is that SAT problem is NP-complete.

15
00:00:51,355 --> 00:00:53,530
 And for every k at least three,

16
00:00:53,530 --> 00:00:56,315
 we'll see that the k-SAT problem is NP-complete.

17
00:00:56,315 --> 00:00:57,760
 So, three-SAT is NP-complete,

18
00:00:57,760 --> 00:00:59,985
 four-SAT is NP-complete, and so on.

19
00:00:59,985 --> 00:01:04,775
 What we're going to see now is a polynomial time algorithm for two-SAT.

20
00:01:04,775 --> 00:01:07,420
 So, there's a very interesting dichotomy for two-SAT,

21
00:01:07,420 --> 00:01:09,790
 that there's a polynomial time algorithm and we're going to

22
00:01:09,790 --> 00:01:12,910
 solve it using our strongly connected components algorithm.

23
00:01:12,910 --> 00:01:14,830
 And then, when k is at least three,

24
00:01:14,830 --> 00:01:17,175
 so three-SAT is NP-complete.

25
00:01:17,175 --> 00:01:17,175
 So let's dive into our algorithm for two-SAT.

