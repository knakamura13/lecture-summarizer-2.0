Now let's recap what we have, FFT is computing the product of this matrix capital M times little a and that's outputting capital A, which is the value of this polynomial at these nth roots of unity. For inverse FFT, we want to do the reverse so we want to compute the product of an inverse times capital A and get back the coefficient vector little a. Now we claim the following Lemma, which we'll prove momentarily, the inverse of M is one over n times M of Omega sub n to the n minus one so we take the same matrix instead of parameterize by Omega sub n, we parameterize it by Omega sub n to the n minus one which is just a different root of unity. So let's take this expression multiply both sides by little n and then substitute in n inverse with this quantity. So we have n times little a and then for M inverse, we replace it by this quantity M sub n of Omega sub n to the n minus one times capital A. Notice this corresponds to an FFT computation. In particular, we want FFT with instead of using input little a, we use in put capital A and instead of using Omega sub n as the nth root unity, we use Omega sub n to the end n minus one which is also an nth root unity. Now it's quite intriguing what's happening here, we're taking the value of this polynomial A inverse at the nth root unity and we're treating these values as coefficients for a new polynomial. Now we run FFT for this new polynomial and instead of using the nth root of unity Omega sub n, we're using this nth root unity. It's still an nth root unity so we can again run FFT. So we run FFT with these two inputs, we get back a vector which we scale by one over n and this gives us the coefficients for our polynomial A of x. So we can go from the values at the nth root unity to the coefficients. One more intriguing fact before we move on to the proof of this Lemma, now FFT normally, we run it with Omega sub n. It is this point right here. Then the end points we consider are Omega sub n to the powers which corresponds to the nth root unity going from one to Omega sub n and and so on around the unit circle in this manner. So we go counter-clockwise around the nth root unity. Now what happens when we run FFT with Omega sub n to the n minus one? That's this point here. Now the only difference is we're going over the same points but we're going over them in different order. Now we go over the nth root unity in clockwise order. So inverse FFT is the same as FFT, we just go over the nth root unity in the opposite order. That's the amazing fact. And we can use the same algorithm as we detailed before because when we detail the FFT algorithm we allowed any nth root unity there. Now I will proof the Lemma and that'll complete our polynomial multiplication algorithm and our convolution algorithm.