Divide and conquer algorithm for n-bit int multiplication, assuming n=2^k. Split x into XL (first n/2 bits) and XR (last n/2 bits), y into YL and YR similarly. Compute products: XL*YL=A, XR*YR=B, XL*YR=C, XR*YL=D. Combine as Z=x*y=2^n*A + 2^(n/2)*(C+D) + B. Running time not detailed, but algorithm recursively computes four n/2-bit multiplications and combines them to produce result Z.