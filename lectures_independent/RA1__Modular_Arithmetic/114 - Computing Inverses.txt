Now, let's look at how we compute inverses. To do this, we're going to use the extension of Euclid's algorithm called the Extended Euclidean Algorithm. Euclid's algorithm takes as input two parameters X and Y. And the same will be true for Extended Euclidean Algorithm. These parameters x and y are integers, and we assume that these parameters are ordered, so that x is at least y and both of these are non-negative. Now, here's the difference: the output of the algorithm here is three parameters--the alpha and beta. These are integers. Now D is the gcd of x and y. So, if we just pay attention to the first parameter d, this will behave just as in Euclid's algorithm. Now, what are these additional parameters alpha and beta? Well these parameters alpha and beta satisfy the following relation. D is guaranteed to equal x times alpha plus Y Times beta. Well, this is a bit mysterious, why do I want an alpha and beta which satisfy this relation? Let's look at, why it's useful to have an alpha and beta satisfying this relation. Recolor goal is to compute inverses. We're going to be in a setting where we're going to run extended Euclide on x and capital N. We're trying to compute the inverse of x mod N. First off, do we know that this inverse exists? Well, we have to look at the gcd of x and N, to see whether the inverse exists. We need them to be relatively prime. We need that the gcd of x and N is 1 and then the inverse exists. Well, when we run extended Euclid algorithm, d the first parameter gives us the gcd of x and y. In this case it's x and N, so if d equals 1 then we know the inverse exists. So where in this scenario where d equals 1, when we run extended Euclid on x and N and we get back this alpha and beta which satisfy this relation. So we know that one equals x times alpha plus N times beta. Now from this alpha or this beta, can we figure out the inverse of x mod N? Well this relation is true, so now if we take mod N of both sides, then the relation will still be true. So, now we have that 1 is congruent to X alpha plus N times beta mod N. Now can we simplify this? Yeah, look at the second term here on the right hand side. This is N times beta. This is a multiple of N, therefore it's zero mod N. So, we are going to place N times beta by zero. So, that goes away and what are we left with, we're left with one is congruent to x times alpha mod N. That means that alpha is the inverse of x mod N, because alpha is the integer where X times that integer alpha is congruent to 1 mod N, that's the definition of its inverse. So, we shown that alpha is the inverse of x mod N, in the case where d, the gcd of the two parameters, is equal to 1. And similarly beta is the inverse of an N mod x. So, in the case where these two parameters are relatively prime to each other, so their gcd is 1, so d equals 1, then alpha gives the inverse of x mod y and beta gives inverse of y mod x.