1
00:00:00,000 --> 00:00:03,310
 I start with the satisfiability problem.

2
00:00:03,310 --> 00:00:06,210
 This was one of the original NP complete problems.

3
00:00:06,210 --> 00:00:09,930
 Therefore, it has some special significance in the theory of NP completeness.

4
00:00:09,930 --> 00:00:13,740
 Now this is a SAT problem which we defined before when we looked at graph algorithms.

5
00:00:13,740 --> 00:00:16,355
 And we saw an algorithm for 2-SAT.

6
00:00:16,355 --> 00:00:22,055
 Now the input of SAT is a Boolean formula f in conjunctive normal form, CNF.

7
00:00:22,055 --> 00:00:24,375
 And we'll say that f has n variables,

8
00:00:24,375 --> 00:00:27,390
 x_1 through x_n, and it has m clauses.

9
00:00:27,390 --> 00:00:30,880
 Now the output is a satisfying assignment if one exists. What does that mean?

10
00:00:30,880 --> 00:00:33,630
 That means an assignment to the variables, true or false,

11
00:00:33,630 --> 00:00:37,155
 for each of the variables, so that when we evaluate the formula,

12
00:00:37,155 --> 00:00:38,695
 it evaluates to true.

13
00:00:38,695 --> 00:00:40,365
 Now if there is no satisfying assignment,

14
00:00:40,365 --> 00:00:43,635
 so there's no way to assign true or false to each of the variables,

15
00:00:43,635 --> 00:00:46,300
 so that the formula evaluates to true.

16
00:00:46,300 --> 00:00:48,660
 Then we simply output no.

17
00:00:48,660 --> 00:00:54,055
 Now here's an example input to SAT with three variables and four clauses.

18
00:00:54,055 --> 00:00:54,055
 So n equals three and m equals four.

