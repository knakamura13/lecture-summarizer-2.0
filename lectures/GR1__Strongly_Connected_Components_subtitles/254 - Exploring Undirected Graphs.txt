Now let's look at the pseudocode for the Explore procedure, and let's say we're running Explore from a vertex Z. This is our first time visiting Z. So we have to store its connected component number as the current count for the connected components, and we have to set Z to be visited. Now, we want to explore all edges out of Z. Recall that G was given to us an adjacency list representation, so now we can look through the linked list of neighbors of Z. Now for a particular neighbor W, if W hasn't been visited yet then we recursively explore from W and we repeat this procedure. Now what's a running time of this algorithm? Hopefully, you recall that DFS is a linear time algorithm. So the running time is O(N + M). For undirected graphs, this is it, this gets all the information that we're trying to glean, the connected components of the graph. Now we're going to turn to directed graphs and we're going to need more information from our DFS in order to obtain connectivity information.