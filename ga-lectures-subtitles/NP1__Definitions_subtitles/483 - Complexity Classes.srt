1
00:00:00,090 --> 00:00:06,205
 We're going to define NP as the class of all search problems.

2
00:00:06,205 --> 00:00:08,043
 What exactly do we mean by search problems?

3
00:00:08,043 --> 00:00:10,590
 Well, we'll look at that in more detail in a second.

4
00:00:10,590 --> 00:00:13,430
 Now, there's one important distinction that we need to bring out at the beginning.

5
00:00:13,430 --> 00:00:16,860
 We're using the class of search problems to find its class NP.

6
00:00:16,860 --> 00:00:21,660
 Now traditionally, and what many of you may have seen in your undergraduate course,

7
00:00:21,660 --> 00:00:27,750
 is that the NP is defined with the class of decision problems instead of search problems.

8
00:00:27,750 --> 00:00:29,745
 Now, this is a somewhat minor distinction.

9
00:00:29,745 --> 00:00:31,530
 But for consistency in this class,

10
00:00:31,530 --> 00:00:33,885
 we're going to use search problems for NP.

11
00:00:33,885 --> 00:00:36,690
 Why am I using search problems instead of decision problems?

12
00:00:36,690 --> 00:00:39,330
 Well, it's somewhat more natural to use search problems.

13
00:00:39,330 --> 00:00:44,250
 In addition, the group of textbook also defines NP with respect to search problems.

14
00:00:44,250 --> 00:00:46,523
 Now, if you've seen decision problems before,

15
00:00:46,523 --> 00:00:48,630
 the appeal of search problems is that it gets rid of

16
00:00:48,630 --> 00:00:51,815
 the need for a witness for particular instances.

17
00:00:51,815 --> 00:00:53,490
 In any case, let's forget about the notion of

18
00:00:53,490 --> 00:00:57,370
 decision problems and let's focus on search problems in this course.

19
00:00:57,370 --> 00:00:59,820
 What do we mean by search problems?

20
00:00:59,820 --> 00:01:02,970
 Let's look at a rough definition of search problems and then in the next slide,

21
00:01:02,970 --> 00:01:05,520
 we will look at a formal definition of search problems.

22
00:01:05,520 --> 00:01:09,300
 Now, roughly, a search problem is a problem where we can efficiently verify

23
00:01:09,300 --> 00:01:14,715
 solutions so if I give you particular input and I give you a solution to that input,

24
00:01:14,715 --> 00:01:18,950
 then I can verify that that solution is in fact a solution to that input.

25
00:01:18,950 --> 00:01:22,062
 I can check solutions in polynomial time

26
00:01:22,062 --> 00:01:25,470
 so the time it takes to generate the solution doesn't have anything to do with it.

27
00:01:25,470 --> 00:01:29,095
 All that matters is if I give you an input and I give you a solution,

28
00:01:29,095 --> 00:01:32,040
 then you can verify that solution in polynomial time.

29
00:01:32,040 --> 00:01:34,350
 Now, if I want to know about the time it takes to generate

30
00:01:34,350 --> 00:01:37,680
 a solution then look at the class P. Now,

31
00:01:37,680 --> 00:01:40,770
 the class P are those search problems which can be solved in

32
00:01:40,770 --> 00:01:44,655
 polynomial time so I can generate a solution in polynomial time.

33
00:01:44,655 --> 00:01:48,840
 Whereas, NP just says that it can verify solutions in polynomial time.

34
00:01:48,840 --> 00:01:50,580
 Now, of course, if I can generate a solution

35
00:01:50,580 --> 00:01:54,490
 polynomial time then I can also verify solutions in polynomial time.

36
00:01:54,490 --> 00:01:56,690
 So, P is a subset of NP.

37
00:01:56,690 --> 00:02:01,190
 Any problem that can be solved in P can also be solved in NP.

38
00:02:01,190 --> 00:02:04,130
 Formally, we have that P as a subset of NP.

39
00:02:04,130 --> 00:02:07,800
 Why is that? Well, NP is a class of all search problems so these

40
00:02:07,800 --> 00:02:12,000
 are problems where we can verify solutions in polynomial time.

41
00:02:12,000 --> 00:02:16,370
 P is a class of search problems that can be solved in polynomial time.

42
00:02:16,370 --> 00:02:19,620
 A problem in P means that we can verify solutions in

43
00:02:19,620 --> 00:02:19,620
 polynomial time and we can generate solutions in polynomial time.

