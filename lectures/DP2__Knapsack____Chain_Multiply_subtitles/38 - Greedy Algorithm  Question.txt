Now if you are presented with this problem in real life, the first approach you might try is a Greedy approach. let's take a look at a specific example, and then this will highlight the pitfalls with the Greedy approach. Now here's an example with four objects. The values are 15, 10, eight and one. The weights are 15, 12, 10 and five. The total capacity will be 22. Now we're looking at the version where we have one copy of each object that we can use. Let's take a look and make sure that you understand the problem. What is the optimal solution for this problem? What does the subset of objects which attain the maximum value while fitting in the backpack?