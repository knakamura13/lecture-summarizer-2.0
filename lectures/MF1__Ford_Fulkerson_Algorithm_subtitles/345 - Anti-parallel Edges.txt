Before we dive into algorithms for the max-flow problem, let's look at one slight simplification of the input. Here's an example flow network. Notice that there are edges from A to B, and also an edge from B to A. These are anti-parallel edges, we'll call them. Now, I'd like to remove these anti-parallel edges. Why we want to remove these anti-parallel edges will become clear later when we come up with our algorithms for the max-flow problem. But for now, let's just say, we want to simplify the input a little bit. So I wanted to find an equivalent flow network, and work with that equivalent flow network, and in that equivalent flow network, I don't have any anti-parallel edges. So let's put some capacities on these edges. So here are the edge capacities for this flow network. Now we wanted to find an equivalent flow network, and I wanted this flow network to not have any anti-parallel edges. I want to remove this anti-parallel edges here, and I want the max-flow, and that equivalent network to be the same as the max-flow here. This is the new network I want to consider. So I just split this edge from B to A, into a path of length two, and I added one auxiliary vertex, and the edge capacity stay the same. This single edge had a capacity of three. Now it gives both of these edges capacity three, and notice that these two flow networks are equivalent to each other? I can easily convert a solution to the max-flow problem on one network to the other network and vice versa.