1
00:00:00,000 --> 00:00:04,350
 Recall our basic recipe for designing a dynamic programming algorithm.

2
00:00:04,350 --> 00:00:07,860
 The first step is always to define the sub-problem in words.

3
00:00:07,860 --> 00:00:12,795
 Our first attempt is always to try the same problem on a prefix of the input.

4
00:00:12,795 --> 00:00:15,600
 Therefore, we let K of I be the max value

5
00:00:15,600 --> 00:00:19,645
 achievable using a subset of the first I objects.

6
00:00:19,645 --> 00:00:24,120
 All we've changed is we've changed the set of objects available to us from

7
00:00:24,120 --> 00:00:29,550
 the first N objects 1 through N to a subset of objects 1 through I.

8
00:00:29,550 --> 00:00:34,890
 Our second step in our recipe for designing a dynamic programming algorithm is to find

9
00:00:34,890 --> 00:00:37,939
 a recursive relation which expresses K of I

10
00:00:37,939 --> 00:00:43,180
 the solution to the I sub-problem in terms of smaller sub-problems.

11
00:00:43,180 --> 00:00:43,180
 In this case K 1 through K I minus 1.

