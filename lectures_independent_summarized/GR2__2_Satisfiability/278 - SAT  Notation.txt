Exploring the strongly connected components algorithm applied to the SAT (satisfiability) problem, crucial for understanding NP completeness. Boolean formulas with n variables are considered, each taking true or false values. Literals are variables or their negations, with 2n possible literals. These formulas use conjunctions (ANDs), disjunctions (ORs), and negations (NOTs). CNF (conjunctive normal form) structures these into clauses, each an OR of literals; a formula in CNF is an AND of multiple such clauses. To satisfy a CNF formula, each clause must have at least one true literal. Despite any formula being convertible to CNF, this can significantly increase formula size. Example provided with a CNF formula containing various-sized clauses demonstrating satisfaction through specific variable assignments that fulfill all clauses, resulting in the entire formula evaluating to true.