Let's look at the case when multiplicative inverses do not exist. Why don't they exist? So in the case where X and N have a common divisor. So their GCD is strictly greater than one, in which case this theorem says that the inverse of X mod N does not exist. Let's take a look at why that happens. Let me give you the intuition for the proof. Let me do the simple case where X and N both even. So then they have a common divisor of two. If you understand this case then you can understand the general case. Suppose X did have an inverse mod N, let's call it Z. So what does that mean? That means that X times Z is congruent to one mod N. So how can XZ be congruent to one mod N? That means XZ is either N+1 or it might be 2N+1 or 3N+1. In general, it's some multiple of N+1. So it's QN+1 for an integer Q. Now X we assumed was even. So what is X times Z? Even number times some other number is going to be an even number. Okay? Because it still has two as a divisor. Okay. So XZ is even because X is even. Now N is even. So what about Q times N? That's going to be even as well just the same as before. So XZ is even and QN is even. What about QN+1? We take an even plus one we got an odd number. So this is an odd number. This is an even number. How can they be equal? They can't be equal. So that's our contradiction. Therefore, there is no inverse of X mod N. And similarly, if X and N just share a common divisor then you have a similar proof to explain why the inverse does not exist. Now the interesting case is when they are relatively prime to each other, so their greatest common divisor is one. So they have no common divisors except for one. Then the inverse exists. Why is that the case? Can we prove why the inverse exists? We'll prove it exists by actually giving an algorithm for finding it. We'll actually find it and by finding it we prove its existence. Okay? What is the algorithm we're going to use for finding it? Well some of you might have seen Euclid's algorithm before for computing the greatest common divisor. So even if we want to check whether the inverse exists or not we have to compute the GCD of X and N. Check whether they're relatively prime to each other. I mean these are big numbers so it's not easy to just eyeball and check. So we got to run an algorithm to check the greatest common divisor and see whether it's one or not. That algorithm for that is Euclid's algorithm which is very simple recursive algorithm and we're going to see it in a moment. And then a slight modification of Euclid's algorithm is extended Euclidean algorithm and that extended Euclidean algorithm will give us the greatest common divisor of X and N and if the greatest common divisor is one it will give us the inverse of X mod N. And therefore, that will prove the existence of the inverse of X mod N. Okay? So let's go ahead and dive into Euclid's algorithm and the extended version of the algorithm to find the inverse.