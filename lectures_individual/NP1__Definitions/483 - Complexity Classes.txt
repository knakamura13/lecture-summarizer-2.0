We're going to define NP as the class of all search problems. What exactly do we mean by search problems? Well, we'll look at that in more detail in a second. Now, there's one important distinction that we need to bring out at the beginning. We're using the class of search problems to find its class NP. Now traditionally, and what many of you may have seen in your undergraduate course, is that the NP is defined with the class of decision problems instead of search problems. Now, this is a somewhat minor distinction. But for consistency in this class, we're going to use search problems for NP. Why am I using search problems instead of decision problems? Well, it's somewhat more natural to use search problems. In addition, the group of textbook also defines NP with respect to search problems. Now, if you've seen decision problems before, the appeal of search problems is that it gets rid of the need for a witness for particular instances. In any case, let's forget about the notion of decision problems and let's focus on search problems in this course. What do we mean by search problems? Let's look at a rough definition of search problems and then in the next slide, we will look at a formal definition of search problems. Now, roughly, a search problem is a problem where we can efficiently verify solutions so if I give you particular input and I give you a solution to that input, then I can verify that that solution is in fact a solution to that input. I can check solutions in polynomial time so the time it takes to generate the solution doesn't have anything to do with it. All that matters is if I give you an input and I give you a solution, then you can verify that solution in polynomial time. Now, if I want to know about the time it takes to generate a solution then look at the class P. Now, the class P are those search problems which can be solved in polynomial time so I can generate a solution in polynomial time. Whereas, NP just says that it can verify solutions in polynomial time. Now, of course, if I can generate a solution polynomial time then I can also verify solutions in polynomial time. So, P is a subset of NP. Any problem that can be solved in P can also be solved in NP. Formally, we have that P as a subset of NP. Why is that? Well, NP is a class of all search problems so these are problems where we can verify solutions in polynomial time. P is a class of search problems that can be solved in polynomial time. A problem in P means that we can verify solutions in polynomial time and we can generate solutions in polynomial time.