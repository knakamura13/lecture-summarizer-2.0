Let's look now at an application of our strongly connected components algorithm. We're going to look at the satisfiability problem, also known as the SAT problem. This problem is going to play a central role later in our study of NP completeness. Let's start with some terminology. We're going to be looking at boolean formulas. We're going to have end variables, x1, x2 up to Xn. It's a boolean formula so these variables are going to take true or false. There are two times n literals. These refer to the positive and negative forms of the variables x1 and x1 bar, x2 and x2 complement and so on up to Xn and Xn complement. Our formulas are going to be composed of knots ands and ors. And we'll use the notation this symbol for the and, and this symbol for the or. Personally to help myself remember, I noticed that this one looks kind of like an A. Now we're going to look at formulas in CNF. This is conjunctive normal form. Let me tell you what that is. The formula would be composed of several clauses. Each clause is the or of several literals, for example, x3 or x5 bar or x1 bar or x2, that's a clause. In order to satisfy that clause, I have set x3 to be true x5 to be false, x1 to be false or x2 to be true. Finally to construct a formula in CNF, we're going to take the and of M clauses. Here's an example of a formula in CNF. It has four clauses, each clause is the or of some literals. Some are of size one. So, there's a unit clause. There's a clause of size two, clause of size four, clause of size two. And then we take the and of these clauses. So in order to satisfy this formula, we have to satisfy at least one literal in every clause. For example for this formula if I set x1 to be false, x2 to be true and x3 to be false, then it doesn't matter the setting for x4 and x5, I satisfy this formula. Plug in x1 to be false, that satisfies this clause, x1 to be false satisfies this clause as well, x2 to be true satisfies this clause, and x3 to be false satisfies this clause. So all the clauses are satisfied, so the end of these clauses is satisfied. So, the formula itself is satisfied. So this formula evaluates to true for this assignment of the true false to the variables. Now any formula can be converted into a CNF form, but the size of the formula may blow up. Now let's go ahead and precisely define the SAT problem.