Developed pseudocode for a knapsack problem allowing for multiple uses of items, inputting item weights (W1-Wn), values (V1-Vn), and total capacity (B). By utilizing a 1D array, start from index b=0, representing no items fitting current capacity B. Iterate through each item checking fit (Wi<=b) then compare the value of adding item i (Vi + K(b-Wi) where K represents the best solution for reduced capacity) to the previous best K(b). If it's better, update K(b). The final entry of the array K(B) yields the maximum value obtainable with the given constraints.