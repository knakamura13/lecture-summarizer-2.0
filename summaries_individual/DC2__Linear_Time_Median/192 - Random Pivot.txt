Selecting a good pivot in an array A can be done by choosing a random element, with a 1/2 probability of it being good, based on the median and quartiles. This random pivot is good if it's within the middle n/2 elements when sorted. To check if a pivot is good, partition A into elements smaller, equal, or bigger than the pivot, which takes linear time. If it's bad, select another until a good one is foundâ€”akin to flipping a coin with a 1/2 chance of success, expecting to find a good pivot after an average of two tries. Although this method has an expected linear runtime, the aim is an algorithm with a worst-case linear runtime.