1
00:00:00,000 --> 00:00:03,420
 Here again is our original primality testing algorithm.

2
00:00:03,420 --> 00:00:08,005
 The problem was that it had a false positive rate of at most a half.

3
00:00:08,005 --> 00:00:10,415
 We want to prove that false positive rate.

4
00:00:10,415 --> 00:00:12,760
 We want to get it down smaller.

5
00:00:12,760 --> 00:00:14,845
 So, what are we going to do?

6
00:00:14,845 --> 00:00:19,500
 Recall the algorithm starts by choosing a random number between one and R minus one,

7
00:00:19,500 --> 00:00:23,895
 and then we run for a max test for that Z that we chose at random.

8
00:00:23,895 --> 00:00:26,430
 Now, what we're going to do is instead of choosing

9
00:00:26,430 --> 00:00:29,505
 one rule number at random from this set,

10
00:00:29,505 --> 00:00:32,125
 we're going to choose K numbers at random from this set,

11
00:00:32,125 --> 00:00:35,075
 where K is a parameter that we're going to choose.

12
00:00:35,075 --> 00:00:37,005
 Now, for all of these K numbers,

13
00:00:37,005 --> 00:00:38,850
 we're going to run for a max test.

14
00:00:38,850 --> 00:00:41,970
 So we're going to take that ZI and we're going to

15
00:00:41,970 --> 00:00:45,653
 raise it to the power R minus one and we're going to check mod R,

16
00:00:45,653 --> 00:00:47,790
 whether it's congruent to one or not.

17
00:00:47,790 --> 00:00:53,580
 Now what we need is just that one of these ZI's is a Fermat witness.

18
00:00:53,580 --> 00:00:55,815
 If any of these ZI's is a Fermat witness,

19
00:00:55,815 --> 00:00:58,915
 so ZI raised to the power R minus one is not congruent to

20
00:00:58,915 --> 00:01:03,950
 one mod R then we know for sure that R is composite.

21
00:01:03,950 --> 00:01:07,515
 Whereas if all of these ZI's are not witnesses,

22
00:01:07,515 --> 00:01:11,670
 then we have a very good chance that R is prime.

23
00:01:11,670 --> 00:01:16,660
 So our final check is whether any of these ZI's is a witness or not.

24
00:01:16,660 --> 00:01:19,805
 So if for all I's it passes the test,

25
00:01:19,805 --> 00:01:25,075
 so ZI raised to the power R minus one is congruent to one mod R, then what do we know?

26
00:01:25,075 --> 00:01:27,865
 We know there's a good chance that R is prime.

27
00:01:27,865 --> 00:01:32,260
 And if any of these ZI's is a witness then what do we know?

28
00:01:32,260 --> 00:01:35,170
 Then we know for sure that R is composite.

29
00:01:35,170 --> 00:01:38,680
 more precisely let's look at our analysis from before.

30
00:01:38,680 --> 00:01:41,065
 Suppose that R is a prime number,

31
00:01:41,065 --> 00:01:42,760
 what does the algorithm do?

32
00:01:42,760 --> 00:01:46,910
 It always outputs that R is prime because every ZI,

33
00:01:46,910 --> 00:01:48,375
 when we raise it to the power R,

34
00:01:48,375 --> 00:01:52,060
 is going to be congruent to one mod R by Fermat's little theorem.

35
00:01:52,060 --> 00:01:55,550
 So the probability the algorithm outputs R is prime is one,

36
00:01:55,550 --> 00:01:57,530
 when R is in fact prime.

37
00:01:57,530 --> 00:02:00,580
 What happens when R is composite but not Carmichael?

38
00:02:00,580 --> 00:02:05,080
 The previous algorithm had a false positive with probability at most a half,

39
00:02:05,080 --> 00:02:09,580
 because at most half of the Z's are non-witnesses.

40
00:02:09,580 --> 00:02:11,860
 Now, we're choosing KZ's.

41
00:02:11,860 --> 00:02:14,640
 We just need that one of them is a witness.

42
00:02:14,640 --> 00:02:18,185
 What's the probability that none of them are witnesses?

43
00:02:18,185 --> 00:02:24,115
 So think of the following analogy: say it's a witness if I flip a coin and it's a heads,

44
00:02:24,115 --> 00:02:27,460
 and if it's tails it's a non-witness.

45
00:02:27,460 --> 00:02:33,060
 So the probability of a tails for each of these K flips is at most a half.

46
00:02:33,060 --> 00:02:34,510
 So suppose it was a fair coin,

47
00:02:34,510 --> 00:02:37,930
 what's the chance that I have K tails?

48
00:02:37,930 --> 00:02:40,720
 That means that all K of these are non-witnesses.

49
00:02:40,720 --> 00:02:42,385
 If I have just one heads,

50
00:02:42,385 --> 00:02:45,075
 or at least one heads, then I have a witness.

51
00:02:45,075 --> 00:02:48,230
 What's the chance that none of them are witnesses?

52
00:02:48,230 --> 00:02:50,845
 So the chance that all K of them are tails?

53
00:02:50,845 --> 00:02:57,400
 That's at most one half to the K. So the probability of a false positive in

54
00:02:57,400 --> 00:03:04,050
 this scenario is at most one half to the K. So if I choose K to be, let's say, 100.

55
00:03:04,050 --> 00:03:07,236
 So I choose 100 numbers at random from this set,

56
00:03:07,236 --> 00:03:08,327
 this is a huge set,

57
00:03:08,327 --> 00:03:10,290
 this is about the order two to the 1000,

58
00:03:10,290 --> 00:03:11,745
 or two to the 2000.

59
00:03:11,745 --> 00:03:13,705
 So choosing 100 numbers from there,

60
00:03:13,705 --> 00:03:17,675
 running this procedure 100 times is not much of a cost.

61
00:03:17,675 --> 00:03:23,200
 Then the probability of a false positive is at most one half to the 100,

62
00:03:23,200 --> 00:03:27,245
 which is a tiny, tiny probability.

63
00:03:27,245 --> 00:03:29,875
 So there is a very minuscule chance of that.

64
00:03:29,875 --> 00:03:32,725
 So I'm willing to take that chance of a false positive,

65
00:03:32,725 --> 00:03:34,040
 in which case my scheme,

66
00:03:34,040 --> 00:03:37,090
 my cryptographic scheme might be easy to break,

67
00:03:37,090 --> 00:03:39,485
 the chance of that is very minuscule.

68
00:03:39,485 --> 00:03:42,430
 So that completes our primality testing algorithm in the case

69
00:03:42,430 --> 00:03:46,275
 when we assume that the composite numbers are not Carmichael numbers.

70
00:03:46,275 --> 00:03:49,120
 So we're ignoring these pseudo prime numbers.

71
00:03:49,120 --> 00:03:50,470
 It turns out that, actually,

72
00:03:50,470 --> 00:03:52,420
 to deal with these pseudo prime numbers,

73
00:03:52,420 --> 00:03:56,095
 Carmichael numbers, it's not that much more complicated of an algorithm.

74
00:03:56,095 --> 00:03:56,095
 That's detailed in the textbook and I'll leave that to there.

