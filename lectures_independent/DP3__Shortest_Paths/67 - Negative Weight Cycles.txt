We're looking once again at a directed graph with edge weights where the edge weights are allowed to be positive or negative such as in this example. And for a designated start for text S, we want to find the shortest path from S to every other vertex. And our first question is whether this problem is well-defined. In this example, it is. We already looked at what the distance is from S to every other vertex. Let's modify this example a little bit. Let's make this negative weight a little bit more extreme. Let me change the length of this edge from A to E. From length, -2 and we'll make it -6. Now, let's take a look at this example. And what is the length of the shortest path from S to D? Where previously it was length 11, because we went S to B to A to D. That has 5+3+3, so it's length, 11. But look at this cycle which goes B, A, E, B. What's the length of this cycle? It's length -1. So every time we go around this cycle, our length goes down by one. So an alternative route from S to D is to go S to B to A to E to B, A, D. So we're gonna go here. We're gonna go round the cycle and then follow this path. What's the length of this walk? It's length 10 because we went down by one by going around this cycle. Similarly, we can repeat this cycle many times. Every time we repeat it, our length goes down by -1. So the shortest route from S to D goes around this cycle infinite number of times. Now, this is a walk, it's not a path. Because we're allowed to repeat vertices in this case. Now, the shortest path in this example is S to B to A to D. That's if we're only allowed to visit a vertex at most once. But if we're allowed to repeat vertices, I mean why not in this example? Then, we want to go around this cycle infinite number of times. This cycle is a negative weight cycle. Cycle going from A to E to B and back to A. A to E to B and back A. To some of the weights along this cycle is less than zero. So it's a negative weight cycle will define it as. Now when a graph has a negative weight cycle, then the shortest path problem is not well-defined any longer. But if it has such a negative weight cycle, then it's interesting to find such a negative weight cycle. So let's change the problem. Let's look at the more general problem. As given a directed graph with edge weights, let's find a negative weight cycle if one exists in the graph. What if there is no negative weight cycle? Well then, the shortest path problem is well defined and we'll solve the shortest path problem. So we're going to solve this more general problem. We're giving a directed graph G with edge weights and the edge weights can be allowed to be positive or negative. And we're also given this designated start for text S. And our goal is to find a negative weight cycle if one exists in the graph. Actually, to be more precise, we're going to find a negative weight cycle which is reachable from S. If there's a negative weight cycle in the graph but it's not reachable from S, then it doesn't have play any role in these distance factors. So we're going to find a negative weight cycle if one exists in the graph. And what if there's no negative weight cycle in this graph? Then for every vertex in the graph, we're going to find its distance. The shortest path length from S to this vertex. So we're going to output this array of size. And let's look at how to use dynamic programming to solve this problem.