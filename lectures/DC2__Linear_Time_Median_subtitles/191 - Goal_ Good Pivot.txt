We're going to say a particular pivot p is good if this pivot p is at least the n of the four smallest, and is at most three n over four smallest. What does that imply? That implies that the number of elements which are strictly less than this pivot is at most three n over four and the number of elements strictly bigger than this pivot is at most three n over four. So if this is satisfied, then we say the pivot p is good. Our main task is to figure out how to find this good pivot p in order n time. If we can do that, then we're going to get a recurrence such as this. We're going to have a subproblem of size at most three n over four, because of this relation. And it's going to take us order n time to partition the array and to find the good pivot. And then, we know that this recurrence solves to order n, so we'll be done. Question is, how can we find a good pivot in order n time?