Here's our combined algorithm. Take our input formula F. We first run the simple randomized algorithm, which assigns each variable true or false independently with probably a half, and we get an assignment which satisfies, let's say M1 clauses of F. So M1 is the number of clauses satisfied by this simple algorithm, this simple randomized algorithm. We also run the LP-based scheme, and we get an assignment, we look at how many clauses are satisfied by that assignment. Let's say it satisfies M2 clauses and whichever of these two is better, we take that assignment. So we look at both of these assignments and we take the better of these two assignments, that's our algorithm. Now if we look at the expected performance of this algorithm, what we're going to achieve is the max of these two. So the performance, the expected performance of this best of two algorithm, is the expectation of the max of M1 and M2. That's what our algorithm is going to achieve. And what we can prove is that this max is at least three-fourths the optima value. Why is that? Well, that follows from the fact that each of these algorithms, the best of these two algorithms for each row on the previous slide, is at least three quarters. For every specific K, we get at least three quarters, and then we can analyze this in a clause by clause manner, so that we get at least three quarters of the optima value. You can look at the online notes to see the calculus behind this. But the punch line is that this algorithm, this combined algorithm, gives a three quarters approximation algorithm for max M, even when the formula has clauses of some small and some big. So even with formulas with varying length clauses, we achieve a three quarters approximation.