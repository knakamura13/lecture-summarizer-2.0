So, we've handled the case where i is on the path. We've written the recurrence for D(i,s,t) and we've handled the case where i is not on the path on the previous slide. So, let's go ahead and summarize the recurrence for D(i,s,t). We have two scenarios, i is on the path or its not on the path. We're going to take the best of those two. So, we're going to take the min, because we're trying to find the shortest path. When i is not on the path, recall it's just D(i-1, s,t). When i is on the path we have these two terms. We get the shortest path from S to i using the first i-1 as our main vertices. Then we go from i to t. This is our recurrence for D(i,s,t) in terms of smaller subproblems. Notice, its using D(i,s,t) is using D(i-1). So, if we go for i going from 0 up to n, then in order to solve D(i,s,t), it will use smaller subproblems which are already solved in our dynamic programming algorithm. So, let's go ahead and write the pseudo code for this dynamic programming algorithm.