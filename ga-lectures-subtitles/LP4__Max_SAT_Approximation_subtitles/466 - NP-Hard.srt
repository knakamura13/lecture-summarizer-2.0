1
00:00:00,000 --> 00:00:03,675
 We're going to prove now, that integer linear programming is NP-hard.

2
00:00:03,675 --> 00:00:08,005
 To do that we're going to reduce the Max-SAT problem to integer linear program.

3
00:00:08,005 --> 00:00:10,830
 Consider an input f for the Max-SAT problem and

4
00:00:10,830 --> 00:00:14,027
 say that f has N variables and M constraints.

5
00:00:14,027 --> 00:00:16,110
 In the integer linear program that we create,

6
00:00:16,110 --> 00:00:17,720
 what are the variables going to be?

7
00:00:17,720 --> 00:00:20,400
 Well, for each variable in the formula f,

8
00:00:20,400 --> 00:00:24,700
 we can add a variable Y_i to the integer linear program that we create.

9
00:00:24,700 --> 00:00:26,400
 And for each clause C_j,

10
00:00:26,400 --> 00:00:28,845
 we're going to add a variable Z_j.

11
00:00:28,845 --> 00:00:30,935
 So our initial linear program is going to have

12
00:00:30,935 --> 00:00:34,150
 N + M variables and

13
00:00:34,150 --> 00:00:37,389
 we're going to add the constraints that the Y_i's are between zero and one,

14
00:00:37,389 --> 00:00:40,520
 and also each Z_j is between zero and one.

15
00:00:40,520 --> 00:00:43,945
 And since these variables are constrained to be integer value,

16
00:00:43,945 --> 00:00:47,120
 they'll either receive value one or zero.

17
00:00:47,120 --> 00:00:49,580
 It can't receive any fractional value.

18
00:00:49,580 --> 00:00:51,030
 Now intuitively what's going on?

19
00:00:51,030 --> 00:00:56,635
 These Y_is are going to correspond to whether this variable X_i is set to True or false.

20
00:00:56,635 --> 00:00:58,215
 So, Y_i equals one,

21
00:00:58,215 --> 00:01:00,530
 corresponds to X_i being true.

22
00:01:00,530 --> 00:01:03,645
 X_i being false corresponds to Y_i being zero.

23
00:01:03,645 --> 00:01:08,275
 Z_j is going to correspond to whether this clause is satisfied or not.

24
00:01:08,275 --> 00:01:10,126
 So it's going to take value one,

25
00:01:10,126 --> 00:01:12,300
 if this clause is satisfied by

26
00:01:12,300 --> 00:01:15,420
 the literals appearing in it and it's gonna take value zero,

27
00:01:15,420 --> 00:01:15,420
 if this clause is not satisfied. That's the intuition.

