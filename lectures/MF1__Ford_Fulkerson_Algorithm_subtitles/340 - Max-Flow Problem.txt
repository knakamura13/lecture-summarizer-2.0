Here's the general formulation of the max-flow problem. So the input is a flow network. Flow network, once again, consists of a directed graph with a specified start vertex and end vertex, and for each edge, we're given a capacity which is a positive number specified by c_sub_e. Our goal is to find the maximum amount of flow that can be sent from s to t. This flow is specified by these variables f_ sub_e for each edge in the directed graph. Now what are the constraints on these flows? The first constraint is the capacity constraint. For every edge, the flow along that edge cannot exceed the capacity of that edge, and the flow must be non-negative. The second constraint is conservation of flow. The flow originates at the source vertex s and ends at the sync vertex t. But for all other vertices, so for all v in the vertex set minus s and t, for all such vertices v, the flow must be conserved. So the flow into v must equal the flow out of v. Nothing can be lost or gained at vertex v. Formerly, the flow into v is the following. It's a sum over edges w to v of the flow along this edge which is specified by f_sub_wv, and the flow out of v is a sum over edges v to z of the flow along that edge, which is specified by f_sub_vz. A valid flow is one which satisfies the capacity constraints and conserves the flow at every vertex except for the source and the sync.