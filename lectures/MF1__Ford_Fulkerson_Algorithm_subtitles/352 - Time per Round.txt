Now, here again is Ford-Fulkerson algorithm, and now the question is, what is the time needed for one round of the algorithm? Now, one round of the algorithm are steps two through five. In particular, we first build the residual network, then we check for a path, and then we augment along that path. Now, originally, the residual network is just the input network. Now, given the residual network from the previous round how long does it take us to update the residual network? Given this augmentation along this path P while the residual network is simply going to change along this one path P, it might change along the forward edges or the backward edges, or both. Now, this path is of length at most N and minus one edges, so it's going to take us order N time to update the residual network. How do we check for st-path in this residual network? Well, we run either DFS or BFS. The running time is linear, order N plus M. N is the number of vertices, M is the number of edges. Lets assume the number of edges is at least N minus one, then this is bounded by order M and also augmenting the flow along this path also takes order N time. So, one round of the algorithm is dominated by this checking for an st-path which takes order N time. Now, going back to our running time analysis what we concluded was that it takes order N time per round of the algorithm. As discussed before is most capital C rounds of the algorithm. Since in every round the flow increases by at least one unit, therefore, we can conclude that Ford Focus in algorithm requires time order N times capital C.