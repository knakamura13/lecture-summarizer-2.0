Primality testing improved to handle Carmichael numbers using an enhanced algo that goes beyond Fermat's test, which can fail for these tricky composites. Example given with 1729, which is a Carmichael number; a standard primality test might falsely categorize it as prime. Typically, we'd pick a random Z, raise Z to X-1, then mod X, expecting a result other than 1 to confirm compositeness. For 1729, this does not work—raising 5 to 1728 mod 1729 indeed gives 1, leading to an incorrect assumption of primality. The novel approach involves factoring out powers of 2 from X-1 until reaching an odd exponent, then using fast modular exponentiation for computing. When the calculated power of 5 reaches 1 mod X during repeated squaring, rather than stopping, we backtrack to the first occurrence of a value different from 1, which is a "non-trivial" square root of 1 mod X. Non-trivial here means other than ±1, as primes only have these as square roots of 1 mod X. Finding such a non-trivial square root hence confirms the number in question is composite. While the underlying mathematics for why this works with at least 75% of possible Z choices is complex, the operational part of the algo remains straightforward. Essentially, it's the initial process with an additional check for a non-trivial square root of 1 in cases where the standard Fermat's test doesn't detect compositeness in numbers like Carmichael numbers.