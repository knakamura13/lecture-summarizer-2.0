Exploring an algorithm for generating the nth Fibonacci number with a focus on dynamic programming concepts and techniques. The Fibonacci sequence is characterized by each number being the sum of the two preceding ones, starting with 0 and 1. Looking to design an efficient algorithm that has a polynomial running time in relation to n, since a basic recursive formula defines Fibonacci numbers. Will also examine the limitations of a simple recursive approach before delving into more advanced examples of dynamic programming. The intention is to input a non-negative integer n and output the nth Fibonacci number effectively.