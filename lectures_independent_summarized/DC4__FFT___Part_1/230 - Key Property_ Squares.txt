In complex polynomial evaluation, when n is a power of two, nth roots squared equate to n/2 roots, simplifying the evaluation process. Specifically, squaring both the jth nth root and the (n/2 + j)th nth root yields the jth n/2 root. This property is crucial for efficient polynomial evaluations using the Fast Fourier Transform (FFT) algorithm; by leveraging the relationship between nth roots and n/2 roots and applying a divide and conquer strategy, the FFT simplifies the evaluation of a polynomial A(x) at nth roots of unity. This recursive approach divides A(x) into its even and odd parts and evaluates these at the n/2 roots, which are recursively treated as the new subproblems following the same evaluation pattern as the initial problem, enabling the FFT to efficiently compute the necessary points for polynomial transformation.