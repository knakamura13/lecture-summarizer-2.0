1
00:00:00,000 --> 00:00:02,320
 So, we want to prove the following statement:

2
00:00:02,320 --> 00:00:05,680
 Our three set input F has a satisfying assignment,

3
00:00:05,680 --> 00:00:09,660
 if and only after our graph we construct has an independent set

4
00:00:09,660 --> 00:00:13,635
 of size at least g. So there's a solution to this independence set problem,

5
00:00:13,635 --> 00:00:17,390
 if and only if there's a solution to the original three set input.

6
00:00:17,390 --> 00:00:19,620
 Let's start with the forward direction.

7
00:00:19,620 --> 00:00:21,765
 So, consider a satisfying assignment for F,

8
00:00:21,765 --> 00:00:26,370
 and we'll construct an independent set in this graph of size at least g. Now,

9
00:00:26,370 --> 00:00:28,665
 this assignment satisfies the formula.

10
00:00:28,665 --> 00:00:29,790
 So what do we know about it?

11
00:00:29,790 --> 00:00:31,230
 We know for each clause,

12
00:00:31,230 --> 00:00:34,380
 at least one of the literals and that clause is satisfied.

13
00:00:34,380 --> 00:00:37,833
 Since there's at least one satisfied literal in every clause,

14
00:00:37,833 --> 00:00:41,030
 take one of those satisfied literals, exactly one.

15
00:00:41,030 --> 00:00:43,230
 Now this literal in this clause,

16
00:00:43,230 --> 00:00:45,195
 corresponds to a vertex.

17
00:00:45,195 --> 00:00:48,510
 We're going to add that vertex into the set S. Now,

18
00:00:48,510 --> 00:00:50,305
 what do we know about the size of S?

19
00:00:50,305 --> 00:00:54,270
 Well, as contains exactly one vertex per clause.

20
00:00:54,270 --> 00:00:58,710
 So the size of S is m and recall that our goal little g was

21
00:00:58,710 --> 00:01:03,270
 set to be m. So this set S is of the goal required size.

22
00:01:03,270 --> 00:01:06,695
 Now we just have to prove that S is an independent set.

23
00:01:06,695 --> 00:01:09,745
 Now, S contains exactly one vertex per clause,

24
00:01:09,745 --> 00:01:14,530
 and it never contains both X_i and X_i bar.

25
00:01:14,530 --> 00:01:16,468
 Why does it not contain both X_i and X_i bar?

26
00:01:16,468 --> 00:01:19,490
 Because it corresponds to an assignment,

27
00:01:19,490 --> 00:01:22,425
 an assignment either sets X_i to be true,

28
00:01:22,425 --> 00:01:24,420
 in which case we might include copies of X_i,

29
00:01:24,420 --> 00:01:27,210
 or we set X_i to be false,

30
00:01:27,210 --> 00:01:29,555
 in which case we might include copies of X_i bar,

31
00:01:29,555 --> 00:01:32,115
 but we wouldn't include any copies of X_i.

32
00:01:32,115 --> 00:01:34,920
 Because there is at most one vertex per clause,

33
00:01:34,920 --> 00:01:37,470
 we know that there is no clause edges contained in

34
00:01:37,470 --> 00:01:41,790
 this set S. And because we never include a vertex X_i,

35
00:01:41,790 --> 00:01:43,740
 and a vertex X_i bar,

36
00:01:43,740 --> 00:01:48,180
 we know that there are no variable edges contained in this set S. So therefore,

37
00:01:48,180 --> 00:01:51,480
 there are no edges contained in this set S, so,

38
00:01:51,480 --> 00:01:57,570
 S is an independent set and it's an independent set of size equal to g of our goal size.

39
00:01:57,570 --> 00:02:02,490
 So we've constructed an independent set of size equal to g in this graph.

40
00:02:02,490 --> 00:02:03,985
 So we've proved the forward direction,

41
00:02:03,985 --> 00:02:06,210
 we've proven that if we take a satisfying assignment,

42
00:02:06,210 --> 00:02:10,350
 we can construct an independent set of the desired size in this graph.

43
00:02:10,350 --> 00:02:10,350
 Now we can try to do the reverse direction.

