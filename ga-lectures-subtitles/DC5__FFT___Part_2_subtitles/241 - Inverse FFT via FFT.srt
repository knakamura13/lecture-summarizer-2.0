1
00:00:00,000 --> 00:00:02,226
 Now let's recap what we have,

2
00:00:02,226 --> 00:00:04,800
 FFT is computing the product of

3
00:00:04,800 --> 00:00:10,515
 this matrix capital M times little a and that's outputting capital A,

4
00:00:10,515 --> 00:00:14,505
 which is the value of this polynomial at these nth roots of unity.

5
00:00:14,505 --> 00:00:20,180
 For inverse FFT, we want to do the reverse so we want to compute the product of

6
00:00:20,180 --> 00:00:26,250
 an inverse times capital A and get back the coefficient vector little a.

7
00:00:26,250 --> 00:00:27,930
 Now we claim the following Lemma,

8
00:00:27,930 --> 00:00:29,790
 which we'll prove momentarily,

9
00:00:29,790 --> 00:00:35,790
 the inverse of M is one over n times M

10
00:00:35,790 --> 00:00:39,510
 of Omega sub n to the n minus one so we

11
00:00:39,510 --> 00:00:43,505
 take the same matrix instead of parameterize by Omega sub n,

12
00:00:43,505 --> 00:00:46,217
 we parameterize it by Omega sub n

13
00:00:46,217 --> 00:00:49,440
 to the n minus one which is just a different root of unity.

14
00:00:49,440 --> 00:00:52,345
 So let's take this expression multiply both sides by little n

15
00:00:52,345 --> 00:00:57,180
 and then substitute in n inverse with this quantity.

16
00:00:57,180 --> 00:01:00,945
 So we have n times little a and then for M inverse,

17
00:01:00,945 --> 00:01:10,490
 we replace it by this quantity M sub n of Omega sub n to the n minus one times capital A.

18
00:01:10,490 --> 00:01:13,445
 Notice this corresponds to an FFT computation.

19
00:01:13,445 --> 00:01:18,385
 In particular, we want FFT with instead of using input little a,

20
00:01:18,385 --> 00:01:23,955
 we use in put capital A and instead of using Omega sub n as the nth root unity,

21
00:01:23,955 --> 00:01:28,890
 we use Omega sub n to the end n minus one which is also an nth root unity.

22
00:01:28,890 --> 00:01:30,970
 Now it's quite intriguing what's happening here,

23
00:01:30,970 --> 00:01:34,598
 we're taking the value of this polynomial A inverse at the nth root unity

24
00:01:34,598 --> 00:01:39,750
 and we're treating these values as coefficients for a new polynomial.

25
00:01:39,750 --> 00:01:41,430
 Now we run FFT for

26
00:01:41,430 --> 00:01:45,650
 this new polynomial and instead of using the nth root of unity Omega sub n,

27
00:01:45,650 --> 00:01:47,970
 we're using this nth root unity.

28
00:01:47,970 --> 00:01:51,820
 It's still an nth root unity so we can again run FFT.

29
00:01:51,820 --> 00:01:54,450
 So we run FFT with these two inputs,

30
00:01:54,450 --> 00:01:57,367
 we get back a vector which we scale by one over n

31
00:01:57,367 --> 00:02:01,705
 and this gives us the coefficients for our polynomial A of x.

32
00:02:01,705 --> 00:02:06,375
 So we can go from the values at the nth root unity to the coefficients.

33
00:02:06,375 --> 00:02:09,945
 One more intriguing fact before we move on to the proof of this Lemma,

34
00:02:09,945 --> 00:02:15,535
 now FFT normally, we run it with Omega sub n. It is this point right here.

35
00:02:15,535 --> 00:02:21,060
 Then the end points we consider are Omega sub n to the powers which corresponds to

36
00:02:21,060 --> 00:02:24,345
 the nth root unity going from one

37
00:02:24,345 --> 00:02:28,535
 to Omega sub n and and so on around the unit circle in this manner.

38
00:02:28,535 --> 00:02:32,550
 So we go counter-clockwise around the nth root unity.

39
00:02:32,550 --> 00:02:37,710
 Now what happens when we run FFT with Omega sub n to the n minus one?

40
00:02:37,710 --> 00:02:39,475
 That's this point here.

41
00:02:39,475 --> 00:02:41,250
 Now the only difference is we're going over

42
00:02:41,250 --> 00:02:44,460
 the same points but we're going over them in different order.

43
00:02:44,460 --> 00:02:47,805
 Now we go over the nth root unity in clockwise order.

44
00:02:47,805 --> 00:02:50,508
 So inverse FFT is the same as FFT,

45
00:02:50,508 --> 00:02:54,125
 we just go over the nth root unity in the opposite order.

46
00:02:54,125 --> 00:02:55,800
 That's the amazing fact.

47
00:02:55,800 --> 00:03:00,075
 And we can use the same algorithm as we detailed before because

48
00:03:00,075 --> 00:03:04,850
 when we detail the FFT algorithm we allowed any nth root unity there.

49
00:03:04,850 --> 00:03:07,095
 Now I will proof the Lemma and that'll complete

50
00:03:07,095 --> 00:03:07,095
 our polynomial multiplication algorithm and our convolution algorithm.

