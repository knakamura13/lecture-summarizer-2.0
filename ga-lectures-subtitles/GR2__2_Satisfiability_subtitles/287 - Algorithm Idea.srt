1
00:00:00,000 --> 00:00:02,410
 Now recall a strongly connected component algorithm.

2
00:00:02,410 --> 00:00:04,750
 What was the main approach?

3
00:00:04,750 --> 00:00:06,835
 We found a sink component.

4
00:00:06,835 --> 00:00:10,640
 We marked those verses in the sink SCC and then we

5
00:00:10,640 --> 00:00:15,355
 removed that sink SCC and recursed on the remainder graph.

6
00:00:15,355 --> 00:00:16,685
 What are we going to do here?

7
00:00:16,685 --> 00:00:17,985
 We're going to do a similar approach.

8
00:00:17,985 --> 00:00:20,030
 We're going to find a sink SCC.

9
00:00:20,030 --> 00:00:22,995
 We're going to do an assignment for that sink SCC

10
00:00:22,995 --> 00:00:26,745
 and then we're going to rip it out and work on the remainder graph.

11
00:00:26,745 --> 00:00:29,385
 So we're going to find a sink strongly connected component.

12
00:00:29,385 --> 00:00:31,820
 Let's call it S. As an example,

13
00:00:31,820 --> 00:00:33,845
 here's a sink SCC.

14
00:00:33,845 --> 00:00:36,955
 It contains x3 bar and x1.

15
00:00:36,955 --> 00:00:40,220
 They have edges coming in and no edge is going out.

16
00:00:40,220 --> 00:00:43,740
 Now should we set these literals to be true or false?

17
00:00:43,740 --> 00:00:45,525
 Well, we should set them to be true.

18
00:00:45,525 --> 00:00:47,595
 Why? Well, let's consider this edge.

19
00:00:47,595 --> 00:00:50,055
 Suppose the head of the edge is x2.

20
00:00:50,055 --> 00:00:53,140
 Now if later in the algorithm we set x2 to be true,

21
00:00:53,140 --> 00:00:57,830
 then this implication and says that we have to set x3 to be false.

22
00:00:57,830 --> 00:00:59,780
 So we have to satisfy this literal.

23
00:00:59,780 --> 00:01:03,455
 So if we want to rip out this component and not worry about it again,

24
00:01:03,455 --> 00:01:07,200
 then we better satisfy all these literals which means setting x3

25
00:01:07,200 --> 00:01:11,710
 to be false in this case and x1 to be true in this case.

26
00:01:11,710 --> 00:01:12,990
 So this is what we're going to do.

27
00:01:12,990 --> 00:01:15,680
 We're going to go ahead and set this component to be

28
00:01:15,680 --> 00:01:19,160
 true which means we're going to satisfy all the literals in

29
00:01:19,160 --> 00:01:26,060
 S. So in this case we set x3 bar to be satisfied which means we set x3 to be false.

30
00:01:26,060 --> 00:01:27,950
 And we want to satisfy x1,

31
00:01:27,950 --> 00:01:29,895
 so we set x1 to be true.

32
00:01:29,895 --> 00:01:31,845
 Now there are no outgoing edges.

33
00:01:31,845 --> 00:01:35,825
 So there are no implications that we have to follow because of this setting.

34
00:01:35,825 --> 00:01:40,280
 There are in-coming edges but we satisfied all of these literals,

35
00:01:40,280 --> 00:01:42,525
 therefore any incoming edges,

36
00:01:42,525 --> 00:01:46,610
 the later assignment which may imply this implication,

37
00:01:46,610 --> 00:01:48,320
 we don't have to worry about because we've already

38
00:01:48,320 --> 00:01:50,540
 satisfied the tail of this implication.

39
00:01:50,540 --> 00:01:51,910
 So what can we do?

40
00:01:51,910 --> 00:01:56,445
 We can rip out this component and work on the remainder of the graph.

41
00:01:56,445 --> 00:01:58,520
 So we're going to remove this component and repeat

42
00:01:58,520 --> 00:02:01,525
 the procedure on the remainder of the graph.

43
00:02:01,525 --> 00:02:03,240
 But, there's one problem.

44
00:02:03,240 --> 00:02:05,410
 What about the complement of this set?

45
00:02:05,410 --> 00:02:07,775
 What about x3 and x1 bar?

46
00:02:07,775 --> 00:02:10,070
 By satisfying this literal x3 bar,

47
00:02:10,070 --> 00:02:14,975
 we've not satisfied x3 and we've not satisfied x1 bar.

48
00:02:14,975 --> 00:02:20,615
 So maybe there are edges in to x3 and x1 bar and we have not satisfied these.

49
00:02:20,615 --> 00:02:25,610
 And later we're going to have to follow this edge of implication and we're going to have

50
00:02:25,610 --> 00:02:31,135
 to set x3 to be satisfied which means we're going to have a contradiction.

51
00:02:31,135 --> 00:02:33,980
 We're going to have a problem. Now what would be great is if

52
00:02:33,980 --> 00:02:38,550
 this complement set S bar is a source SCC.

53
00:02:38,550 --> 00:02:43,500
 If this set S bar is a source SCC then what do we know?

54
00:02:43,500 --> 00:02:46,020
 Then we know it has no incoming edges.

55
00:02:46,020 --> 00:02:50,945
 Now it's safe to set S bar to false because there is no incoming edges.

56
00:02:50,945 --> 00:02:53,010
 And since we set it to false,

57
00:02:53,010 --> 00:02:56,495
 we don't have to worry about any implications coming out of this set.

58
00:02:56,495 --> 00:02:59,865
 It's a source SCC so their edge is coming out.

59
00:02:59,865 --> 00:03:02,775
 But we don't have to follow those implications because we only have to follow

60
00:03:02,775 --> 00:03:06,470
 those implications if the head of the edge is set to true.

61
00:03:06,470 --> 00:03:09,660
 But the head of edge is set to false so we don't have to follow

62
00:03:09,660 --> 00:03:12,795
 the out edges and there are no in-coming edges.

63
00:03:12,795 --> 00:03:14,610
 So it's safe to set it to false.

64
00:03:14,610 --> 00:03:15,935
 So that's going to be the key.

65
00:03:15,935 --> 00:03:18,300
 If we take a sink SCC,

66
00:03:18,300 --> 00:03:21,050
 then that sink we want to set to true.

67
00:03:21,050 --> 00:03:23,340
 But then we have to worry about its complement.

68
00:03:23,340 --> 00:03:26,930
 The key is that the complement set is going to be a source.

69
00:03:26,930 --> 00:03:28,890
 So what do we want to do for a source?

70
00:03:28,890 --> 00:03:28,890
 We're going to set the source to be false.

