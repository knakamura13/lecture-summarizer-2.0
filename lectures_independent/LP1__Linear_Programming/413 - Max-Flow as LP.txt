The input to the max flow problem as a directed graph G along with positive capacities for every edge. Now our linear program is going to have m variables, one for every edge. Now we're going to have an objective function. This is the function that we're trying to optimize. This should be a linear function of the variables. Now for max flow, we're trying to maximize the size of the flow. We measure the size of flow by the flow out of the source vertex or the flow into the sink vertex. We'll state it in terms of the flow out of the source vertex, and thus we're maximizing the total flow out of the source vortex. So we're summing over edges out of the source vertex S, and we're looking at the flow along that edge. Now we have some constraints on our variables. For every edge, the flow along that edge has to be non-negative and it needs to satisfy the capacity constraint. So the flow must be at most the capacity. We also have a constraint for every internal vertex, so for every vertex, except for S and T we need that the flow into vertex V must equal the flow out of vertex V. So the flow is conserved. So if we look at the total flow into V, that needs to match the total flow out of V. Now why is this a linear program? Because the objective function is a max or a min of a linear function of the variables, and all the constraints are linear functions of the variables. What we'll see is that this formulation of the max flow problem is quite powerful. We can easily solve several variants of the max flow problem with simple modifications to this LP.