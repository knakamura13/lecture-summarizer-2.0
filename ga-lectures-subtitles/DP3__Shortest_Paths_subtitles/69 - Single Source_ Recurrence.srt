1
00:00:00,000 --> 00:00:02,775
 Recall our subproblem definition from the previous slide.

2
00:00:02,775 --> 00:00:06,865
 For each i between 0 and n minus 1 and each vertex z,

3
00:00:06,865 --> 00:00:13,305
 we define D(i,z) as the length of the shortest path from s to that chosen vertex z,

4
00:00:13,305 --> 00:00:18,270
 where we only consider paths which use the most i edges.

5
00:00:18,270 --> 00:00:20,490
 The final solution that we're trying to find is,

6
00:00:20,490 --> 00:00:21,885
 i equals n minus 1.

7
00:00:21,885 --> 00:00:25,635
 Therefore, the base case is i equals 0.

8
00:00:25,635 --> 00:00:29,505
 In this case, we're going from s and we're not allowed to use any edges.

9
00:00:29,505 --> 00:00:32,880
 So, the only vertex we can reach is s itself and,

10
00:00:32,880 --> 00:00:36,160
 therefore, D(0,s) is 0.

11
00:00:36,160 --> 00:00:38,880
 The length to go from s to itself is length

12
00:00:38,880 --> 00:00:42,990
 0 and the length to go to any other vertex is infinite.

13
00:00:42,990 --> 00:00:47,620
 So, for every other vertex except s the lane is infinite.

14
00:00:47,620 --> 00:00:50,350
 That defines a base case.

15
00:00:50,350 --> 00:00:53,005
 Now, let's try to do the case when i is at least 1.

16
00:00:53,005 --> 00:00:58,425
 Now, let's look at the shortest path from s to z using exactly i edges.

17
00:00:58,425 --> 00:01:02,275
 So, this path starts at s ends at z.

18
00:01:02,275 --> 00:01:05,880
 There's some penultimate vertex, let's call it y.

19
00:01:05,880 --> 00:01:07,340
 So, there's a path of length,

20
00:01:07,340 --> 00:01:10,030
 i minus 1 from s to y.

21
00:01:10,030 --> 00:01:12,910
 And then there's an edge from y to z.

22
00:01:12,910 --> 00:01:17,220
 So, y to z is the last edge on this path and the prefix of

23
00:01:17,220 --> 00:01:21,640
 the path is of length i minus 1 since the entire path is length i.

24
00:01:21,640 --> 00:01:26,390
 Now, noticed our subproblem is slightly different from what we proposed before.

25
00:01:26,390 --> 00:01:28,265
 Now, we're talking about exactly i edges,

26
00:01:28,265 --> 00:01:30,300
 whereas, before we were talking at most i edges.

27
00:01:30,300 --> 00:01:32,215
 Let's just look at this version for now.

28
00:01:32,215 --> 00:01:34,900
 Can we write a recurrence now for D(i,z)?

29
00:01:34,900 --> 00:01:38,230
 What we're going to do is we're going to try all possibilities for the last,

30
00:01:38,230 --> 00:01:41,110
 the penultimate vertex on the path and we're going to take the

31
00:01:41,110 --> 00:01:44,620
 best of those choices for y. What is the best?

32
00:01:44,620 --> 00:01:47,815
 The best means shortest, which means minimum.

33
00:01:47,815 --> 00:01:50,185
 So, we're going to minimize over the choices of y.

34
00:01:50,185 --> 00:01:52,045
 What are the choices for y?

35
00:01:52,045 --> 00:01:54,720
 Well, y has to have an edge to z.

36
00:01:54,720 --> 00:01:56,105
 This is a directed graph,

37
00:01:56,105 --> 00:02:01,550
 so we're considering those y were the directed edge from y to z in our input graph.

38
00:02:01,550 --> 00:02:04,895
 What does the length of this path which goes through y?

39
00:02:04,895 --> 00:02:09,245
 Well, from s to y it's allowed to use exactly i minus 1 edges.

40
00:02:09,245 --> 00:02:13,060
 Therefore, it is D(i-1,y) because,

41
00:02:13,060 --> 00:02:17,450
 it's the shortest path using exactly i minus 1 edges from s to y.

42
00:02:17,450 --> 00:02:19,385
 Notice we're talking about exactly i minus 1.

43
00:02:19,385 --> 00:02:23,915
 And again, slightly different from our original version, which said at most i.

44
00:02:23,915 --> 00:02:26,565
 We're just going to ignore that slight difference for a moment.

45
00:02:26,565 --> 00:02:30,190
 And in addition, we get the weight of this last edge from y to z.

46
00:02:30,190 --> 00:02:32,440
 What is the length of this last match?

47
00:02:32,440 --> 00:02:34,110
 It's W(y,z).

48
00:02:34,110 --> 00:02:36,715
 That's the length of this edge from y to z.

49
00:02:36,715 --> 00:02:39,745
 So, the length of this shortest path from s to z,

50
00:02:39,745 --> 00:02:41,635
 which goes through y,

51
00:02:41,635 --> 00:02:43,930
 as the penultimate vertex,

52
00:02:43,930 --> 00:02:49,360
 has length D(i-1,y) for this first i minus 1 edges,

53
00:02:49,360 --> 00:02:51,760
 as captured right here,

54
00:02:51,760 --> 00:02:55,205
 plus the length of this last edge from y to z.

55
00:02:55,205 --> 00:02:56,835
 And we're going to take that sum,

56
00:02:56,835 --> 00:02:59,950
 which is the total length of this path from s to z going through

57
00:02:59,950 --> 00:03:03,895
 y and we have minimized over the choices of y.

58
00:03:03,895 --> 00:03:07,545
 And the best choice of y is going to give us this value, D(i,z).

59
00:03:07,545 --> 00:03:11,380
 This gives us a valid recurrence when the subproblem is defined as

60
00:03:11,380 --> 00:03:15,948
 the length of the shortest path from s to z using exactly i edges.

61
00:03:15,948 --> 00:03:18,860
 Notice, in this case when we're looking for dist of z,

62
00:03:18,860 --> 00:03:25,285
 this is not necessarily the shortest path using i equals n minus 1.

63
00:03:25,285 --> 00:03:30,145
 We might not necessarily use n minus 1 edges in the shortest path from s to z.

64
00:03:30,145 --> 00:03:33,355
 So, this is not stored in D(n-1,z).

65
00:03:33,355 --> 00:03:35,258
 Instead, to find dist of z,

66
00:03:35,258 --> 00:03:38,320
 we've got to look at the min overall choices of i.

67
00:03:38,320 --> 00:03:40,750
 So, to avoid this we instead,

68
00:03:40,750 --> 00:03:46,345
 want to store D(i,z) as the length of the shortest path using at most i minus 1 edges,

69
00:03:46,345 --> 00:03:48,450
 instead of exactly i edges.

70
00:03:48,450 --> 00:03:51,670
 Let's look. Is there a simple way to modify a recurrence

71
00:03:51,670 --> 00:03:55,840
 so that it changes the subproblem definition to our original proposal?

72
00:03:55,840 --> 00:03:59,760
 Using at most i edges instead of exactly i edges.

73
00:03:59,760 --> 00:04:05,110
 All we have to do is we have to modify so that we take the best of this solution,

74
00:04:05,110 --> 00:04:06,640
 which minimizes over y,

75
00:04:06,640 --> 00:04:11,680
 and the previous solution, which was D(i-1,z).

76
00:04:11,680 --> 00:04:14,470
 So, if this stores the length of the shortest path

77
00:04:14,470 --> 00:04:17,650
 from s to z using at most i minus 1 edges,

78
00:04:17,650 --> 00:04:21,150
 this gives the length of the shortest path using exactly i edges.

79
00:04:21,150 --> 00:04:23,275
 If we take the min of these two values,

80
00:04:23,275 --> 00:04:23,275
 then that will give us the length using at most i edges.

