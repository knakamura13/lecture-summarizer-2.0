DFS algorithm is used for solving connectivity in graphs. BFS, another algorithm, explores graphs in layers and returns distances from a start vertex in unweighted graphs, using adjacency list representation. It employs a 'previous array' to reconstruct minimum length paths and operates in linear time, O(n+m). Dijkstra's algorithm extends BFS for weighted graphs, requiring positive edge lengths. It outputs shortest path lengths, uses a min-heap or priority queue, and has a running time of O((n+m) log n). Negative edge lengths are addressed in dynamic programming lectures. Dijkstra's variants exist, but the class focuses on the min-heap version. Familiarity with BFS and Dijkstra's assumed, but textbook chapter four recommended for review.