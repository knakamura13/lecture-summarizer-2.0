Before we dive into our example of multiplying n-bit integers. Let's take a brief digression. We're going to look at how clever idea from Gauss. It's not at all going to be apparent how this is useful for our multiplication for example but it will turn out to be a very useful idea which will give us an improved algorithm. Here's a setting that we're working in, multiplication is expensive, so we want to minimize the number of multiplications. Adding and subtracting is relatively cheap, so we're not going to worry about the number of additions and subtractions. So we're willing to add in additional additions and subtractions in order to reduce the number of multiplications. Now, this fact that multiplications are expensive, and additions and subtractions are much cheaper is true in most cases. For example, when we're looking at multiplying n-bit integers, multiplying them takes order n squared time whereas if we're adding or subtracting it takes order n time. Now, here's the problem of Gauss. We're given two complex numbers. How do I give you the complex number? I have to tell you the real and the imaginary part. So the first number is a + bi, a is the real part, b is the imaginary part. And the second number is c + di, c is the real part, d is the imaginary part. And our goal is to compute their product. We want to compute (a + bi) times (c + di). Well, in order to get a handle on it, let's start by just expanding this out. So I get a times c, like bi times di, i squared is negative one, so that gives me minus bd. And then, I get two terms which are multiplied by i, the first is b times c and the second is a times d. In order to compute this product it looks like we need to compute a time c, b times d, b times c, and a times d. Now each of these a, b, c, and d are just real numbers. So it looks like we need four real number multiplications. We need to compute a times c, b times d, b times c, a times d. If you give me these real number multiplications, then with one, two, three additions or subtractions, we can combine these products in order to get the product of these two complex numbers. Now our setting is that multiplications are expensive. So we're trying to minimize the number of multiplications and we're willing to have additional additions or subtractions in order to reduce the number of multiplications. So, can we reduce the number of multiplications? Can we get it down from four? Is it possible to achieve this product with only three multiplications? It turns out we can do it. The key is that we're going to compute this sum, b times c plus a times d, we'll compute the sum without computing the individual terms. So we're not going to compute b times c and we're not going to compute a times d but we're going to compute their sum bc + ad.