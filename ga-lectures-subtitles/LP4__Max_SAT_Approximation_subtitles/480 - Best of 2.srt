1
00:00:00,000 --> 00:00:01,560
 Here's our combined algorithm.

2
00:00:01,560 --> 00:00:05,935
 Take our input formula F. We first run the simple randomized algorithm,

3
00:00:05,935 --> 00:00:10,793
 which assigns each variable true or false independently with probably a half,

4
00:00:10,793 --> 00:00:12,855
 and we get an assignment which satisfies,

5
00:00:12,855 --> 00:00:15,690
 let's say M1 clauses of F.

6
00:00:15,690 --> 00:00:18,750
 So M1 is the number of clauses satisfied by this simple algorithm,

7
00:00:18,750 --> 00:00:21,550
 this simple randomized algorithm.

8
00:00:21,550 --> 00:00:23,813
 We also run the LP-based scheme,

9
00:00:23,813 --> 00:00:25,130
 and we get an assignment,

10
00:00:25,130 --> 00:00:27,945
 we look at how many clauses are satisfied by that assignment.

11
00:00:27,945 --> 00:00:31,845
 Let's say it satisfies M2 clauses and whichever of these two is better,

12
00:00:31,845 --> 00:00:33,575
 we take that assignment.

13
00:00:33,575 --> 00:00:35,730
 So we look at both of these assignments and we take the

14
00:00:35,730 --> 00:00:38,520
 better of these two assignments, that's our algorithm.

15
00:00:38,520 --> 00:00:41,325
 Now if we look at the expected performance of this algorithm,

16
00:00:41,325 --> 00:00:45,180
 what we're going to achieve is the max of these two.

17
00:00:45,180 --> 00:00:49,035
 So the performance, the expected performance of this best of two algorithm,

18
00:00:49,035 --> 00:00:52,965
 is the expectation of the max of M1 and M2.

19
00:00:52,965 --> 00:00:54,780
 That's what our algorithm is going to achieve.

20
00:00:54,780 --> 00:00:57,960
 And what we can prove is that this max is

21
00:00:57,960 --> 00:01:02,185
 at least three-fourths the optima value. Why is that?

22
00:01:02,185 --> 00:01:05,340
 Well, that follows from the fact that each of these algorithms,

23
00:01:05,340 --> 00:01:08,865
 the best of these two algorithms for each row on the previous slide,

24
00:01:08,865 --> 00:01:10,450
 is at least three quarters.

25
00:01:10,450 --> 00:01:13,440
 For every specific K, we get at least three quarters,

26
00:01:13,440 --> 00:01:17,610
 and then we can analyze this in a clause by clause manner,

27
00:01:17,610 --> 00:01:21,605
 so that we get at least three quarters of the optima value.

28
00:01:21,605 --> 00:01:24,770
 You can look at the online notes to see the calculus behind this.

29
00:01:24,770 --> 00:01:28,845
 But the punch line is that this algorithm, this combined algorithm,

30
00:01:28,845 --> 00:01:32,214
 gives a three quarters approximation algorithm for max M,

31
00:01:32,214 --> 00:01:37,040
 even when the formula has clauses of some small and some big.

32
00:01:37,040 --> 00:01:39,645
 So even with formulas with varying length clauses,

33
00:01:39,645 --> 00:01:39,645
 we achieve a three quarters approximation.

