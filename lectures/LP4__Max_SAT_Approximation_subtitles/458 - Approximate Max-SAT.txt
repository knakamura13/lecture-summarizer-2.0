Let's look in detail at what we mean by an approximation algorithm for the Max-SAT problem. Consider an input to the Max-SAT, a formula F where it has M clauses and let's let M* denote the maximum number of satisfied clauses. So if we look over all assignments to the variables in F, the maximum number of clauses satisfied by any of those assignments is M* and this is of course dependent on F so let's denote as M* of F. Now let's simplify the notation a little bit and let's drop this of F part and let's simply denote it as M*, which is the solution to the Max-SAT problem. Now clearly M* is at most M. If M* equals M, then that means formula F is satisfiable. Now, we're going to construct an algorithm which we will denote it as to capital A. It's going to take a formula F as input and it's going output L on this input F and to be precise actually, its going to output an assignment which satisfies L clauses of F. So, L is the number of clauses satisfied by these assignments outputted by A. Now how does L compare to the optimal solution M*? Where in the first instance, we're going to guarantee that L is at least M* over 2. Even though we don't know M*, we're going to guarantee that the output of our algorithm is at least within a factor of one half of the optimal number of satisfied clauses. And if this holds for every formula F, then this is a one half approximation algorithm. And then later in this lecture we're going to prove one half to three quarters and we're going to get to three quarters approximation algorithm for the Max-SAT.