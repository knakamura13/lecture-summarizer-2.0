To convert this new image segmentation problem into a max-flow problem, we define the flow network which is the input to our max-flow problem. Now, the input to the image segmentation problem is undirected graph. Now flow network is a directed graph. So we have to take this undirected graph and define a directed graph G-prime. Now, here's our example input to the image segmentation problem. This corresponds to a natural undirected graph which is the corresponding directed graph. Well, here are the vertices of this graph. And instead of putting undirected edges between neighboring pixels, we'll put bi-directional edges. So these bi-directional arrows denote edges going from this pixel to this pixel and vice versa. This pixel back to this pixel. So this is the directed graph corresponding to our undirected image. So for each edge in our undirected graph, we add an edge from i to j and j to i. Now, what are the capacities on these edges? Well, we want to keep track of the separation penalties, so it's natural to put capacities which are the separation penalties. So both of these edges will get capacity Pij. Now, that encodes the separation penalties. What do we do with the foreground and background likelihoods? Well, we're going to add additional vertex corresponding to the foreground and an additional vertex corresponding to the background.