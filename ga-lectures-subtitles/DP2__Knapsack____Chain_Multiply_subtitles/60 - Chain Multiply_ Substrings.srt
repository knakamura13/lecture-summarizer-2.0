1
00:00:00,000 --> 00:00:01,740
 There's going to be two parameters,

2
00:00:01,740 --> 00:00:04,960
 I and J. I is going to be the start of the substring,

3
00:00:04,960 --> 00:00:06,585
 j is going to be the end of the substring.

4
00:00:06,585 --> 00:00:09,475
 So, i is between j and one,

5
00:00:09,475 --> 00:00:15,845
 and j is between i and n. And then we're going to define our subproblem as

6
00:00:15,845 --> 00:00:18,920
 C(i,j) is going to be the minimum cost for computing

7
00:00:18,920 --> 00:00:22,635
 the product of the matrices Ai through Aj.

8
00:00:22,635 --> 00:00:24,820
 Now, let's try to write recurrence for C(i,j).

9
00:00:24,820 --> 00:00:26,250
 Let's start with the base case.

10
00:00:26,250 --> 00:00:29,660
 What is the easiest case to compute for C(i,j)?

11
00:00:29,660 --> 00:00:32,300
 That's the case when i equals j.

12
00:00:32,300 --> 00:00:35,000
 Then we're just computing Ai.

13
00:00:35,000 --> 00:00:37,855
 So, the entry C(i,i ) what's the cost for?

14
00:00:37,855 --> 00:00:40,555
 It's zero, because there's no work to be done.

15
00:00:40,555 --> 00:00:42,110
 Let's look at our matrix actually,

16
00:00:42,110 --> 00:00:44,465
 what are these base cases correspond to?

17
00:00:44,465 --> 00:00:49,080
 Your matrix C and these are the diagonal entries.

18
00:00:49,080 --> 00:00:52,345
 And notice, we're computing the entries where j is at least i.

19
00:00:52,345 --> 00:00:55,955
 So, we're just trying to do this upper diagonal over here.

20
00:00:55,955 --> 00:00:59,830
 We're not trying to compute this lower diagonal of the matrix.

21
00:00:59,830 --> 00:00:59,830
 Now, let's try to do in general what the recurrence for C(i,j) is.

