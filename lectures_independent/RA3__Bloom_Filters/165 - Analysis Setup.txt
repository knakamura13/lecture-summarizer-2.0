Let's start analyzing the false positive rate. As before, let M, denote the size of our database or dictionary that we're maintaining. And let little N denote the size of our hash table. Now, presumably, N, the size of our hash table is going to be at least the size of the database that we're maintaining. So, the number of bins is at least the number of balls that we're inserting. So, the important parameter is going to be the ratio of these sizes. So, let C denote this ratio. The size of the hash table compared to the size of the database. So, C is going to be at least one. And our goal is to try to get the smallest C possible. So once again, the size of our database as a dictionary of unacceptable passwords is M. And the size of our hash table is C times M. There's a constant C which is at least one, and our hash table is this constant C bigger than the database that we're maintaining. Now, for an element X, which is not in our database. So, we didn't do an insertion on X. Let's look at the probability of a false positive for this X. So X was not inserted into the database. And what is the probability of a false positive? So, we incorrectly say that X was inserted into the database. So, in order for this to occur, we need that all the K bits for X. So H-1 of X H-2 of X up to H-K of X, were all set to one. If all of these bits are one but X was never inserted into the database, then we'll get a false positive. We'll incorrectly say yes, it is in the database because all of the K bits are one, but it was never in fact inserted into the database. So, let's try to analyze this probability that all this K bits are set to one. Let's first look at a simpler problem for a specific bit, B. What's the probability that specific that is set to one? So, for a specific bit. B, this is ranges between 0, 1, and N minus one. What is the probability that this specific bit, B is set to one? It would be slightly easier to look at the complimentary event that this specific bit is set to zero. So, the probability that this specific bit is one, is one minus the probability that this bit is still zero. Now, to analyze the probability that it's still set to zero, what we have to do is we have to check that all of the insertions miss this one bit. Now, let's go back and think about our balls and bins analogy in order to analyze this probability. Now, we have M insertions. In our simple hashing scheme, these insertions correspond to throwing a ball into a bin. So, this corresponds to throwing M balls into bins. But notice for each insertion, we have K hash values that we look at. And we set K of these values to one. So, each insertion corresponds to K balls. So, actually we're throwing M times K balls into bins. So, we're throwing these M times K balls and we're throwing them into N bins. Now, what is this specific bit being set to zero correspond to in this balls and bins example? In order for this bit to still be zero we need that all these M times K balls miss this specific bin, B. So this probability that this bit is zero is equivalent to the probability that all M times K balls miss this specific bin. For one ball, what's the probability that it misses a specific bin? The chance that it hits the specific bin is one over N, the chance it misses this bin is one minus one over N. And we're doing this for M times K balls. Now, this expression is not very complicated but will be much more convenient for us to have a slightly simpler expression.