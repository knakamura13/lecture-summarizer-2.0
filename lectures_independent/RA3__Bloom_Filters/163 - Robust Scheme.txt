So now we have k hash functions instead of just one, h1, h2, up to hk. We're going to initialize our hash table at H, capital H to all zeroes. So all of the bits, the n bits of H are set to zero. How do we do an insertion? How do we add an element X? A possible password into our dictionary S of unacceptable passwords. Previously we computed this hash value H of X and we set that bit to 1. What are we going to do now? Now we compute the K hash values and we set all of those K bits to 1. So we go through the hash functions 1 through K, and then we compute it's I'th hash value, and we set this bit to 1. It might already be 1 as before, but we always change bits from 0 to 1 just like before. How do we do a query? How do we check whether an element X was inserted into our dictionary S? Well, we compute it's K hash values and we check whether all of those K bits are set to 1 or not. If all of those K bits are set to 1, then our best guess is that X was inserted into the database S. If any of those are still 0, then we're guaranteed that X was not inserted into the database. So let's write that out more precisely. If for all of those K hash values the hash function at those K bits is set to 1, then we output yes. We believe that this element X is in the database S. If any of these K bits is still 0, then we're guaranteed that this element X is not in the database. So we output no.