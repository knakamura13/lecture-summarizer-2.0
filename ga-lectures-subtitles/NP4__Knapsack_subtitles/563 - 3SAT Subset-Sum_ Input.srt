1
00:00:00,000 --> 00:00:05,865
 The input to the subset sum problem will consist of 2n plus 2m plus one numbers.

2
00:00:05,865 --> 00:00:08,250
 There are n variables and 2n literals,

3
00:00:08,250 --> 00:00:10,440
 so we'll have a number for each literal.

4
00:00:10,440 --> 00:00:13,530
 There are m clauses, so we'll have two numbers for each clause.

5
00:00:13,530 --> 00:00:16,975
 And then we'll have one additional number which is our desired sum.

6
00:00:16,975 --> 00:00:21,390
 We'll have V_1 and V_1 prime corresponding to X_1 and X_1 bar,

7
00:00:21,390 --> 00:00:24,785
 V_1 and V_2 prime for X_2 and X_2 bar.

8
00:00:24,785 --> 00:00:28,795
 And V_n and V_n prime for X_n and X_n bar.

9
00:00:28,795 --> 00:00:32,185
 We'll have these two additional numbers for the first clause,

10
00:00:32,185 --> 00:00:34,650
 and so on for the m clauses.

11
00:00:34,650 --> 00:00:37,170
 And finally, we'll have the desired sum.

12
00:00:37,170 --> 00:00:38,860
 Now these numbers are all huge.

13
00:00:38,860 --> 00:00:41,810
 They're going to be at most n plus m digits long.

14
00:00:41,810 --> 00:00:43,560
 And we're going to work in base 10.

15
00:00:43,560 --> 00:00:46,230
 This is so that if we add up any subset of numbers,

16
00:00:46,230 --> 00:00:48,700
 there'll be no carries between the digits.

17
00:00:48,700 --> 00:00:51,795
 Note these numbers are huge, for instance,

18
00:00:51,795 --> 00:00:55,830
 t is on the order of ten to the n plus m. This illustrates

19
00:00:55,830 --> 00:00:55,830
 why our order n times t algorithm is a somewhat terrible algorithm.

