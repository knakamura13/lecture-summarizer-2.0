1
00:00:00,000 --> 00:00:04,030
 We're going to look now at the greedy approach for optimization problems.

2
00:00:04,030 --> 00:00:06,430
 So we're going to take a locally optimal move.

3
00:00:06,430 --> 00:00:09,130
 In particular, we have a partial solution and we're going to take

4
00:00:09,130 --> 00:00:12,340
 the optimal move for the next step and the question is,

5
00:00:12,340 --> 00:00:16,000
 when does this approach lead to the global optimum?

6
00:00:16,000 --> 00:00:17,920
 Now, we saw earlier for the knapsack problem,

7
00:00:17,920 --> 00:00:20,255
 that this greedy approach doesn't work.

8
00:00:20,255 --> 00:00:24,220
 There are examples where the greedy does not lead to the optimal solution.

9
00:00:24,220 --> 00:00:26,500
 Nevertheless, we were able to use dynamic programming

10
00:00:26,500 --> 00:00:29,285
 to find the optimal solution for the knapsack problem.

11
00:00:29,285 --> 00:00:30,520
 What we're going to work on now,

12
00:00:30,520 --> 00:00:33,970
 is the minimum spanning tree problem and we're going to see that for this problem,

13
00:00:33,970 --> 00:00:35,925
 that the greedy approach does work,

14
00:00:35,925 --> 00:00:37,690
 as a particular algorithm that we're going to use for

15
00:00:37,690 --> 00:00:40,310
 the minimum spanning tree problem is the Kruskal's algorithm.

16
00:00:40,310 --> 00:00:42,760
 Many of you may have seen Kruskal's algorithm before,

17
00:00:42,760 --> 00:00:45,310
 but the important thing that we're going to stress in this lecture,

18
00:00:45,310 --> 00:00:49,415
 is the proof of correctness of Kruskal's algorithm for the minimum spanning tree problem.

19
00:00:49,415 --> 00:00:52,845
 Why exactly does the greedy approach work for this problem?

20
00:00:52,845 --> 00:00:56,520
 We're going to see a general lemma known as the cut property.

21
00:00:56,520 --> 00:00:58,120
 This lemma is going to imply that

22
00:00:58,120 --> 00:01:01,505
 Kruskal's algorithm works correctly for the minimum spanning tree problem.

23
00:01:01,505 --> 00:01:04,180
 And it's important that we understand the statement of

24
00:01:04,180 --> 00:01:08,650
 the cut property and also the proof has some useful ideas that I want you to understand.

25
00:01:08,650 --> 00:01:11,855
 And we're going to see is a nice byproduct of this general lemma.

26
00:01:11,855 --> 00:01:13,780
 We're also going to see that Prim's algorithm for

27
00:01:13,780 --> 00:01:16,490
 the minimum spanning tree problem also works correctly.

28
00:01:16,490 --> 00:01:19,270
 So, this general lemma implies that Kruskal's algorithm

29
00:01:19,270 --> 00:01:22,660
 works correctly and Prim's algorithm works correctly.

30
00:01:22,660 --> 00:01:25,382
 Let me remind you of the precise formulation of the minimum spanning

31
00:01:25,382 --> 00:01:29,500
 tree problem and then we'll look at the general formulation of the cut property,

32
00:01:29,500 --> 00:01:31,630
 its statement and its proof,

33
00:01:31,630 --> 00:01:33,880
 and then we'll see that it immediately implies that

34
00:01:33,880 --> 00:01:33,880
 Kruskal's algorithm works correctly and Prim's algorithm work.

