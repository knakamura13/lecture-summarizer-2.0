Defining a subproblem in the context of finding the longest common subsequence (LCS) between two prefixes of strings X and Y of equal length i, the author explains a recursive approach for computing the LCS length, not the subsequence itself. They introduce a function l(i), which represents this length for the prefixes. To develop a recursive relation for l(i), the author examines the last characters of prefixes X_i and Y_i. Two scenarios are considered: when these characters are the same and when they differ. For the scenario where X_i equals Y_i, it's established that the LCS must end with this common character and thus, l(i) relates directly to l(i-1) plus one for the added common character. The second scenario, where X_i is not equal to Y_i, is suggested but not elaborated, indicating that the process will differ from the first case.