1
00:00:00,000 --> 00:00:04,075
 We're going to prove that this P that we chose is in fact a good pivot.

2
00:00:04,075 --> 00:00:05,460
 Now let's assume this fact for

3
00:00:05,460 --> 00:00:08,860
 now and then let's look at the running time of this algorithm.

4
00:00:08,860 --> 00:00:11,130
 Let's look at the running time step-by-step.

5
00:00:11,130 --> 00:00:14,590
 The first step, breaking A into these n over five groups.

6
00:00:14,590 --> 00:00:18,710
 How long does that take? Well, that just takes one swipe through the array A.

7
00:00:18,710 --> 00:00:20,740
 So, that takes order and time.

8
00:00:20,740 --> 00:00:22,250
 Now, we have to sort each group.

9
00:00:22,250 --> 00:00:24,205
 How long does it take to sort one of these groups?

10
00:00:24,205 --> 00:00:25,770
 Well, it's only five elements.

11
00:00:25,770 --> 00:00:28,040
 So, even if we use a super slow algorithm,

12
00:00:28,040 --> 00:00:29,720
 let's say five factorial,

13
00:00:29,720 --> 00:00:31,110
 we write down every permutation of

14
00:00:31,110 --> 00:00:34,106
 these five elements and choose the one which is sorted,

15
00:00:34,106 --> 00:00:37,320
 that's going to take us five factorial time which is still order one.

16
00:00:37,320 --> 00:00:41,180
 So, it takes us order one time per group and there's order and groups.

17
00:00:41,180 --> 00:00:44,580
 So, the total time for this step is order N. Now,

18
00:00:44,580 --> 00:00:48,805
 we're going to run this same algorithm recursively on this subset S,

19
00:00:48,805 --> 00:00:50,430
 which is of size N over five.

20
00:00:50,430 --> 00:00:51,925
 So how long does that take?

21
00:00:51,925 --> 00:00:56,480
 That takes us T of N over five since this subset of size N over five.

22
00:00:56,480 --> 00:00:58,645
 Now we partition A into these three subsets,

23
00:00:58,645 --> 00:01:01,143
 that takes one swipe through the array A,

24
00:01:01,143 --> 00:01:02,775
 that also takes order and time.

25
00:01:02,775 --> 00:01:07,475
 And then finally, we recurse on one of these smaller sub-problems.

26
00:01:07,475 --> 00:01:09,680
 How large are these sub-problems?

27
00:01:09,680 --> 00:01:11,970
 Well, since P is guaranteed to be good pivot,

28
00:01:11,970 --> 00:01:14,850
 we know that these sub-problems are size, at most,

29
00:01:14,850 --> 00:01:19,510
 three-fourths N. So, our running time satisfies the following recurrence.

30
00:01:19,510 --> 00:01:21,010
 We have three-fourths N,

31
00:01:21,010 --> 00:01:25,740
 we have N over five for finding this median of this subset S,

32
00:01:25,740 --> 00:01:28,825
 and then plus we have order N for several of these steps.

33
00:01:28,825 --> 00:01:32,550
 The key is that three-fourths plus one-fifth is 0.95,

34
00:01:32,550 --> 00:01:34,610
 which is strictly less than one.

35
00:01:34,610 --> 00:01:39,530
 So, this recurrence solves to order N and we have an order N time algorithm.

36
00:01:39,530 --> 00:01:41,900
 Now it remains to prove this claim,

37
00:01:41,900 --> 00:01:43,540
 that P is a good pivot.

38
00:01:43,540 --> 00:01:45,225
 Once we prove that P is a good pivot,

39
00:01:45,225 --> 00:01:45,225
 we're all done with our algorithm.

