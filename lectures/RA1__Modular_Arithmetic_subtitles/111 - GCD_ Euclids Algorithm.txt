What we just saw is the following fact known as Euclid's Rule. The gcd of x and y is the same as the gcd of x_mod_y and y. This leads to a natural, recursive algorithm which we'll now detail. Here's Euclid's GCD algorithm. The input to the algorithm are two integers, x and y. And we'll assume these input parameters are ordered so that x is at least y and that both of these integers are non-negative. And the output of the algorithm is the gcd of x and y. This is the recursive algorithm, so let's start with the base case. The base case will be when y, the smaller parameter, is equal to zero. When y equals zero, so we're looking at the gcd of x and zero, we're going to return x as the gcd. Now, to be honest, this case actually is confusing to me. So, we'll go back and we'll discuss this more in a little bit more detail after. Now, in the general case, we're just going to apply Euclid's rule. Euclid's rule tells us that the gcd of x and y is the same as the gcd of x_mod_y and y. So, we're going to return the recursive call of Euclid's algorithm on y and x_mod_y. We flip the order of these two parameters in order to maintain the fact that the first parameter is at least the second parameter. That completes the pseudocode of the algorithm. Let's go back and look at the space case a little.