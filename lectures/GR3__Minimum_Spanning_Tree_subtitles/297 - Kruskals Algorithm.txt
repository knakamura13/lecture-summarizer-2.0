If we formalize the gritty approach that we just outlined on the previous slide, this gives us Kruskal's algorithm for the MST problem. So the input to Kruskal's algorithm is an undirected graph with weights on edges. Now we want to consider these edges of this graph in increasing order of weight. We want to consider the lowest weight edge first, and the highest weight edge last. So our first step of our algorithm is to sort the edges by increasing weight. To do this, we can use something like merge sort. We're going to use a set X to keep track of the set of edges that we've inserted so far into our MST. So we initialize X to the empty set. Now we're going to go through the edges one by one. And we are going to go through these edges in order. The order is a sorted order by increasing weight. So the first edge we consider, is the one of the lowest weight and the last edge we consider, is one of the edges of highest weight. Now for a particular edge between V and W, when do we add this edge E into our current tree? Will we add it in if it doesn't create a cycle? If adding this edge doesn't create a cycle, then we add this edge into our current tree X. Finally, you return X. This will be an MST at the end of the algorithm.