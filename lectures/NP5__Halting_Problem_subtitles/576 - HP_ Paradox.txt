So consider the following evil program, it's evil in the sense that Terminator algorithm that we assumed existed is going to fail on this program. This new program that I'm going define now. I'm going to call Harmful. Harmful has one input J. First line of harmful is an if statement. We run this Terminator Algorithm which we assumed existed on input J and J. So we use this input for the harmful program. As the program P and the input I for the Terminator algorithm. Now Terminator returns true or false. Now if it returns true then I'm going to go to one. So I have this loop. If Terminator returns false then I simply exit the procedure. Now why did I call this procedure harmful. While this was just a reference to Dijkstra's article from 1968, which was titled GoTo statement is considered Harmful. Anyways I'm allowed to use whatever Programming language I want and any programming style I want. So I choose to use this GoTo statement. It's going to make the loop more apparent in the algorithm. Let's summarize what we just did. We assume the existence of this Algorithm Terminator which solves the halting problem on every input. Now we're going to construct a new program which we call harmful for which the Terminator will show fails. This new program harmful simply has one line. It's just an if, then, else statement. Now we're using this supposed algorithm Terminator as a black box in our harmful algorithm so harmful takes an input J. What we do is we run Terminator on this input pair J J. So J is a program and J is the input to the program J. And we run Terminator on this pair. If Terminator returns true on this input pair then our program goes to one. So we get this loop. If Terminator returns false then we simply exit this procedure and we exit the program harmful.