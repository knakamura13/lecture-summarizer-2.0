Let's look an example instance for the halting problem. Let's look at the following simple program P. And I'll attempt to write it in C. My program P consists of one input variable, X, and it consists of one while loop. The while loop checks whether X mod two is equal to one. So it checks whether X is odd. If X is odd, then it adds six to X and it repeats. And it keeps going until X is even. Now let's look at this program P on input X equals five. Now for this simple program, it's easy to see what will happen. X starts at five, and then it'll be 11, and then 17, 23, and so on. X will always be odd. So the program never halts. This is going to be an infinite loop. Now of course, this is assuming infinite memory. So there's no overflows or anything like that. Therefore if we look at halting with this pair of inputs, program P and this input X equals five. Therefore, if I look at halting on this particular pair of inputs, program P and input X equals five, then this program has an infinite loop on this particular input. Therefore, halting of P, five is false. Because the program P never terminates on this particular input, five.