Now we've seen the Ford-Fulkerson algorithm for solving the max-flow problem. And in this lecture, we'll look at the Edmonds-Karp algorithm for solving the max-flow problem. Before we dive into the Edmonds-Karp algorithm, let's do a quick contrast of the two algorithms. Now in the Ford-Fulkerson algorithm, the main step is to find augmenting paths which are paths from S to T in the residual graph and to do that, we either use DFS or BFS. Now the running time of Ford-Fulkerson algorithm is order M*C, and recall capital C, is the size of the max-flow. And recall that this running time analysis assume that the capacities are integer value. Now in contrast, Edmonds-Karp finds augmenting paths using BFS. So Edmonds-Karp algorithm is an example of a Ford-Fulkerson algorithm. Does the running time analysis for Ford-Fulkerson algorithms still applies to Edmonds-Karp algorithm when we assume integer capacities? But in fact, we can often make a stronger guarantee on the running time. We'll prove that the running time is order m-squared n, and this doesn't require that the capacities are integer values. We have no assumptions on the capacities other than, of course, that they're positive valued. Now the algorithms are quite similar, so we'll give a quick recap with a Ford-Fulkerson algorithm and then we'll point out the differences in the Edmonds-Karp algorithm. And then afterwards, we'll dive into the running time analysis for the Edmonds-Karp algorithm.