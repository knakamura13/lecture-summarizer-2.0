So, we can summarize our solution to the image segmentation problem. Given our original input to the image segmentation problem, this consists of an undirected graph corresponding to the image, the foreground likelihoods, background likelihoods, and the separation penalties. Then we define a flow network. This consists of a directed graph. We take this undirected graph, make each edge bi-directional, and then we add s, which directs to every vertex in the original undirected graph. And, we add vertex t, which has an edge from every pixel in the original undirected graph, to t that defines the directed graph, and then we define our capacities. Then we run max flow on this flow network, and we get a flow, f* of maximum size. Now, the size of this max flow, equals the capacity of the min st-cut, this is the max flow min-cut theorem. And in fact, we can take this max flow and construct a cut of minimum capacity. And, we just saw that the capacity of a particular st-cut equals the weight, w prime of FB. Therefore, by finding the cut of minimum capacity, it's equivalent to finding the partition of minimum weight w prime. Now, our original problem was to find the partition of maximum weight, w. Well, this is the same as capital L, this normalizing factor, minus the min over partitions of w prime. So, if we find the partition which minimizes w prime, that's the same partition which maximizes w. And therefore, we've shown how to solve the original image segmentation problem using the max flow problem.