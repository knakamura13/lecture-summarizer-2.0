Refresher on solving recurrences in divide and conquer algos: Merge sort's recurrence T(N) = 2T(N/2) + O(N), implying log-linear complexity. Naive integer multiplication recurrence T(N) = 4T(N/2) + O(N) claims quadratic complexity. Improved integer multiplication lessens to 3 subproblems: T(N) = 3T(N/2) + O(N), resulting in O(N^log2(3)) complexityâ€”approx. 1.6 exponent. Median finding algo recurrence T(N) = T(3N/4) + O(N) claims linear complexity. Solutions for these recurrences illustrate different algorithm efficiency ranging from logarithmic to polynomial time complexity.