1
00:00:00,000 --> 00:00:02,370
 Once again, we want to look at the expected performance

2
00:00:02,370 --> 00:00:04,910
 of this randomized algorithm that we just defined.

3
00:00:04,910 --> 00:00:09,120
 Therefore, we let capital W denote the number of satisfied clauses.

4
00:00:09,120 --> 00:00:10,900
 This is in the random assignment.

5
00:00:10,900 --> 00:00:15,320
 The assignment produced by solving the LP and doing randomized rounding.

6
00:00:15,320 --> 00:00:17,190
 Since the assignment is random,

7
00:00:17,190 --> 00:00:22,025
 capital W is a random variable so we're going to look at its expectation.

8
00:00:22,025 --> 00:00:24,590
 Now, to simplify the analysis of the expectation,

9
00:00:24,590 --> 00:00:26,960
 we're going to do a clause by clause analysis.

10
00:00:26,960 --> 00:00:29,455
 As before, we consider each clause,

11
00:00:29,455 --> 00:00:31,570
 so we consider the J clause,

12
00:00:31,570 --> 00:00:37,895
 and we denote the random variable WJ takes value 1 if this clause CJ is satisfied,

13
00:00:37,895 --> 00:00:40,020
 and 0 if it's not satisfied.

14
00:00:40,020 --> 00:00:41,985
 Now if we sum WJ,

15
00:00:41,985 --> 00:00:44,225
 where J going from one to M,

16
00:00:44,225 --> 00:00:47,565
 then for each satisfied clause we get a count of 1.

17
00:00:47,565 --> 00:00:51,885
 So the total count is going to be the total number of satisfied clauses which

18
00:00:51,885 --> 00:00:56,655
 equals capital W. We can analyze the expectation of capital W,

19
00:00:56,655 --> 00:00:59,400
 the expected number of satisfied clauses in a manner

20
00:00:59,400 --> 00:01:02,280
 similar to we did earlier in the lecture.

21
00:01:02,280 --> 00:01:04,800
 We can use this identity to

22
00:01:04,800 --> 00:01:09,000
 re-express expectation of W to be the expectation of this sum.

23
00:01:09,000 --> 00:01:11,910
 And then we can apply linear narrative expectation and take

24
00:01:11,910 --> 00:01:15,550
 the sum from inside the expectation to outside.

25
00:01:15,550 --> 00:01:19,200
 We get that the expectation of W equals the sum over

26
00:01:19,200 --> 00:01:23,180
 J from 1 to M of the expectation of WJ.

27
00:01:23,180 --> 00:01:27,835
 Now, the expectation of WJ is quite simple because it's a 0-1 random variable.

28
00:01:27,835 --> 00:01:30,960
 So the expectation of WJ in this case is

29
00:01:30,960 --> 00:01:34,580
 just the probability that this clause CJ is satisfied.

30
00:01:34,580 --> 00:01:39,630
 Now we're going to prove that the probability that this clause is satisfied,

31
00:01:39,630 --> 00:01:45,055
 is at least 1 minus 1 over E times the LP value for this clause.

32
00:01:45,055 --> 00:01:49,050
 The LP value for this clause is ZJ hat star.

33
00:01:49,050 --> 00:01:52,830
 In some sense, this is like the probability that this LP

34
00:01:52,830 --> 00:01:57,785
 satisfies this clause and this rounding procedure afterwards.

35
00:01:57,785 --> 00:02:01,770
 This assignment that we end up with will satisfy this clause with probability

36
00:02:01,770 --> 00:02:06,165
 at least 1 minus 1 over E times this original probability.

37
00:02:06,165 --> 00:02:08,387
 We're going to put this lemma momentarily,

38
00:02:08,387 --> 00:02:10,985
 but now let's plug that back into this computation.

39
00:02:10,985 --> 00:02:15,810
 We can take this 1 minus W over E outside of the sum so we have 1 minus 1 over

40
00:02:15,810 --> 00:02:21,000
 E times the sum from J going from 1 to M of Z-J had star.

41
00:02:21,000 --> 00:02:22,655
 Now, what does this quantity? This is

42
00:02:22,655 --> 00:02:25,885
 the value of the objective function for the linear program.

43
00:02:25,885 --> 00:02:29,100
 What do we know about the linear program versus the integer linear program?

44
00:02:29,100 --> 00:02:32,580
 Well, the linear program is at least as good as the integer.

45
00:02:32,580 --> 00:02:35,220
 So this value of the objective function is going to be

46
00:02:35,220 --> 00:02:40,120
 at least the value of the optimal for the integer linear program.

47
00:02:40,120 --> 00:02:41,970
 This is going to be at least 1 minus 1 over

48
00:02:41,970 --> 00:02:45,570
 E times this value for the integer linear program.

49
00:02:45,570 --> 00:02:49,665
 For the integer linear program it's equal to the max sat so it's

50
00:02:49,665 --> 00:02:54,635
 equal to the maximum number of clauses satisfied which we denoted by M star.

51
00:02:54,635 --> 00:02:59,250
 And in conclusion, we can show that the expected performance of this algorithm,

52
00:02:59,250 --> 00:03:01,830
 the number of satisfied clauses in expectation,

53
00:03:01,830 --> 00:03:05,370
 is going to be at least the optimal number times

54
00:03:05,370 --> 00:03:09,900
 1 minus 1 over E. So we're going to be within 1 minus 1 over E of the optimal number.

55
00:03:09,900 --> 00:03:11,662
 Therefore, we have a 1 minus 1 over

56
00:03:11,662 --> 00:03:16,810
 E approximation algorithm which improves upon our one-half approximation algorithm.

57
00:03:16,810 --> 00:03:16,810
 So we simply have to prove this lemma and then we have our algorithm.

