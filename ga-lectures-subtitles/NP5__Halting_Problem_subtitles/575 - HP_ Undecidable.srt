1
00:00:00,000 --> 00:00:03,660
 Now, let's prove the theorem that the halting problem is undecidable.

2
00:00:03,660 --> 00:00:05,895
 How can we hope to prove this theorem?

3
00:00:05,895 --> 00:00:09,510
 We can't expect to come up with an incredibly difficult program for

4
00:00:09,510 --> 00:00:13,525
 which no algorithm can solve the halting problem on that program.

5
00:00:13,525 --> 00:00:15,390
 It's more like for every algorithm,

6
00:00:15,390 --> 00:00:18,470
 there is a program for which the algorithm fails.

7
00:00:18,470 --> 00:00:21,685
 So the way we go about proving this theorem is by contradiction.

8
00:00:21,685 --> 00:00:26,070
 Suppose that we had an algorithm that solves the halting problem on every input.

9
00:00:26,070 --> 00:00:28,470
 Now we're going to derive a contradiction and therefore,

10
00:00:28,470 --> 00:00:30,750
 our assumption that there exists an algorithm which

11
00:00:30,750 --> 00:00:33,600
 solves the halting problem is not true.

12
00:00:33,600 --> 00:00:36,815
 And therefore, there is no algorithm which solves the halting problem.

13
00:00:36,815 --> 00:00:41,055
 What we're going to do is for this particular algorithm which solves the halting problem,

14
00:00:41,055 --> 00:00:45,585
 we're going to construct an input for which this algorithm is incorrect.

15
00:00:45,585 --> 00:00:48,720
 And therefore, our assumption that this algorithm solves

16
00:00:48,720 --> 00:00:51,825
 the halting problem on every input is incorrect.

17
00:00:51,825 --> 00:00:53,790
 And we have a contradiction and therefore,

18
00:00:53,790 --> 00:00:55,155
 that will prove the theorem.

19
00:00:55,155 --> 00:00:57,450
 Now let's give a name for this algorithm.

20
00:00:57,450 --> 00:00:59,340
 Now this algorithm is determining whether

21
00:00:59,340 --> 00:01:03,120
 a particular program on a specific input terminates or not.

22
00:01:03,120 --> 00:01:05,160
 So let's call this algorithm Terminator.

23
00:01:05,160 --> 00:01:07,170
 Terminator takes a pair of inputs,

24
00:01:07,170 --> 00:01:10,160
 P and I. P is a program,

25
00:01:10,160 --> 00:01:12,210
 I is an input for this program,

26
00:01:12,210 --> 00:01:16,585
 and Terminator outputs true or false depending on whether this program P,

27
00:01:16,585 --> 00:01:18,565
 on this particular input I,

28
00:01:18,565 --> 00:01:20,820
 terminates eventually or not.

29
00:01:20,820 --> 00:01:23,745
 If it eventually terminates, then an output is true.

30
00:01:23,745 --> 00:01:26,445
 If it has an infinite loop, then an output is false.

31
00:01:26,445 --> 00:01:29,145
 And we're assuming that Terminator is correct.

32
00:01:29,145 --> 00:01:32,755
 It solves the halting problem for every program P,

33
00:01:32,755 --> 00:01:34,415
 and every input I.

34
00:01:34,415 --> 00:01:39,025
 Now we're going to construct a program Q and an input J,

35
00:01:39,025 --> 00:01:43,450
 and we're going to show that when we run Terminator on this input pair Q,J,

36
00:01:43,450 --> 00:01:45,540
 then its output is incorrect.

37
00:01:45,540 --> 00:01:49,285
 Since Terminator is incorrect on this pair of inputs,

38
00:01:49,285 --> 00:01:53,910
 therefore, Terminator does not solve the halting problem on every input.

39
00:01:53,910 --> 00:01:56,040
 So this will give us our contradiction,

40
00:01:56,040 --> 00:01:59,370
 and therefore, that would complete the proof by contradiction.

41
00:01:59,370 --> 00:02:01,975
 Now how can we hope to construct this program Q?

42
00:02:01,975 --> 00:02:04,200
 Well, one important piece is that we're assuming

43
00:02:04,200 --> 00:02:06,885
 the existence of this program, Terminator.

44
00:02:06,885 --> 00:02:08,640
 So we can use this algorithm,

45
00:02:08,640 --> 00:02:12,645
 Terminator as a subroutine in our new algorithm Q.

46
00:02:12,645 --> 00:02:14,850
 Now I don't know anything about the inner workings of

47
00:02:14,850 --> 00:02:17,350
 Terminator so I have to use it as a black box,

48
00:02:17,350 --> 00:02:19,845
 but I can use this as a subroutine.

49
00:02:19,845 --> 00:02:19,845
 So we're going to use it as a subroutine to get our paradox or contradiction.

