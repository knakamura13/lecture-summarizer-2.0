Here's a simpler claim once again. We have two components, two strongly connected components, S and S-prime. And there's some vertex in S, let's call it V. And there's a vertex in S-prime, let's call it W. And there's an edge from V to W. And the claim is that if we look at the maximum post-order number of all vertices lying in S compared to the maximum post-order number of all vertices lying in S-prime, then these maximum post-order number in S is bigger than the max post-order number in S-prime. So let's go ahead and prove that fact. Let's make one simple observation about this graph before we proceed. Notice we have an edge from this strongly connected component S to the strongly connected component S-prime. We know there's no cycles in this graph on strongly connected components, so there can't be a path from S-prime to S. Otherwise, these two strongly connected components would be a strongly connected component by itself. S union S-prime would be a strongly connected component and that would contradict the maximality of these SCCs. We know that there is no path from S-prime back to S because there's this edge that we assumed from V in S to W in S-prime. We're going to use this simple fact that there is no path from S-prime to S in the proof of this simpler claim. Run DFS on this graph and we're looking at the post-order numbers from this DFS run. Initially, all the vertices are unvisited. At some point some vertex in S Union S-prime must be visited. Let's take the vertex in S Union S-prime which is visited first and let's give it a name. Let's call it Z. We're going to have two cases. Either Z lies in S-prime or Z lies in S. Let's look at the first case. Let's say that Z lies in S-prime. Now, Z visits first so we're going to run Explore on Z. And who are we going to see? What vertices are we going to visit when we do Explore on Z? Well, which vertices are reachable from Z? Z lies in S-prime so from Z we can see all of S-prime but we can't see any of S. We see all of S-prime and we see none of S. All of S-prime is going to be visited and finished exploring, and none of S is going to be visited at all before we finish exploring from Z. Z and all of S-prime is going to be assigned post-order numbers before we even give a pre-order number for any vertex in S. The punchline is that all of the post-order numbers in S-prime. For every vertex in S-prime, its post-order number is strictly smaller than the post-order number of every vertex in S. Because we visit and finished exploring all the vertices in S-prime including Z before we even visit, before we even given a pre-order number to any vertex in S. And therefore, the maximum post-order number in an S-prime is strictly smaller than the minimum or the maximum post-order number in S which proves that claim. This completes the proof of the claim in this case where Z lies in S-prime. Now let's look at this case with a vertex Z lies in this component S. All these vertices in S and S-prime are unvisited. And now we visit Z and we start exploring from Z. Who do we reach? What vertices can we reach from Z? We can reach all of S because this is a strongly connected component, and we can reach all of S-prime because we can go from V over to S-prime, and then we can reach around S-prime. If we looked at the DFS tree, we're going to have this vertex Z. And what lies in that sub-tree? The rest of S Union S-prime lies in its sub-tree, in the DFS tree. Therefore, what do we know about Z? We know that Z is going to be the last vertex that we finish in S Union S-prime because it's the root of this sub-tree. We know that Z has the maximum post-order number of any vertex in S Union S-prime because it's the root of this sub-tree in the DFS tree. All the descendants have to be finished before we finished Z. And, therefore, since Z lies in S then we know that the vertex in S Union S-prime with maximum post-order number is Z which lies in S. So that proves the claim. The max post-order number in S, which corresponds to Z, is larger than anybody in S-prime. This completes the proof of this claim in this case where Z lies in S, and we also did the case where Z lies in S-prime. And that completes the proof of the simpler claim which also completes the proof of the key fact that the vertex with the highest post-order number lies in a source SCC. That completes the proof of correctness of our SCC algorithm and that's the end of our SCC algorithm description. It's quite an amazing fact. We can take any directed graph and we can compute its strongly connected components and we can topologically sort the strongly connected components. And we do it with just two runs of the vanilla DFS.