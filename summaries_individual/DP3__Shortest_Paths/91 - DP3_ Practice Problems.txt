Homework problem after a lecture involves detecting arbitrage opportunities using graph algorithms from Chapter Four, by converting currency exchange to the negative weight cycle problem. Students should use existing algorithms for negative weight cycle detection as a non-modifiable “black box” subroutine to build an algorithm for arbitrage detection. The task is to create a function that translates currency exchange rates into a graph format, then run the negative weight cycle detection on this graph. The output may require conversion but should indicate if an arbitrage opportunity exists. This problem exemplifies the concept of reduction, which will be a recurring theme in the course for designing algorithms and later for demonstrating NP-completeness and computational hardness. This approach leverages a solution for a known problem to solve a new, related problem.