In the Edmonds-Karp algorithm there's only one distinction. When we check for an st-path in the residual network, we have to use BFS. We cannot use DFS. The running time analysis assumes that we're using BFS to find this path. That's the only difference between Edmonds-Karp and Ford-Fulkerson algorithm. Now, a running time analysis will not assume that the capacities are integer values, so we can remove this assumption. All that's required is that the capacities are positive. Before we dive into the running time analysis, let's look at one basic property of the Edmonds-Karp algorithm and also the Ford-Fulkerson algorithm. Notice that the residual network has to change by at least one edge in every round. In particular, at least one edge reaches full capacity. We augment along P until we reach the full capacity of at least one edge on that path. Now, that edge, which reaches its full capacity in the residual graph, will be removed from the residual graph in the next stage. Now, that edge might be a forward edge or a backward edge, but regardless it will be removed from the residual graph in the next stage. Now, there may be additional edges which are removed and there might be other edges which are added back into the residual network, and we're going to need some understanding of which edges are added in or removed from the residual network. But one key property is that at least one edge is removed in every stage.