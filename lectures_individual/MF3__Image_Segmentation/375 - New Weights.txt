Now just to summarize we let capital L be the sum of the foreground and background likelihoods for all pixels. Now for a partition F, B we define its weight to be the following quantity: it's a sum over the vertices assigned to the foreground of their foreground likelihood plus the pixels assigned to the background of their background likelihood minus the separation penalty for separated edges. Now let's define a new weight W prime. This is the sum over vertices assigned to the foreground of their background likelihood plus the sum over vertices assigned to the background of their foreground likelihood. And now we'll add instead of subtract the separation penalty and the key point is that these two quantities are related in the following manner, W_F,B equals L minus W'_F, B. The separation penalty's cancel from both sides and then when you add up these remaining terms you get L. Now the point is if we find the partition F, B which maximizes the weight W of F, B this is equivalent to finding the partition F, B which minimizes W'. Since we're subtracting off W' minimizing this term is the same as maximizing the whole quantity. So we've changed our maximization problem into a minimization problem and all the terms and W prime are positive. So now this is in potential form that we can convert it to a mean SD cut problem. And how do we solve the mean SD card problem? We solve it by doing the max flow problem. So we're going to find a flow networks, solve the max flow on that flow network and then that will give us the mean SD cut solution.