Dynamic programming approach to finding the shortest path involves recurrence for D(i,s,t), depending on whether a vertex i is on the path. If i is on the path, compute the shortest path from start (s) to i using the first i-1 vertices and then from i to the target (t). If i isn't on the path, D(i,s,t) equals D(i-1, s, t). Minimize between these two cases to find the shortest path. The recurrence uses previously solved subproblems, thereby solving D(i,s,t) progressively for i from 0 to n in a bottom-up manner. Next step is writing the pseudo-code for this dynamic programming algorithm.