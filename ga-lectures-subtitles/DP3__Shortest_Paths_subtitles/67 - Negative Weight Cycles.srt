1
00:00:00,000 --> 00:00:03,825
 We're looking once again at a directed graph with

2
00:00:03,825 --> 00:00:06,270
 edge weights where the edge weights are allowed to be

3
00:00:06,270 --> 00:00:09,075
 positive or negative such as in this example.

4
00:00:09,075 --> 00:00:11,355
 And for a designated start for text S,

5
00:00:11,355 --> 00:00:14,380
 we want to find the shortest path from S to every other vertex.

6
00:00:14,380 --> 00:00:18,195
 And our first question is whether this problem is well-defined.

7
00:00:18,195 --> 00:00:19,680
 In this example, it is.

8
00:00:19,680 --> 00:00:24,150
 We already looked at what the distance is from S to every other vertex.

9
00:00:24,150 --> 00:00:26,110
 Let's modify this example a little bit.

10
00:00:26,110 --> 00:00:29,245
 Let's make this negative weight a little bit more extreme.

11
00:00:29,245 --> 00:00:33,360
 Let me change the length of this edge from A to E. From length,

12
00:00:33,360 --> 00:00:36,870
 -2 and we'll make it -6.

13
00:00:36,870 --> 00:00:38,645
 Now, let's take a look at this example.

14
00:00:38,645 --> 00:00:42,445
 And what is the length of the shortest path from S to D?

15
00:00:42,445 --> 00:00:45,015
 Where previously it was length 11,

16
00:00:45,015 --> 00:00:50,505
 because we went S to B to A to D. That has 5+3+3,

17
00:00:50,505 --> 00:00:52,110
 so it's length, 11.

18
00:00:52,110 --> 00:00:57,210
 But look at this cycle which goes B, A, E, B.

19
00:00:57,210 --> 00:00:59,075
 What's the length of this cycle?

20
00:00:59,075 --> 00:01:01,090
 It's length -1.

21
00:01:01,090 --> 00:01:02,760
 So every time we go around this cycle,

22
00:01:02,760 --> 00:01:04,420
 our length goes down by one.

23
00:01:04,420 --> 00:01:12,960
 So an alternative route from S to D is to go S to B to A to E to B,

24
00:01:12,960 --> 00:01:15,050
 A, D. So we're gonna go here.

25
00:01:15,050 --> 00:01:17,960
 We're gonna go round the cycle and then follow this path.

26
00:01:17,960 --> 00:01:19,840
 What's the length of this walk?

27
00:01:19,840 --> 00:01:24,150
 It's length 10 because we went down by one by going around this cycle.

28
00:01:24,150 --> 00:01:26,915
 Similarly, we can repeat this cycle many times.

29
00:01:26,915 --> 00:01:28,095
 Every time we repeat it,

30
00:01:28,095 --> 00:01:30,515
 our length goes down by -1.

31
00:01:30,515 --> 00:01:35,785
 So the shortest route from S to D goes around this cycle infinite number of times.

32
00:01:35,785 --> 00:01:37,665
 Now, this is a walk, it's not a path.

33
00:01:37,665 --> 00:01:40,430
 Because we're allowed to repeat vertices in this case.

34
00:01:40,430 --> 00:01:44,295
 Now, the shortest path in this example is S to B to

35
00:01:44,295 --> 00:01:48,505
 A to D. That's if we're only allowed to visit a vertex at most once.

36
00:01:48,505 --> 00:01:50,840
 But if we're allowed to repeat vertices,

37
00:01:50,840 --> 00:01:52,665
 I mean why not in this example?

38
00:01:52,665 --> 00:01:56,235
 Then, we want to go around this cycle infinite number of times.

39
00:01:56,235 --> 00:01:58,650
 This cycle is a negative weight cycle.

40
00:01:58,650 --> 00:02:02,820
 Cycle going from A to E to B and back to A.

41
00:02:02,820 --> 00:02:06,365
 A to E to B and back A.

42
00:02:06,365 --> 00:02:10,870
 To some of the weights along this cycle is less than zero.

43
00:02:10,870 --> 00:02:13,545
 So it's a negative weight cycle will define it as.

44
00:02:13,545 --> 00:02:16,010
 Now when a graph has a negative weight cycle,

45
00:02:16,010 --> 00:02:19,260
 then the shortest path problem is not well-defined any longer.

46
00:02:19,260 --> 00:02:21,380
 But if it has such a negative weight cycle,

47
00:02:21,380 --> 00:02:24,570
 then it's interesting to find such a negative weight cycle.

48
00:02:24,570 --> 00:02:26,075
 So let's change the problem.

49
00:02:26,075 --> 00:02:27,625
 Let's look at the more general problem.

50
00:02:27,625 --> 00:02:30,950
 As given a directed graph with edge weights,

51
00:02:30,950 --> 00:02:34,130
 let's find a negative weight cycle if one exists in the graph.

52
00:02:34,130 --> 00:02:36,315
 What if there is no negative weight cycle?

53
00:02:36,315 --> 00:02:37,910
 Well then, the shortest path problem is well

54
00:02:37,910 --> 00:02:40,575
 defined and we'll solve the shortest path problem.

55
00:02:40,575 --> 00:02:42,675
 So we're going to solve this more general problem.

56
00:02:42,675 --> 00:02:45,515
 We're giving a directed graph G with edge weights

57
00:02:45,515 --> 00:02:48,950
 and the edge weights can be allowed to be positive or negative.

58
00:02:48,950 --> 00:02:52,400
 And we're also given this designated start for text S. And

59
00:02:52,400 --> 00:02:56,555
 our goal is to find a negative weight cycle if one exists in the graph.

60
00:02:56,555 --> 00:02:58,120
 Actually, to be more precise,

61
00:02:58,120 --> 00:03:01,340
 we're going to find a negative weight cycle which is reachable from

62
00:03:01,340 --> 00:03:05,895
 S. If there's a negative weight cycle in the graph but it's not reachable from S,

63
00:03:05,895 --> 00:03:09,440
 then it doesn't have play any role in these distance factors.

64
00:03:09,440 --> 00:03:13,400
 So we're going to find a negative weight cycle if one exists in the graph.

65
00:03:13,400 --> 00:03:16,385
 And what if there's no negative weight cycle in this graph?

66
00:03:16,385 --> 00:03:18,140
 Then for every vertex in the graph,

67
00:03:18,140 --> 00:03:19,785
 we're going to find its distance.

68
00:03:19,785 --> 00:03:23,325
 The shortest path length from S to this vertex.

69
00:03:23,325 --> 00:03:25,340
 So we're going to output this array of size.

70
00:03:25,340 --> 00:03:25,340
 And let's look at how to use dynamic programming to solve this problem.

