1
00:00:00,000 --> 00:00:03,690
 We're going to prove now, that's a subset-sum problem is NP-complete.

2
00:00:03,690 --> 00:00:05,440
 Again, there are two parts of the proof.

3
00:00:05,440 --> 00:00:09,150
 First, we have to prove that the subset-sum problem is in the class NP.

4
00:00:09,150 --> 00:00:11,800
 So we take an input instance to the subset-sum problem,

5
00:00:11,800 --> 00:00:15,810
 this is specified by and numbers a to the first through to a to the nth and t,

6
00:00:15,810 --> 00:00:20,810
 and we take a proposed solution S. And we check that the sum over the integers

7
00:00:20,810 --> 00:00:25,850
 in that subset equals exactly t. How long does it take to compute the sum?

8
00:00:25,850 --> 00:00:28,000
 Well, there is the most and numbers there,

9
00:00:28,000 --> 00:00:29,385
 so there's order n time.

10
00:00:29,385 --> 00:00:31,230
 And then how long as each number?

11
00:00:31,230 --> 00:00:34,330
 Well, each numbers at most log t bits.

12
00:00:34,330 --> 00:00:35,445
 So to sum these up,

13
00:00:35,445 --> 00:00:38,065
 takes in most O(n logt).

14
00:00:38,065 --> 00:00:40,395
 Notice this as polynomial in the input size,

15
00:00:40,395 --> 00:00:43,560
 so we can verify solutions in polynomial time.

16
00:00:43,560 --> 00:00:45,795
 Next we have to show that the subset-sum problem

17
00:00:45,795 --> 00:00:48,730
 is at least as hard as every problem in the class NP.

18
00:00:48,730 --> 00:00:51,060
 So we have to take a known NP-complete problem,

19
00:00:51,060 --> 00:00:53,250
 and reduce it to the subset-sum problem.

20
00:00:53,250 --> 00:00:54,880
 Which problem do we choose?

21
00:00:54,880 --> 00:00:57,120
 Well, we're going to choose the 3SAT problem,

22
00:00:57,120 --> 00:00:59,680
 and we're going to reduce it to the subset-sum problem.

23
00:00:59,680 --> 00:01:01,050
 The reduction is very clever,

24
00:01:01,050 --> 00:01:05,220
 and somewhat involved, but it doesn't involve any heavy math or anything like that.

25
00:01:05,220 --> 00:01:08,955
 And it really illustrates why the order n times t time algorithm,

26
00:01:08,955 --> 00:01:08,955
 is not efficient for this subset-sum problem.

