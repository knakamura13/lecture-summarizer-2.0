To get some intuition for this problem, I want to look at an alternative representation of the problem and instead of looking at it as parenthesization we're going to represent it as a binary tree. Let's go back and look at our earlier example to see what we mean here. In our earlier example, we were looking at the product of four matrices, A times B times C times D. Now, the standard way of computing this was A times B and take that times C and then take that times D. Now we're going to represent this as a binary tree. The leaves of the trees are going to be the four matrices and the internal nodes are going to represent the intermediate computations. So, the root is going to represent the final computation, A times B times C times D. Now, for this parenthesization our first computation is A times B. So, we have the leaves for A and B and our first computation corresponds to the parent of those leaves, which corresponds to A Times B. Then, we take that matrix and multiply it by C. So, we have to leaf for C and then we have the parent of A times B and C, which corresponds to A times B times C. This internal node corresponds to A times B times C. How the subtree is structured tells us how the parenthesization is done for this subproblem. Finally, we take A times B times C and we multiply by D. So, this tree captures this parenthesization. Here's another parenthesization we can do A times B and we can do C times D and then we multiply those two together. This is represented by the following tree. We first compute A times B. Then we compute C times D. So, this represents A times B. This represents C times D. And then, we multiply those two together. This gives us our final matrix, A times B times C times D. So, the roots of these two trees represent the same product, A times B times C times D. How this subtree is structured tells us the parenthesization.