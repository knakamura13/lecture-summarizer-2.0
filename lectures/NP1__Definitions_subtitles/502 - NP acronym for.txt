Now, we have these two complexity classes we'll consider so far, P and NP. What are these abbreviations stand for? P Well, P stands for polynomial time. Why? Because this is the class of search problems that can be solved in polynomial time. Now you might think that NP stands for non not polynomial time. That's incorrect. It Is it may be the case that we can solve NP problems in polynomial time as well? It may be the case that P equals NP. We don't know. So what does NP stand for? NP stands for non-deterministic nondeterministic polynomial time. What does non-nondeterministic mean? This is a class of problems that can be solved in polynomial time on a non-nondeterministic machine. That doesn't do much good, I still haven't defined this term non-nondeterministic. By nondeterministic, I mean a machine where I'm allowed to guess at each step and there is a series of guesses. There is a series of choices which leads to an accepting state. If you think of it in terms of a terminal, typically for a terminal, I specify on a particular input, say 1 one. I move from this day to this day day, and maybe on a particular input 0, I moved move from this date day to this other day. But now now, I don't have to specify which particular input I move from this day to this day. I just specify that sometimes, I might move from this day to this day and sometimes, from this day to this day. And for the case I want to terminal, I just need that there is a path in this terminal that goes to an accepting state. So there is a choice of branchings which leads me to an accepting state. I can't really explain it much more than what I just did, because to be honest, I don't understand it much more than that. But the important thing to remember is that NP does not stand for not polynomial time. What it stands for is nondeterministic polynomial time.