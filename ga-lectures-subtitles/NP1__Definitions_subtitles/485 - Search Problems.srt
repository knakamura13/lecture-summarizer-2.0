1
00:00:00,000 --> 00:00:03,740
 A search problem is a problem in the following form.

2
00:00:03,740 --> 00:00:05,670
 First time given an instance I.

3
00:00:05,670 --> 00:00:08,300
 What is I? I is the input to the problem.

4
00:00:08,300 --> 00:00:11,800
 For example, it might be a draft if I'm doing a graph problem,

5
00:00:11,800 --> 00:00:13,705
 or I might be a formula,

6
00:00:13,705 --> 00:00:16,555
 if I'm doing a problem such as satisfiability.

7
00:00:16,555 --> 00:00:19,360
 Now, if I has a solution for this problem,

8
00:00:19,360 --> 00:00:21,460
 then I want to find such a solution.

9
00:00:21,460 --> 00:00:25,050
 I can output any solution S which is a solution for I.

10
00:00:25,050 --> 00:00:27,130
 But if I has no solutions,

11
00:00:27,130 --> 00:00:29,360
 then I simply output NO.

12
00:00:29,360 --> 00:00:31,210
 So, if this input has a solution,

13
00:00:31,210 --> 00:00:33,160
 then I output any such solution.

14
00:00:33,160 --> 00:00:35,955
 If it has no solutions, I output NO.

15
00:00:35,955 --> 00:00:38,005
 Now, this is the basic form of a search problem,

16
00:00:38,005 --> 00:00:41,210
 but I have a further requirement in order to be a search problem.

17
00:00:41,210 --> 00:00:43,835
 Now, let me rephrase this requirement.

18
00:00:43,835 --> 00:00:46,155
 So, for a particular problem to be a search problem,

19
00:00:46,155 --> 00:00:48,285
 it first has to be of this form.

20
00:00:48,285 --> 00:00:52,190
 So, if it's a yes instance so there is a solution to this input,

21
00:00:52,190 --> 00:00:55,125
 then we have to output some such solution.

22
00:00:55,125 --> 00:00:58,800
 And if there are no solutions then we simply output NO.

23
00:00:58,800 --> 00:01:00,915
 Furthermore, we have the following requirement,

24
00:01:00,915 --> 00:01:03,690
 for an input that has a solution.

25
00:01:03,690 --> 00:01:05,370
 If I give you a solution,

26
00:01:05,370 --> 00:01:08,855
 it doesn't have to be the one that's generated by some particular algorithm.

27
00:01:08,855 --> 00:01:14,460
 I give you any solution that we need to be able to verify in polynomial time,

28
00:01:14,460 --> 00:01:19,420
 that S, this proposed solution is in fact a solution to this instance.

29
00:01:19,420 --> 00:01:21,795
 So, we just have to be able to check the proof.

30
00:01:21,795 --> 00:01:23,220
 So if I give you a proof,

31
00:01:23,220 --> 00:01:25,640
 then I can check that proof line by line that it

32
00:01:25,640 --> 00:01:28,470
 is a proof to this input, to this theorem.

33
00:01:28,470 --> 00:01:30,615
 Now if this input is a NO instance,

34
00:01:30,615 --> 00:01:32,280
 so there are no solutions,

35
00:01:32,280 --> 00:01:33,895
 I don't have to do anything in that case.

36
00:01:33,895 --> 00:01:36,170
 Simply on yes instances,

37
00:01:36,170 --> 00:01:38,230
 then I have to be able to verify solutions.

38
00:01:38,230 --> 00:01:41,415
 But I only have to verify solutions when I'm given the solution.

39
00:01:41,415 --> 00:01:43,420
 So I don't have to generate the solutions at all.

40
00:01:43,420 --> 00:01:46,665
 Simply, I have to be if I'm given the solution,

41
00:01:46,665 --> 00:01:47,970
 then I can verify that,

42
00:01:47,970 --> 00:01:50,010
 that is a solution to the input.

43
00:01:50,010 --> 00:01:51,780
 And it's important to stress that,

44
00:01:51,780 --> 00:01:53,760
 what we mean by efficiently verify,

45
00:01:53,760 --> 00:01:57,210
 we mean in time polynomial in the input size.

46
00:01:57,210 --> 00:02:00,275
 Now, how would I show that a particular problem is a search problem?

47
00:02:00,275 --> 00:02:04,830
 Well, I will show you an algorithm which can verify solutions in polynomial time.

48
00:02:04,830 --> 00:02:08,540
 So I would show you an algorithm which would take as input an instance I,

49
00:02:08,540 --> 00:02:13,945
 which is an input to the original search problem and a proposed solution to that input.

50
00:02:13,945 --> 00:02:15,550
 Now given I and S,

51
00:02:15,550 --> 00:02:17,455
 now what should my algorithm do?

52
00:02:17,455 --> 00:02:22,380
 Well my algorithm is going to verify that S is in fact a solution to the I,

53
00:02:22,380 --> 00:02:26,760
 and it's going to do so in time polynomial in the size of I.

54
00:02:26,760 --> 00:02:29,280
 Typically, it's very easy to show such an algorithm.

55
00:02:29,280 --> 00:02:33,210
 So let's take a look at a few example problems that we've seen so far in this course and

56
00:02:33,210 --> 00:02:33,210
 will verify that they are in fact search problems and therefore they are

