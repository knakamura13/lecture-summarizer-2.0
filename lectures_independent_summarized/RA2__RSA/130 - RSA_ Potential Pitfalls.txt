RSA encryption depends on the relative primality of the message, m, and the modulus n (product of two large primes P and Q). If m shares a common factor with n, the cryptosystem can be broken as the greatest common divisor (GCD) provides the shared prime factor. Encrypted messages (m raised to power e mod n) can expose common factors, enabling adversaries to factorize n using Euclid's algorithm and ultimately decrypt messages. To ensure security, m must be less than n but not too small to avoid direct decryption via cube roots in cases where e=3. Converting text to binary and segmenting into n-bit strings assures m < n, with leading bit considerations ensuring m's maximum value is properly lesser than n. Avoiding small messages can be achieved by padding the message with a sufficiently large random number R. However, when a message is sent multiple times with the same exponent but different moduli, encrypted messages can be used in conjunction to decrypt the original message using the Chinese remainder theorem. Lastly, the RSA protocol necessitates effective primality testing to select appropriate P and Q, ensuring the continued security of the encryption mechanism.