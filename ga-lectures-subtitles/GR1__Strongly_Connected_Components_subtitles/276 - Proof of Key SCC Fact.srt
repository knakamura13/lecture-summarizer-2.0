1
00:00:00,000 --> 00:00:04,050
 Now, we took the following fact for granted in the design of our algorithm.

2
00:00:04,050 --> 00:00:08,650
 The vertex with the highest post order number lies in a source SCC.

3
00:00:08,650 --> 00:00:13,385
 Now, let's prove that fact so that we complete the proof of correctness of our algorithm.

4
00:00:13,385 --> 00:00:15,500
 Let's look at the following simpler claim.

5
00:00:15,500 --> 00:00:18,970
 Let's take a pair of strongly connected components S and S prime.

6
00:00:18,970 --> 00:00:23,835
 Now, if some vertex in S has an edge to some vertex in S prime,

7
00:00:23,835 --> 00:00:28,230
 then what can we say about the post order numbers for S versus S prime?

8
00:00:28,230 --> 00:00:32,435
 What we show is that the maximum post order number in S is greater,

9
00:00:32,435 --> 00:00:36,380
 strictly greater than the maximum post order number in S prime.

10
00:00:36,380 --> 00:00:38,400
 Now, what does this simpler claim give us?

11
00:00:38,400 --> 00:00:40,130
 Well, this simpler claim gives us a way to

12
00:00:40,130 --> 00:00:42,840
 topologically sort the strongly connected components.

13
00:00:42,840 --> 00:00:44,445
 How do we topologically sort them?

14
00:00:44,445 --> 00:00:48,470
 We sort them by the maximum post order number in that component.

15
00:00:48,470 --> 00:00:50,480
 So, for each strongly connected component,

16
00:00:50,480 --> 00:00:55,245
 we're going to look at the max post order number of the vertices lying in that component.

17
00:00:55,245 --> 00:00:58,565
 So we can think of the post order number for this component to be

18
00:00:58,565 --> 00:01:02,810
 the max over the vertices in that component of the post order numbers.

19
00:01:02,810 --> 00:01:06,410
 Now, we sort these strongly connected components by

20
00:01:06,410 --> 00:01:10,380
 their post order numbers and we sort them in decreasing post order number.

21
00:01:10,380 --> 00:01:12,320
 And this claim, this simpler claim,

22
00:01:12,320 --> 00:01:14,870
 tells us that all edges will go from

23
00:01:14,870 --> 00:01:18,310
 larger post order number to smaller post order number.

24
00:01:18,310 --> 00:01:20,450
 So, all edges will go left to right in

25
00:01:20,450 --> 00:01:23,190
 the ordering of these strongly connected components.

26
00:01:23,190 --> 00:01:26,375
 Now, what do we know about the vertex with the highest post order number?

27
00:01:26,375 --> 00:01:29,795
 Well, it's strongly connected component is going to have the maximum,

28
00:01:29,795 --> 00:01:32,320
 the largest of these max post order numbers.

29
00:01:32,320 --> 00:01:35,540
 So, its component is going to be at the beginning of

30
00:01:35,540 --> 00:01:40,055
 this topological ordering and it's guaranteed to be a source SCC,

31
00:01:40,055 --> 00:01:42,465
 since it's at the beginning of the topological ordering.

32
00:01:42,465 --> 00:01:47,015
 So, therefore, the vertex with the highest post order number will be in the component

33
00:01:47,015 --> 00:01:51,960
 which is at the beginning of the topological ordering and therefore it's a source SCC.

34
00:01:51,960 --> 00:01:53,990
 So, if we prove this simpler claim,

35
00:01:53,990 --> 00:01:56,990
 then this gives us a way of topologically sorting

36
00:01:56,990 --> 00:01:59,985
 the components by the max post order number.

37
00:01:59,985 --> 00:02:06,050
 And this implies that the vertex with the highest post order number lies in a source SCC.

38
00:02:06,050 --> 00:02:07,670
 So, if we prove this simpler claim,

39
00:02:07,670 --> 00:02:11,380
 it implies the fact that we used in our SCC algorithm.

40
00:02:11,380 --> 00:02:11,380
 So all we need to prove is this simpler claim and then we're done.

