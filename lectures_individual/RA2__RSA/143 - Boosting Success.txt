Here again is our original primality testing algorithm. The problem was that it had a false positive rate of at most a half. We want to prove that false positive rate. We want to get it down smaller. So, what are we going to do? Recall the algorithm starts by choosing a random number between one and R minus one, and then we run for a max test for that Z that we chose at random. Now, what we're going to do is instead of choosing one rule number at random from this set, we're going to choose K numbers at random from this set, where K is a parameter that we're going to choose. Now, for all of these K numbers, we're going to run for a max test. So we're going to take that ZI and we're going to raise it to the power R minus one and we're going to check mod R, whether it's congruent to one or not. Now what we need is just that one of these ZI's is a Fermat witness. If any of these ZI's is a Fermat witness, so ZI raised to the power R minus one is not congruent to one mod R then we know for sure that R is composite. Whereas if all of these ZI's are not witnesses, then we have a very good chance that R is prime. So our final check is whether any of these ZI's is a witness or not. So if for all I's it passes the test, so ZI raised to the power R minus one is congruent to one mod R, then what do we know? We know there's a good chance that R is prime. And if any of these ZI's is a witness then what do we know? Then we know for sure that R is composite. more precisely let's look at our analysis from before. Suppose that R is a prime number, what does the algorithm do? It always outputs that R is prime because every ZI, when we raise it to the power R, is going to be congruent to one mod R by Fermat's little theorem. So the probability the algorithm outputs R is prime is one, when R is in fact prime. What happens when R is composite but not Carmichael? The previous algorithm had a false positive with probability at most a half, because at most half of the Z's are non-witnesses. Now, we're choosing KZ's. We just need that one of them is a witness. What's the probability that none of them are witnesses? So think of the following analogy: say it's a witness if I flip a coin and it's a heads, and if it's tails it's a non-witness. So the probability of a tails for each of these K flips is at most a half. So suppose it was a fair coin, what's the chance that I have K tails? That means that all K of these are non-witnesses. If I have just one heads, or at least one heads, then I have a witness. What's the chance that none of them are witnesses? So the chance that all K of them are tails? That's at most one half to the K. So the probability of a false positive in this scenario is at most one half to the K. So if I choose K to be, let's say, 100. So I choose 100 numbers at random from this set, this is a huge set, this is about the order two to the 1000, or two to the 2000. So choosing 100 numbers from there, running this procedure 100 times is not much of a cost. Then the probability of a false positive is at most one half to the 100, which is a tiny, tiny probability. So there is a very minuscule chance of that. So I'm willing to take that chance of a false positive, in which case my scheme, my cryptographic scheme might be easy to break, the chance of that is very minuscule. So that completes our primality testing algorithm in the case when we assume that the composite numbers are not Carmichael numbers. So we're ignoring these pseudo prime numbers. It turns out that, actually, to deal with these pseudo prime numbers, Carmichael numbers, it's not that much more complicated of an algorithm. That's detailed in the textbook and I'll leave that to there.