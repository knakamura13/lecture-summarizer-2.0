1
00:00:00,000 --> 00:00:02,700
 So, we've handled the case where i is on the path.

2
00:00:02,700 --> 00:00:05,580
 We've written the recurrence for D(i,s,t) and we've handled

3
00:00:05,580 --> 00:00:09,415
 the case where i is not on the path on the previous slide.

4
00:00:09,415 --> 00:00:12,905
 So, let's go ahead and summarize the recurrence for D(i,s,t).

5
00:00:12,905 --> 00:00:14,210
 We have two scenarios,

6
00:00:14,210 --> 00:00:16,270
 i is on the path or its not on the path.

7
00:00:16,270 --> 00:00:17,610
 We're going to take the best of those two.

8
00:00:17,610 --> 00:00:19,175
 So, we're going to take the min,

9
00:00:19,175 --> 00:00:21,310
 because we're trying to find the shortest path.

10
00:00:21,310 --> 00:00:22,495
 When i is not on the path,

11
00:00:22,495 --> 00:00:25,850
 recall it's just D(i-1, s,t).

12
00:00:25,850 --> 00:00:29,325
 When i is on the path we have these two terms.

13
00:00:29,325 --> 00:00:34,010
 We get the shortest path from S to i using the first i-1 as our main vertices.

14
00:00:34,010 --> 00:00:37,110
 Then we go from i to t. This is

15
00:00:37,110 --> 00:00:40,800
 our recurrence for D(i,s,t) in terms of smaller subproblems.

16
00:00:40,800 --> 00:00:47,270
 Notice, its using D(i,s,t) is using D(i-1).

17
00:00:47,270 --> 00:00:52,590
 So, if we go for i going from 0 up to n,

18
00:00:52,590 --> 00:00:55,835
 then in order to solve D(i,s,t),

19
00:00:55,835 --> 00:00:57,780
 it will use smaller subproblems which are

20
00:00:57,780 --> 00:01:00,360
 already solved in our dynamic programming algorithm.

21
00:01:00,360 --> 00:01:00,360
 So, let's go ahead and write the pseudo code for this dynamic programming algorithm.

