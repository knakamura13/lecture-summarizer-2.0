So we've proved this lemma: G, our original input, has a feasible flow if and only if our new construction G' has a saturating flow. So, to solve the feasible flow problem to find a feasible flow in this input graph, we simply construct this graph G', we run the max-flow problem, we check whether the size of this max-flow equals capital D, and therefore whether or not it's a saturating flow. If it is a saturating flow, then we've shown how to transform that saturating flow f' into a feasible flow f for this graph G. So, we know how to find a feasible flow f for this graph G if one exists. Once we have such a feasible flow f, can we transform it? Can we augment it to find a flow, a feasible flow of maximum size? So, can we find a maximum size feasible flow? Now recall how our max-flow algorithms worked, either Ford-Fulkerson or Edmonds-Karp. Both of them start with a zero flow. So every edge has flow zero initially then we build the residual graph and we find an augmenting path from s to t if one exists. If there exists one, we augment along that path then we build a new residual graph and we repeat. We keep augmenting along a path from s to t in the residual graph until there's no path from s to t in the residual graph, and therefore, the flow that we're at is a max-flow. Now we want to do a similar procedure for the feasible flow. So here, we're going to start at this feasible flow f that we found. Instead of starting at the zero flow as we did for the max-flow algorithms, here we're going to start with a feasible flow, and then we build the residual graph and we try to augment this flow. So we'd look for a path from s to t in this residual graph and augment along it if it exists and if none exists, we'll know that we're at a maximum size feasible flow. Now the only difference from before is that this residual graph is slightly different. Now the capacity of this edge from v to w in the residual graph for this current flow f. For forward edges, it's defined to be the leftover capacity. So it's the capacity minus the current flow. Now for reverse edges, so if there's an edge from w to v in the original graph, then we add the edge from v to w if there is flow from w to v. So normally in the residual graph, the capacity of this edge from v to w, this reverse edge, will be the flow along this edge. But now, we have the constraint that the flow can never go below the demand. So it can't decrease the flow below the demand. So the amount we can decrease the flow along this edge from wv is by how much the flow exceeds the demand. So we set the capacity of this reverse edge to be the flow along this edge minus the demand, and finally its zero otherwise. So, to find a max feasible flow, we run our max-flow algorithm with the following changes. Instead of starting at zero flow, we start at a feasible flow, and when we're building the residual graph, the reverse edges, their capacities is defined as not the flow along the edge but how much the flow exceeds the demand.