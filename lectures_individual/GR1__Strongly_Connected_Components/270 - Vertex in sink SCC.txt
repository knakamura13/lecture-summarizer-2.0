So, in a DAG, the vertex with the lowest post order number is guaranteed to be a sink vertex. Now, let's look in a general directed graph, so there may be cycles. Still, let's run DFS on this general directed graph. Is there's some property by post ordering numbers so that we can find a vertex which is guaranteed to lie in a sink SCC? While drawing inspiration from DAGs, we may say, the vertex with the lowest post order number. Maybe that happens to be guaranteed to lie in a sink SCC. Now we might hope for the following property in general directed graphs. We might run DFS on this general directed graph and we might hope that the vertex with the lowest post order number always is guaranteed to lie in the sink SCC. If that was the case, then in order to find a vertex in a sink SCC, we just run DFS on this general directed graph, take the vertex with the lowest post order number, and that has the guaranteed property that we're looking for. Now, this guess follows from our inspiration from the topological sorting algorithm for DAG. Now does this hold? Is this property true? Unfortunately, it's not true. Here's an easy example where it's not true. I have a graph on three vertices, A, B, and C. Now, A and B are strongly connected with each other and C is by itself. Now, let's say I run DFS starting from vertex A. So, A's a root and then from A, I visit vertex B, then from B, I pop back to A and then I visit vertex C, and then I pop back to A. Now, what are the pre order and post order numbers? I start with A. Then I go to B. Then I finished B, pop back to A, go to C. Then I finish C and then I pop back to A. So, which vertex has the lowest post order number? It's vertex B. But, B lies in this strongly connected component. Is this a sink SCC? No. In fact, it's a source SCC. So, in this example, the vertex with the lowest post order number lies in a source SCC. Complete opposite of what we're hoping for. But what if instead of finding a sink SCC, I want to find a source SCC. I don't know how to use that, but let's just say I wanted to find a source SCC. Let's go back to look at our DAG algorithm. So, I want to find a source vertex. Remember in our topological sorting algorithm, the vertex at the beginning of the topological ordering is the vertex with the highest post order number. So, the vertex with the highest post order number is guaranteed to be a source vertex in a DAG. So, in the general directed graph, does the vertex with highest post order number always lie in a source SCC? Well, in this example, that's actually true. The vertex with highest post order number is A, which lies in a source SCC. It turns out that this property is true and we're going to prove that it's true. So, in every directed graph, when we run DFS on that directed graph, it doesn't matter on which vertex we start at and which is the ordering on the neighbors, for every directed graph, for every DFS run on that directed graph, the vertex with the highest post order number is guaranteed to lie in a source SCC. Now, let's use this property to get an SCC algorithm and then we'll go back and we'll prove that this holds. First off, how can we use it? We notice before that we need a vertex that lies in a sink SCC. If we have a vertex which lies in the source SCC, that's not useful for us. But all we can guarantee is to find a vertex which lies in a source SCC. We don't know how to find a vertex in a sink SCC.