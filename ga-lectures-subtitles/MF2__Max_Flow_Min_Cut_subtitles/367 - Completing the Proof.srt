1
00:00:00,000 --> 00:00:02,165
 Now let's go back to our earlier slide.

2
00:00:02,165 --> 00:00:04,225
 We're trying to prove this inequality.

3
00:00:04,225 --> 00:00:06,480
 We're trying to prove that the size of the max flow is

4
00:00:06,480 --> 00:00:09,675
 at least the minimum capacity of an s-t cut.

5
00:00:09,675 --> 00:00:14,940
 To do that, we took any flow which has no augmenting path in the residual network,

6
00:00:14,940 --> 00:00:17,475
 and we constructed a s-t cut.

7
00:00:17,475 --> 00:00:19,210
 How do we construct the s-t cut?

8
00:00:19,210 --> 00:00:23,055
 We set L to be the set of vertices reachable from s,

9
00:00:23,055 --> 00:00:24,550
 in this residual network.

10
00:00:24,550 --> 00:00:26,205
 Since, there is no augmenting path,

11
00:00:26,205 --> 00:00:29,040
 there is no s-t path in this residual network.

12
00:00:29,040 --> 00:00:31,840
 So, t is not reachable from s. So,

13
00:00:31,840 --> 00:00:35,490
 t is in the set R and s is in the set L. So,

14
00:00:35,490 --> 00:00:37,475
 this is a valid s-t cut.

15
00:00:37,475 --> 00:00:41,250
 And then, what we just proved is that the size of this flow,

16
00:00:41,250 --> 00:00:44,980
 f*, is equal to the capacity of this cut.

17
00:00:44,980 --> 00:00:48,900
 Therefore, the max flow is at least this size,

18
00:00:48,900 --> 00:00:52,425
 and the min s-t cut capacity is at most this.

19
00:00:52,425 --> 00:00:57,240
 So the max flow is at least the min s-t cut capacity.

20
00:00:57,240 --> 00:00:59,050
 So we proved this inequality,

21
00:00:59,050 --> 00:01:01,470
 and earlier we proved the other inequality,

22
00:01:01,470 --> 00:01:05,560
 and therefore, that completes the proof of the max flow min cut theorem.

23
00:01:05,560 --> 00:01:11,185
 We've proved that the max flow size equals the capacity of the min s-t cut.

24
00:01:11,185 --> 00:01:14,385
 Notice, we've also proven the earlier, lemma that we claimed.

25
00:01:14,385 --> 00:01:19,950
 We've shown, that for any flow that has no augmenting path in the residual network,

26
00:01:19,950 --> 00:01:22,605
 we can construct an s-t cut,

27
00:01:22,605 --> 00:01:27,090
 where the size of this flow equals the capacity of the s-t cut.

28
00:01:27,090 --> 00:01:32,250
 Now the only way we can have equality here is if both of these are optimal.

29
00:01:32,250 --> 00:01:36,925
 So this must be a max flow and this must be a min s-t cut.

30
00:01:36,925 --> 00:01:40,860
 So, first off, this proves that Ford-Fulkerson algorithm,

31
00:01:40,860 --> 00:01:43,110
 or any algorithm, which stops when there is

32
00:01:43,110 --> 00:01:46,520
 no augmenting path in the residual network is correct.

33
00:01:46,520 --> 00:01:48,180
 It outputs a max flow,

34
00:01:48,180 --> 00:01:53,770
 but secondly, it shows us a way of constructing a min s-t cut.

35
00:01:53,770 --> 00:01:56,340
 If we take a max flow f*,

36
00:01:56,340 --> 00:02:01,635
 and we set L to be those vertices reachable from s in the residual network,

37
00:02:01,635 --> 00:02:03,090
 then that s-t cut,

38
00:02:03,090 --> 00:02:04,305
 that we just defined,

39
00:02:04,305 --> 00:02:07,680
 has capacity equal to the size of this flow.

40
00:02:07,680 --> 00:02:11,294
 So the capacity here must be optimal,

41
00:02:11,294 --> 00:02:13,515
 this must be a min s-t cut.

42
00:02:13,515 --> 00:02:16,620
 So we have a way of verifying that we have a max flow,

43
00:02:16,620 --> 00:02:18,135
 and we have a way,

44
00:02:18,135 --> 00:02:23,400
 given a max flow of constructing an s-t cut of minimum capacity,

45
00:02:23,400 --> 00:02:28,395
 and were going to use that in our image segmentation application,

46
00:02:28,395 --> 00:02:31,290
 and were going to use this lemma about a flow

47
00:02:31,290 --> 00:02:34,795
 being optimal if there is no augmenting path in the residual network,

48
00:02:34,795 --> 00:02:38,775
 for proof of correctness not only a Ford-Fulkerson algorithm,

49
00:02:38,775 --> 00:02:38,775
 but also of Edmonds-Karp algorithm.

