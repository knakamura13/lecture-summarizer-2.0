1
00:00:00,000 --> 00:00:02,370
 There's one important point that we have to make about

2
00:00:02,370 --> 00:00:05,340
 the performance of the algorithm which will be useful later.

3
00:00:05,340 --> 00:00:09,620
 Instead of max-SAT, let's consider max-Ek-SAT.

4
00:00:09,620 --> 00:00:12,690
 So every clause has size exactly K. For instance,

5
00:00:12,690 --> 00:00:19,170
 let's consider K=3, and suppose every clause in our input formula f had size exactly 3.

6
00:00:19,170 --> 00:00:23,675
 Now in this case what's the probability that a particular clause C_j is satisfied?

7
00:00:23,675 --> 00:00:26,730
 Well, there's one setting of the three literals which appear

8
00:00:26,730 --> 00:00:30,120
 in this clause so that this clause is not satisfied.

9
00:00:30,120 --> 00:00:32,605
 The probability of that assignment is one-eighth.

10
00:00:32,605 --> 00:00:37,020
 Therefore, the probability that is satisfied is exactly seven-eighths,

11
00:00:37,020 --> 00:00:40,860
 and therefore for the special case of max-E3-SAT,

12
00:00:40,860 --> 00:00:43,820
 we achieve a seven-eighths approximation algorithm.

13
00:00:43,820 --> 00:00:45,720
 And what if instead of size 3,

14
00:00:45,720 --> 00:00:48,020
 every clause had size exactly K,

15
00:00:48,020 --> 00:00:52,110
 then the probability that a specific clause is not satisfied is two to the

16
00:00:52,110 --> 00:00:56,215
 minus K. So the probability is satisfied is one minus SAT,

17
00:00:56,215 --> 00:01:02,546
 and therefore we achieve a one minus two minus approximation algorithm for max-Ek-SAT.

18
00:01:02,546 --> 00:01:08,040
 We're going to use later that this algorithm works well when all the clauses are large.

19
00:01:08,040 --> 00:01:10,470
 And now we're going to make a LP based algorithm

20
00:01:10,470 --> 00:01:13,680
 which works well when the clauses are small.

21
00:01:13,680 --> 00:01:16,295
 Now, one interesting tidbit this seven-eighths

22
00:01:16,295 --> 00:01:20,505
 approximation algorithm for max-E3-SAT is the best possible.

23
00:01:20,505 --> 00:01:25,980
 Hovstad proved that it's NP hard to do any better than seven-eighths for this case.

24
00:01:25,980 --> 00:01:28,710
 If we achieve an algorithm which has guaranteed

25
00:01:28,710 --> 00:01:32,260
 performance seven-eighths plus epsilon for any epsilon.

26
00:01:32,260 --> 00:01:36,708
 For instance, if we achieve 0.88 approximation algorithm,

27
00:01:36,708 --> 00:01:39,460
 then that implies that P=NP.

28
00:01:39,460 --> 00:01:42,150
 So this very simple naive algorithm is the best

29
00:01:42,150 --> 00:01:45,480
 possible when all the causes are of size exactly 3.

30
00:01:45,480 --> 00:01:50,130
 Thus the hard case is when the formula has varying size clauses,

31
00:01:50,130 --> 00:01:51,510
 has some unit clauses,

32
00:01:51,510 --> 00:01:55,060
 some clause of size two and some clauses of size three and so on.

33
00:01:55,060 --> 00:01:59,490
 But if all the clauses are of the same size and they happen to be of size three,

34
00:01:59,490 --> 00:01:59,490
 then we can achieve the best possible algorithm by just a random assignment.

