1
00:00:00,000 --> 00:00:02,370
 This new best of two approach is

2
00:00:02,370 --> 00:00:06,105
 a simple twist on the original approach. What are we doing now?

3
00:00:06,105 --> 00:00:08,520
 Well, instead of choosing a random bin,

4
00:00:08,520 --> 00:00:10,200
 we choose two random bins,

5
00:00:10,200 --> 00:00:14,465
 and we assign the ith ball to the least loaded of these two random bins.

6
00:00:14,465 --> 00:00:16,155
 It turns out that with this scheme,

7
00:00:16,155 --> 00:00:20,730
 the maximum load is order log log n, with high probability.

8
00:00:20,730 --> 00:00:24,300
 Recall that the previous approach had max load on the order of

9
00:00:24,300 --> 00:00:28,440
 roughly log n and we've reduced it from log n to log log n just by,

10
00:00:28,440 --> 00:00:30,420
 instead of choosing one random bin,

11
00:00:30,420 --> 00:00:32,213
 we choose two random bins,

12
00:00:32,213 --> 00:00:33,990
 and we send to the best of the two.

13
00:00:33,990 --> 00:00:37,440
 This is a substantial gain because log log n is quite small,

14
00:00:37,440 --> 00:00:41,670
 even for very large n. So this is almost like order one,

15
00:00:41,670 --> 00:00:44,755
 it's very close, it's a very small quantity.

16
00:00:44,755 --> 00:00:45,930
 After seeing this result,

17
00:00:45,930 --> 00:00:48,090
 you might say, "Well, why choose two random bins. "

18
00:00:48,090 --> 00:00:52,980
 Let's choose three random bins and maybe we'll get log log log n." Well,

19
00:00:52,980 --> 00:00:55,825
 it turns out that the big gain is from one to two,

20
00:00:55,825 --> 00:00:57,840
 and after that there's not much gain.

21
00:00:57,840 --> 00:01:00,245
 In particular, if you choose d,

22
00:01:00,245 --> 00:01:01,360
 at least two bins,

23
00:01:01,360 --> 00:01:05,205
 so instead of choosing two random bins you choose d random bins

24
00:01:05,205 --> 00:01:09,435
 and you assign the ith ball to the least loaded of all of these d bins,

25
00:01:09,435 --> 00:01:12,427
 then the max load is going to be log log n over log

26
00:01:12,427 --> 00:01:16,530
 d. So the improvement with d is very small.

27
00:01:16,530 --> 00:01:18,615
 Now, keep this idea in mind later,

28
00:01:18,615 --> 00:01:21,595
 this idea of choosing the best of two choices.

29
00:01:21,595 --> 00:01:25,350
 We're going to use this intuition later to get better hashing schemes and

30
00:01:25,350 --> 00:01:29,730
 then to drive the intuition behind the Bloom filters.

31
00:01:29,730 --> 00:01:29,730
 So finally, let's dive into hashing.

