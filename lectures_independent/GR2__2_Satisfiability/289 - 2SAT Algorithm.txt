Now the key fact that we just discussed and we haven't proven but we're going to use it for the algorithm is that if for all i, Xi, and Xi bar are in different strongly connected components, then we have the important property that if a set of vertices S is a sink SCC, then its compliment is a source SCC and vice versa. If S bar is a source SCC, then S is a sink SCC. So let's take this fact for granted and let's use it to design an algorithm for 2SAT, and then we'll go back and we'll prove this key fact. Here's our 2SAT algorithm for the input formula f. First off, we're going to simplify f,so that we eliminate all unit clauses. So now, we'll assume that f has all clauses of size exactly 2. Then, what we do is we construct the graph of implications corresponding to f. Now, we run a strongly connected component algorithm on this graph, G. So we have this strongly connected components of G and we have the strongly connected components in topological order. So we're going to take the last component. That's going to be a sink component. Let's call it S. What are we going to do? We're going to set this component to be true. So we're going to satisfy all the literals in this component. If we satisfy f, then that means S bar is unsatisfied. So what are we doing? We're taking this sink component and setting it to true. Meanwhile, its complements set is a source component. So we're taking that source component and setting it to false at the same time. Now, we remove this sink component and this source component and we repeat this procedure. We find our sync component in the resulting graph and we keep going until we're left with the empty graph, and then we satisfy the formula. This completes the algorithm description and it's easy to see that the main step in the algorithm in the running time is constructing the strongly connecting components, which takes linear time. So the whole algorithm takes order n+m time. It's linear. It remains just to prove this key fact, and then we're done with our algorithm description.