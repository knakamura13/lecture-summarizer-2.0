what we're gonna do now is instead of using a single hash function we're going to choose a pair of hash functions H 1 and H 2 each of these hash tables Maps elements of U of our possible passwords into our hash table of size n now we're assume that these hash functions are random so each element acts in the universe of possible passwords maps to a random element of the hash table H 1 of X is random in each two of X are random and these are independent of each other and independent of the other hash values the first question is how do we insert an element a possible password into our dictionary of unacceptable passwords in the traditional scheme this is quite straightforward what we do is we look at our hash function and we look at H of X that tells us the hash value and now we looked at the linked list at H of X and we add element acts onto that linked list but now we have two hash functions H 1 and H 2 so how do we do this insertion into our dictionary in this scenario when we have two hash functions this is a bit of an open-ended question but why don't you think about how you would insert an element into our dictionary using two hash functions