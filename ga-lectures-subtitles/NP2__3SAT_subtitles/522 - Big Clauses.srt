1
00:00:00,000 --> 00:00:03,370
 Let's consider now a general clause of size k,

2
00:00:03,370 --> 00:00:06,405
 and let's label the literals in this clause by a1,

3
00:00:06,405 --> 00:00:08,115
 a2 up to ak.

4
00:00:08,115 --> 00:00:09,570
 Now, for this clause,

5
00:00:09,570 --> 00:00:12,750
 we're going to create k-3 new variables.

6
00:00:12,750 --> 00:00:14,400
 Recall that when k was 4,

7
00:00:14,400 --> 00:00:15,750
 we created one new variable,

8
00:00:15,750 --> 00:00:18,340
 when k was 5, we created two new variables.

9
00:00:18,340 --> 00:00:21,975
 In general, we're going to create k-3 new variables.

10
00:00:21,975 --> 00:00:26,520
 Let's label these new variables as Y1 through Yk-3.

11
00:00:26,520 --> 00:00:28,925
 Now it's important to note that every clause of

12
00:00:28,925 --> 00:00:32,550
 size greater than 3 creates new variables,

13
00:00:32,550 --> 00:00:36,180
 and these new variables are distinct for each clause.

14
00:00:36,180 --> 00:00:37,260
 So, for each clause,

15
00:00:37,260 --> 00:00:39,790
 we might create order n new variables.

16
00:00:39,790 --> 00:00:42,000
 There's m clauses so we might have order,

17
00:00:42,000 --> 00:00:44,850
 n times m new variables in total.

18
00:00:44,850 --> 00:00:47,805
 Now we're going to replace this original clause C,

19
00:00:47,805 --> 00:00:50,430
 by the following k-2 clauses.

20
00:00:50,430 --> 00:00:52,110
 So we take the first two literals, a1, a2,

21
00:00:52,110 --> 00:00:55,140
 and the first new variable Y1,

22
00:00:55,140 --> 00:01:02,175
 and the first clause is a1 or a2 or Y1 and we use the negative of the first new variable,

23
00:01:02,175 --> 00:01:03,930
 the third literal a3,

24
00:01:03,930 --> 00:01:08,438
 and then the positive of the next new variable.

25
00:01:08,438 --> 00:01:10,255
 And this gives us our pattern.

26
00:01:10,255 --> 00:01:11,880
 So, we then use Y2_bar,

27
00:01:11,880 --> 00:01:15,530
 the negative of the second variable,

28
00:01:15,530 --> 00:01:18,110
 and then we use the next literal, a4,

29
00:01:18,110 --> 00:01:23,305
 and then we use the next new variable, positive form, Y3.

30
00:01:23,305 --> 00:01:25,405
 Now we continue this pattern,

31
00:01:25,405 --> 00:01:28,910
 and then the last two clauses look as follows.

32
00:01:28,910 --> 00:01:31,300
 So the penultimate clause looks as follows.

33
00:01:31,300 --> 00:01:37,055
 It's going to have Yk-4_bar, or ak-2,

34
00:01:37,055 --> 00:01:39,095
 this is the third to last literal,

35
00:01:39,095 --> 00:01:44,893
 or Yk-3 is the last new variable in the positive form.

36
00:01:44,893 --> 00:01:48,290
 This penultimate clause follows the same pattern.

37
00:01:48,290 --> 00:01:50,660
 The last clause is going to be slightly different.

38
00:01:50,660 --> 00:01:55,550
 It has Yk-3_bar, same pattern as before and then we use

39
00:01:55,550 --> 00:02:00,594
 the last two literals of C. So we have ak-1, or ak.

40
00:02:00,594 --> 00:02:03,570
 This defines a formula C_prime.

41
00:02:03,570 --> 00:02:07,280
 Now our claim is that the original clause C is satisfiable,

42
00:02:07,280 --> 00:02:12,320
 if and only if this new sequence of clauses, C_prime is satisfiable.

43
00:02:12,320 --> 00:02:16,550
 Now, for our original input to the SAT problem, for every clause,

44
00:02:16,550 --> 00:02:18,455
 which is size bigger than three,

45
00:02:18,455 --> 00:02:21,280
 we can replace it under this following construction.

46
00:02:21,280 --> 00:02:22,610
 We take this clause,

47
00:02:22,610 --> 00:02:24,300
 which is size bigger than three.

48
00:02:24,300 --> 00:02:29,525
 We replace it by this sequence of clauses which are all of size exactly equal to three,

49
00:02:29,525 --> 00:02:32,780
 and then we get a valid input to

50
00:02:32,780 --> 00:02:37,535
 the three set formula and the key is that this new formula is satisfiable,

51
00:02:37,535 --> 00:02:39,615
 if and only if the original formula is satisfiable,

52
00:02:39,615 --> 00:02:41,620
 within the equivalent formula.

53
00:02:41,620 --> 00:02:43,535
 So let's go ahead and prove this claim,

54
00:02:43,535 --> 00:02:47,090
 that C satisfiable if and only if C_prime is satisfiable,

55
00:02:47,090 --> 00:02:47,090
 and then we'll be pretty much done with the reduc-

