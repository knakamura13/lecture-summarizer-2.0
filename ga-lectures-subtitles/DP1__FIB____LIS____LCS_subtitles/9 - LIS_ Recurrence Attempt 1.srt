1
00:00:00,000 --> 00:00:03,540
 Recall, our subproblem definition is L of I,

2
00:00:03,540 --> 00:00:06,690
 is the length of the longest increasing subsequence on

3
00:00:06,690 --> 00:00:10,075
 the first I elements of the input, all right?

4
00:00:10,075 --> 00:00:15,940
 And our goal is to express L of I in terms of the solution to smaller subproblems.

5
00:00:15,940 --> 00:00:18,735
 So, now, let's recall our earlier example.

6
00:00:18,735 --> 00:00:23,040
 Here is our earlier example which had n equals 12.

7
00:00:23,040 --> 00:00:25,620
 Now, let's look at L on this example.

8
00:00:25,620 --> 00:00:27,310
 To start with, for L of one,

9
00:00:27,310 --> 00:00:32,620
 we're looking at the longest increasing subsequence on the one element array.

10
00:00:32,620 --> 00:00:35,460
 That's length one or five itself.

11
00:00:35,460 --> 00:00:38,945
 Then, for L of two, we're looking at the two element array five,

12
00:00:38,945 --> 00:00:41,665
 seven the longest increasing subsequence is five,

13
00:00:41,665 --> 00:00:43,530
 seven itself, which is length two.

14
00:00:43,530 --> 00:00:45,990
 And for five, seven, four; five,

15
00:00:45,990 --> 00:00:49,004
 seven is still the longest and we add on three,

16
00:00:49,004 --> 00:00:53,087
 but still length two is the longest,

17
00:00:53,087 --> 00:00:58,594
 for 9, we can appended on to the longest solution.

18
00:00:58,594 --> 00:01:03,100
 We get the length three with one, stays 3.

19
00:01:03,100 --> 00:01:05,390
 When we add on 10,

20
00:01:05,390 --> 00:01:09,305
 we can append 10 on to the longest solution.

21
00:01:09,305 --> 00:01:15,175
 We get like 4. Now let's pay attention to the case I equals 9. What is L of 9?

22
00:01:15,175 --> 00:01:22,870
 Well, we cannot append on A on to the end of this current longest solution but in fact,

23
00:01:22,870 --> 00:01:24,850
 there's a different solution.

24
00:01:24,850 --> 00:01:32,380
 -3,1,4,5, for which we

25
00:01:32,380 --> 00:01:37,570
 can append A on to the end and we get a solution of length 5.

26
00:01:37,570 --> 00:01:39,400
 So, the problem is,

27
00:01:39,400 --> 00:01:44,825
 how can we compute L of 9 using L 1 through L A?

28
00:01:44,825 --> 00:01:51,995
 How do we know whether we can append A on to the end of the current solution or not?

29
00:01:51,995 --> 00:01:55,285
 We're not maintaining the current solution but even if we maintain the current solution,

30
00:01:55,285 --> 00:01:58,390
 how do we know that we can append A on to the end of it?

31
00:01:58,390 --> 00:02:01,150
 For this solution we couldn't maintain it.

32
00:02:01,150 --> 00:02:02,835
 We couldn't append it on to the end.

33
00:02:02,835 --> 00:02:06,960
 But for this solution we could append A on to the end of it.

34
00:02:06,960 --> 00:02:12,130
 So, suppose we kept track of the current solution or actually, what do we need to know?

35
00:02:12,130 --> 00:02:17,485
 We need to know the ending character of the current solution and what's the key fact?

36
00:02:17,485 --> 00:02:25,135
 We want to know the longest increasing subsequence with the minimum ending character.

37
00:02:25,135 --> 00:02:27,550
 So, we want to know the smallest ending character,

38
00:02:27,550 --> 00:02:30,070
 because the smallest ending character gives us

39
00:02:30,070 --> 00:02:34,750
 the most possibilities for appending on a new character on to the end.

40
00:02:34,750 --> 00:02:38,920
 So in this case, in order to compute L of 9 using L 1 through L A,

41
00:02:38,920 --> 00:02:40,390
 we need to keep track of

42
00:02:40,390 --> 00:02:45,980
 the longest increasing subsequence solution with the minimum ending character.

43
00:02:45,980 --> 00:02:49,765
 And in this case, it's five and then we realize we can append eight on

44
00:02:49,765 --> 00:02:53,890
 to the end of it and we can increase those solution length from four.

45
00:02:53,890 --> 00:02:58,420
 Let's go back to I equals 8 and we'll start to see the complication in this solution.

46
00:02:58,420 --> 00:03:01,998
 Previously, our solution was 5, 7, 9,

47
00:03:01,998 --> 00:03:07,780
 10 but actually with our new formulation what we want to maintain is,

48
00:03:07,780 --> 00:03:14,925
 -3, 1, 4, 5 because this is also of length 4 and it ends in a smaller character.

49
00:03:14,925 --> 00:03:17,090
 For now let's go back to I equals 7.

50
00:03:17,090 --> 00:03:25,005
 For I equals 7, the longest increasing subsequence is 5,7,9,10.

51
00:03:25,005 --> 00:03:27,070
 But, no. When I equals 8,

52
00:03:27,070 --> 00:03:32,920
 we need to have this sequence minus 3 1,4.

53
00:03:32,920 --> 00:03:34,530
 Now this is only length 3.

54
00:03:34,530 --> 00:03:40,055
 So it's a suboptimal solution but we need to maintain it in order to realize that in

55
00:03:40,055 --> 00:03:43,180
 the next step that we can append 5 on to the end of

56
00:03:43,180 --> 00:03:47,650
 it and then we obtain a length 4 solution for I equals 8.

57
00:03:47,650 --> 00:03:50,500
 So, how do we maintain this suboptimal solution?

58
00:03:50,500 --> 00:03:54,565
 The key is, that for every possible ending character,

59
00:03:54,565 --> 00:03:56,230
 we want to maintain the length of

60
00:03:56,230 --> 00:04:00,310
 the longest increasing solution with that ending character.

61
00:04:00,310 --> 00:04:01,660
 We need to know the length of

62
00:04:01,660 --> 00:04:05,970
 the longest increasing subsequence for every possible ending character.

63
00:04:05,970 --> 00:04:08,410
 If we know that for every possible ending character,

64
00:04:08,410 --> 00:04:10,615
 then when we get a new character,

65
00:04:10,615 --> 00:04:12,070
 in this case five,

66
00:04:12,070 --> 00:04:17,320
 we can try all possible ending characters and we can try to add on five.

67
00:04:17,320 --> 00:04:21,495
 We can see whether it is allowed to add on five on to the end of it.

68
00:04:21,495 --> 00:04:24,485
 Now, how many possible ending characters are there?

69
00:04:24,485 --> 00:04:26,430
 What are the possible ending characters?

70
00:04:26,430 --> 00:04:30,635
 Well, the ending characters must be an earlier element in the input array.

71
00:04:30,635 --> 00:04:33,360
 So in this case it is 5,7,4,

72
00:04:33,360 --> 00:04:35,645
 -3 up to 4.

73
00:04:35,645 --> 00:04:37,235
 Those are the possible ending characters.

74
00:04:37,235 --> 00:04:39,425
 So they're not limitless.

75
00:04:39,425 --> 00:04:41,410
 There's a finite small number.

76
00:04:41,410 --> 00:04:45,100
 Actually, I minus 1 possible ending characters.

77
00:04:45,100 --> 00:04:51,330
 So, this actually gives us an idea for how to modify our subproblem formulation.

78
00:04:51,330 --> 00:04:52,582
 We want to know the length of

79
00:04:52,582 --> 00:04:56,415
 the longest increasing subsequence for every possible ending character.

80
00:04:56,415 --> 00:04:57,880
 We just noticed that

81
00:04:57,880 --> 00:05:02,825
 the possible ending characters are the earlier elements in the array.

82
00:05:02,825 --> 00:05:05,465
 Therefore, we want to maintain the length of

83
00:05:05,465 --> 00:05:10,655
 the longest increasing subsequence for each element of the array.

84
00:05:10,655 --> 00:05:13,900
 This gives us an idea for the new subproblem formulation.

85
00:05:13,900 --> 00:05:19,211
 We're going to modify the length of the longest increasing subsequence on A 1 through A I

86
00:05:19,211 --> 00:05:24,970
 and includes A I, okay?

87
00:05:24,970 --> 00:05:28,620
 So this will give us the longest increasing subsequence,

88
00:05:28,620 --> 00:05:33,775
 which ends at the I element of the array, in this case five.

89
00:05:33,775 --> 00:05:41,940
 And then, we have that for L 1 through L I minus 1 and then we can use that to decide,

90
00:05:41,940 --> 00:05:45,750
 what is the longest sequence ending at 8 because we can see

91
00:05:45,750 --> 00:05:49,735
 which characters allow us to append 8 on to the end of it.

92
00:05:49,735 --> 00:05:49,735
 Let's go back and formulate this more precisely and then we'll see the recurrence.

