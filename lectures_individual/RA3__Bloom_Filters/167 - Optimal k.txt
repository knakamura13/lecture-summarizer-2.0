Recall the expression that we just obtained for the false positive probability. The expression was one minus E to the minus K over C raised to the power K. Let's look at this as a function of K. So look, Let F of K denote this expression. This is F of K is a false positive probability for a specific choice of K, the number of hash functions. Our goal is to figure out what's the optimal choice for the number of hash functions, in order to minimize this false positive probability. So what do we do? We are going to minimize this function F of K. How do we find the optimal choice of K? Well, we take it's derivative, set it equal to zero. Check whether it's a global minimum. And then we find that choice of K, which sets the derivative equal to zero. Where does that optimal happen? It happens at K equals C times LN two. That's the natural log of two. The log base E of two. I'm going to skip this calculus, so that I don't embarrass myself. I've forgotten my calculus too, so don't worry. But let's look at this choice of K, which is the optimal choice in order to minimize the false positive probability. It's quite interesting. Actually, first off, let's plug this choice of K back into this expression. And then we can simplify it. Well, first off, when you plug in K equal C LN two over here, then the C is cancelled, and you're left with LN two. And then on the outside we have C LN two. What is E to the minus LN two? That's exactly one half. And what's one minus a half? It's a half. So the inside is one half raised to the power C LN two. Let's separate the C from LN two. So we have one half to the LN two, all raised to the power C. Now what is this inside? This is just a fixed constant. It's one half raised to the power LN two. You can plug it in on your calculator. Turns out that inner expression is .6185 approximately. So we have that raised to the power C. C is the ratio of the size of our hash table compared to our database. Now we have a simple expression for the false positive probability. It's .6185 raised to the power C. So if you tell me how large of a hash table you're willing to do, I can tell you what the false positive probability is. Before we look at that, let's just take a look at this expression right here. I want to point out something interesting about this choice, this optimal choice of K. What's a probability a specific bit is zero, or one? The chance is one is this inner expression. Chance is zero is this expression right here. Both of those are one half. So the chance we're setting a bit to zero is one half. The chance we're setting it to one is a half. So what does this binary string look like after we've done M insertions? So it's a binary string of length N, and we've done M insertions into it. What does it look like? Well, each bit afterwards is set to zero with probability half. So each bit is randomly set to zero or one. So this string H corresponds to a random string, where each bit is independently flipped to zero or one. So what's interesting, is that the optimal choice of K means, that if we just look at what this random string looks like, it's going to correspond to a random binary string, where each bit is independently set to zero or one. So the optimal choice of K corresponds to balancing out the zeros and ones in H, so that H looks like a random string.