1
00:00:00,000 --> 00:00:02,235
 Now the proof of correctness of this algorithm,

2
00:00:02,235 --> 00:00:04,455
 the fact that it does output flow,

3
00:00:04,455 --> 00:00:06,560
 which is equal to the Max-flow,

4
00:00:06,560 --> 00:00:10,315
 this will follow from the Max-flow=min-cut theorem which we'll see later.

5
00:00:10,315 --> 00:00:12,500
 So we're going to skip the proof of correctness for now.

6
00:00:12,500 --> 00:00:15,135
 Let's instead focus on the running time with this algorithm.

7
00:00:15,135 --> 00:00:17,085
 In order to analyze the running time,

8
00:00:17,085 --> 00:00:18,870
 we need to make a huge assumption.

9
00:00:18,870 --> 00:00:22,080
 We need to assume that all the capacities are integers.

10
00:00:22,080 --> 00:00:24,090
 Only under this assumption can we make

11
00:00:24,090 --> 00:00:27,200
 a claim about the running time with a Ford-Fulkerson algorithm.

12
00:00:27,200 --> 00:00:30,450
 Later, we'll see more sophisticated algorithms namely,

13
00:00:30,450 --> 00:00:34,005
 Edmonds-Karp algorithm, which eliminates this assumption.

14
00:00:34,005 --> 00:00:38,485
 The main point of this assumption is that when we augment the flow,

15
00:00:38,485 --> 00:00:41,190
 we're going to augment it by an integer amount.

16
00:00:41,190 --> 00:00:46,425
 So therefore, the capacities in the residual network will maintain as integers,

17
00:00:46,425 --> 00:00:50,520
 and then every round will continue to augment by an integer amount.

18
00:00:50,520 --> 00:00:55,060
 Now, if all the capacities in the residual network are integers,

19
00:00:55,060 --> 00:00:57,435
 therefore they are all at least one,

20
00:00:57,435 --> 00:00:59,145
 since they're all positive.

21
00:00:59,145 --> 00:01:03,220
 Then, the flow is going to augment by at least one unit,

22
00:01:03,220 --> 00:01:07,325
 because the capacity of this path will be at least one unit.

23
00:01:07,325 --> 00:01:09,900
 So the flow is going to increase by at least one unit for

24
00:01:09,900 --> 00:01:12,780
 every round of the Ford-Fulkerson algorithm.

25
00:01:12,780 --> 00:01:14,390
 Now how many rounds do we have?

26
00:01:14,390 --> 00:01:18,330
 Let's let capital C denote the size of the Max-flow.

27
00:01:18,330 --> 00:01:19,950
 This is what we're trying to find.

28
00:01:19,950 --> 00:01:22,920
 Well then, we have at most capital C rounds of the algorithm,

29
00:01:22,920 --> 00:01:24,300
 because in every round,

30
00:01:24,300 --> 00:01:27,225
 the flow increases by at least one unit.

31
00:01:27,225 --> 00:01:31,510
 The maximum flow that we're trying to find is of size capital C,

32
00:01:31,510 --> 00:01:31,510
 so we're going to get at most capital C rounds.

