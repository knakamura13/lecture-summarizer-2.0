1
00:00:00,000 --> 00:00:02,655
 What's a simple idea for choosing this subset S,

2
00:00:02,655 --> 00:00:04,600
 which is of size n over five?

3
00:00:04,600 --> 00:00:06,630
 Well, perhaps the simplest idea is let

4
00:00:06,630 --> 00:00:10,325
 the subset S just be the first n over five elements of A.

5
00:00:10,325 --> 00:00:12,565
 Then we're going to set a pivot to be the median of

6
00:00:12,565 --> 00:00:16,025
 this subset S. How does this pivot perform?

7
00:00:16,025 --> 00:00:17,620
 Is it a good pivot?

8
00:00:17,620 --> 00:00:19,440
 Is this pivot P a good pivot?

9
00:00:19,440 --> 00:00:20,945
 No. Why not?

10
00:00:20,945 --> 00:00:22,770
 Well, that would be too easy.

11
00:00:22,770 --> 00:00:24,380
 Let's see why it fails.

12
00:00:24,380 --> 00:00:28,320
 Let's see the scenario where this pivot P is not a good pivot.

13
00:00:28,320 --> 00:00:30,070
 Well, suppose A was sorted.

14
00:00:30,070 --> 00:00:32,775
 Well in this case, actually, it's easy to find the median of A.

15
00:00:32,775 --> 00:00:34,840
 So, there's no reason we're running the whole algorithm.

16
00:00:34,840 --> 00:00:37,440
 But suppose A is sorted and then, actually,

17
00:00:37,440 --> 00:00:41,440
 this is going to imply that this pivot P is a bad pivot.

18
00:00:41,440 --> 00:00:43,515
 So if A is sorted, then what is S?

19
00:00:43,515 --> 00:00:47,005
 S is going to be the first n over five elements of A.

20
00:00:47,005 --> 00:00:48,835
 So it's the smallest elements of A.

21
00:00:48,835 --> 00:00:52,775
 So S contains all the n over five smallest elements of A.

22
00:00:52,775 --> 00:00:56,295
 What is the median of these n over five smallest elements of A?

23
00:00:56,295 --> 00:01:01,215
 The median of the n over five smallest elements is the n over 10th smallest element.

24
00:01:01,215 --> 00:01:05,495
 So this pivot is the n over 10th smallest element of this list A.

25
00:01:05,495 --> 00:01:08,235
 Well if this is the n over 10th smallest element.

26
00:01:08,235 --> 00:01:10,980
 Then when we partition A into the small,

27
00:01:10,980 --> 00:01:12,210
 equal and big sets,

28
00:01:12,210 --> 00:01:15,165
 the big set all we can guarantee is that it's at most

29
00:01:15,165 --> 00:01:20,220
 nine-tenths n. And then if you go back to the running time of our algorithm,

30
00:01:20,220 --> 00:01:24,550
 then we're going to have t of n is at most t of nine-tenths

31
00:01:24,550 --> 00:01:29,040
 n instead of three-fourths n. So this pivot P is not a good pivot,

32
00:01:29,040 --> 00:01:32,595
 because this large set is going to be too large in the worst case.

33
00:01:32,595 --> 00:01:34,250
 So is there a better choice for this set S?

34
00:01:34,250 --> 00:01:36,510
 Well, there's some hope because we chose

35
00:01:36,510 --> 00:01:39,975
 this set S right now without looking at A at all.

36
00:01:39,975 --> 00:01:41,730
 So, can we look at A and do a little bit of

37
00:01:41,730 --> 00:01:41,730
 computation and choose a better representative set S?

