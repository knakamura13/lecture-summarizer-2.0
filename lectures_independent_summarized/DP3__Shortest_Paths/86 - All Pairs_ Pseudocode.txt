Developed the Floyd-Warshall algorithm pseudo code for solving all pairs shortest path in a directed graph with potentially positive or negative edge weights. Start with a base case, initializing distances D[0][S][T] for all vertex pairs (S, T) where S and T range from 1 to N. If an edge exists from S to T, the base distance is the edge weight; if not, it's set to infinity. Progress to the general case for I â‰¥ 1 iterating over all S and T, filling in D[I][S][T] based on two scenarios: with or without vertex I on the path. If I is not on the path, D[I][S][T] equals D[I-1][S][T]. If I is on the path, the path is split at I, taking the sum of the shortest paths from S to I and I to T. The algorithm concludes by returning a matrix D[N] representing the shortest paths for all vertex pairs. The algorithm's time complexity analysis is implied but not detailed.