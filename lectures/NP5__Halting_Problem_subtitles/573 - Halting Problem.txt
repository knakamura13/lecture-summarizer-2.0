Now let's formally define the Halting Problem. The input to the halting problem is a program P, with an input I for that program P. Now how is this program P given to you? Well, we can restrict it to any language we want. We can say it's in pseudocode, we can say it's in C, Python, but we can say it's in an arbitrary language. Now what is the output of the halting problem? Well, think of the basic task of a compiler. Given a program and an input, we want to figure out if this program terminates on this input, or does it have an infinite loop. That's the task of the halting problem, to figure out whether this program on this particular input runs forever, or ever terminates. So if the program P on input I ever terminate, so it stops eventually, then we output true. We're not trying to figure out whether it runs correctly, whether it gives a correct solution on this input. We're just asking whether the program P ever stops when we run it on input I. On the other side we output false if the program P on input I never terminates. In other words, it has an infinite loop. To summarize, I'm giving you a particular program P, and a specific input I, and on this specific input I, does the program P have an infinite loop? Or does it eventually stop?