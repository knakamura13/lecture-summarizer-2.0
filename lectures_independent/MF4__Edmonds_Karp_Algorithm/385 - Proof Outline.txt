Now we're going to prove that the running time of Edmonds-Karp algorithm is order m squared n. Now to prove that, we're going to prove that the number of rounds of the algorithm, the number of times we augment the path, is at most m times n. Now in each round, we run BFS. BFS takes linear time. So assuming the number of edges is at least the number of vertices, that's order m time, therefore, it's order m time per round and order mn rounds. So the total run time will be order m squared n. So our main task is to prove that the number of rounds is at most mn. As we just discussed, in every round, the residual graph changes from the previous round. In particular, at least one edge is deleted from the residual graph in every round. This edge corresponds to the one with minimum capacity along the augmenting path. Now, edges make it add it back in in the residual graph. And in particular, this edge might be deleted in this round and in later rounds might be added back in. Now what we're going to prove is that for every edge of the graph, we can bound the number of times that the edge is deleted in the residual graph and then reinsert it back later. In particular, we're going to show that the number of times this edge e is deleted from the residual graph, and then later reinserted into the residual graph, is at most n over two times. Now since there are m edges in the graph, and this holds for every edge of the graph, so we know that every edge is deleted at most n over two times, at least one edge is deleted in every round. Therefore, there is at most n over two times m total rounds. This gives our desired bound on the number of rounds of the algorithm which proves the desired running time. So let's dive into the proof of this key lemma.