Constructing an MST T′ that includes a set X and a specific edge e* begins with acknowledging the existence of an MST T containing X. If e* is already in T, T' is simply T, requiring no further proof. If e* isn't in T, a cycle is formed by adding e* to T, necessitating the removal of one edge to maintain the tree structure. The edge removed must have a greater or equal weight than e*, which is guaranteed because e* is the lightest edge crossing a specific cut (S to S-bar) in the graph. There is always an edge to remove since any path between the disconnected subsets S and S-bar in T must cross this cut at least once. T′ is then obtained by adding e* to T and removing this edge, resulting in an MST that includes X and e*. It’s ensured that T’ has minimum weight because the added edge e* is the minimum possible weight for connecting S and S-bar, and the dropped edge has an equal or greater weight, keeping T′ competitive with T. This process successfully constructs MST T′, which must then be shown to be a minimum weight spanning tree.