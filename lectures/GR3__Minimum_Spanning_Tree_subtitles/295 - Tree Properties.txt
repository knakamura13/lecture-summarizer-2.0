Before we dive into the algorithm and the proof of correctness, let's review some basic graph theory about properties of a tree. Now, I would remind you, a tree is a connected acyclic graph. Here's an example of a graph on 17 vertices with a tree denoted by the blue edges. The first basic property is that a tree on n vertices has exactly n - 1 edges. In this example, it has 17 vertices and there are 16 edges. To see why this property holds, you'll notice that you need a least n - 1 edges to connect up the n vertices. And if you have more than n - 1 edges, then you'll have at least one cycle. The next property about a tree is that, in a tree, there is exactly one path between every pair of vertices. Clearly, if there are zero paths between a pair of vertices, then that graph, that tree is not connected. And also, if there are two or more paths between a pair of vertices, then we have a cycle in this graph. So, it's not acyclic. So, in order to be connected and acyclic, there has to be exactly one path between every pair of vertices. Now, the final property is the one that we're going to use in our proof of the cut property. We're going to construct a sub-graph and we want to establish that it's a tree. How are we going to prove there's a tree? Well, we're going to show that it's connected and that the number of edges is exactly n - 1. Any connected graph with exactly n - 1 edges is a tree. Now, this third property follows from combining the first property and the second property together and apply the third property. This last property is the one that we're going to utilize later. So, let me repeat it again. In order to establish that a graph is a tree, I just have to show you that the number of edges is exactly n - 1 and that this graph is connected.