At this point, all of the practice problems at the end of Chapter Eight are relevant. Here are a few of my favorite problems. In problem 8.4, they give you a proof, a supposed proof of NP-completeness for a problem, and you have to spot the error in that proof. Now in problem 8.10, there are seven subparts, and you have to prove that each of these problems that they present is NP-complete by doing a proof by generalization. You have to show it's a generalization of a known NP-complete problem. Some other nice problems are 8.14 where you do the Clique plus Independent set problem. So you're checking whether graph has a large clique and a large independent set. And 8.19, you consider the Kite problem. Now in all these NP-completeness problems, there's two parts, yet the first show that the problem is in the class NP, that's usually trivial. And then you have to take a known NP-complete problem and reduce it to this new problem. Now, what's the known NP-complete problem you should use? Well, it's probably something similar. So, for instance, this talks about clique and independent set, probably you should use clique or independent set here as the known problem. If you're talking about a SAT variant, then you should probably use SAT or 3SAT over here. Now, there are roughly two flavors of NP-completeness productions. The first is proof by generalization. You can show that this new problem is more general than a known problem. Now, in some sense, we're always showing that this new problem is a generalization of the known problem. But what we mean by this proof by generalization is that you can just set the parameters here so that you get this known problem here. Now, the other type of reduction is you have to do a gadget. We did something like this for the 3-SAT proof. What we do is we take the formula as input over here and we modify it in some way or we take a graph problem over here and input the graph problem here and we modify that graph by adding some small structure to that graph. We call that a gadget that we're adding in. So, those are the two main approaches. You're going to do proof by gadget. You're going to take the input here and you're going to modify it by adding some gadget to make an input for the new NP-complete problem, or you are going to do a proof by generalization. This topic is a little like dynamic programming. You have to do a lot of practice problems to get the hang of it. So, good luck and try a lot of practice problems from the text.