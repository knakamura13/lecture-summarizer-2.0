This is the key expression from before. X times Y is equal to 2 to the n times x_l times y_l plus 2 to the n over 2 times the quantity x_l times y_ r plus x_r times y_l. Finally, we add in x_r times y_r. Now, a straightforward divide and conquer approach, computes four subproblems recursively. It multiplies x_l and y_l, x_l and y_r, x_r and y_l and finally, x_r and y_r. We have four subproblems and then it takes us order n time to combine those solutions together, this leads to an order n square time algorithm. What we're trying to achieve now is we're trying to reduce the number of subproblems from four to three. Thinking back on the idea from Gauss that we talked about earlier for multiplying complex numbers, what do we want to do here? We want to compute this sum, x_l, y_r plus x_r, y_l without computing these individual terms. Well, how do we do that? Well, we think of these as cross terms again. And on one side we're going to have x_l and x_r, that's one quantity. The other quantity is going to be y_l and y_r. When we expand this out, we get the following: x_l, y_l, x_r, y_r and finally, we get x_l times y_r and x_r times y_l. Now, our goal is to compute the sum, so let's solve for that. This quantity x_l, y_r plus x_r, y_l, that's equal to this left hand side, x_l plus x_r times y_l plus y_r and then we subtract off these two terms, x_l, y_l minus x_r, y_r. Now in the algorithm, we just had this term x_l, y_l, this was the quantity A which we recursively computed. x_r, y_r was B which we recursively computed. So we have this term x_l, y_l and we have this term x_r, y_r. What's the final term that we want to compute? It's this quantity. So we're going to take x_l plus x_r and we're going to multiply that by y_l plus y_r. And we're going to store that answer in C. We're going to recursively compute A, B, and C and then we can combine them together using this expression to get X times Y. In particular, X times Y is equal to 2 to the n times A as before, plus 2 to the n over 2 times this quantity. How do we get this quantity? It's simply C minus A minus B. C minus A minus B. And then finally, we add in B, this last term. And this is going to give us a better divide and conquer algorithm because now we only have three subproblems that we have to recursively compute. And then we can combine them together using this expression in order to get the product of X times Y.