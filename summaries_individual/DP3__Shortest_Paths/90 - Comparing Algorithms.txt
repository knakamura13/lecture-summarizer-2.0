Modified example by changing edge direction from d to b. The focus is on comparing Bellman-Ford and Floyd-Warshall algorithms for detecting negative weight cycles. Bellman-Ford algorithm is for single-source shortest paths; if initiated from vertex d, it can't detect a negative cycle like a-b-c since it's not reachable from d. Bellman-Ford only finds negative cycles reachable from its start vertex. Floyd-Warshall, however, computes all-pairs shortest paths and can detect negative cycles anywhere in the graph irrespective of a starting vertex. Therefore, Floyd-Warshall would find the negative weight cycle a-b-c even when Bellman-Ford could not from the starting vertex d.