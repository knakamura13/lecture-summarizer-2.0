Before moving on, let's use this simple example to identify a few important issues. The first and perhaps the most important issue is that we're optimizing over this entire feasible region, this tan set here. Now in this example the optimum happened be at an integer point, this point 100, 200. So x_1 and x_2 are integer values, but we have no way to only consider solutions lying on integer points. We can only find the best point in this whole region. For example, for a different objective function, the optimum may lie at this vertex. At this vertex. X_1 is an integer value, it's 300, but X_2 is a fractional value. In such a scenario, what do we do if we only want to consider integer points such as in our example for the production situation? Well, if we end up with a fractional point, which is the optimal point, we could try to round it to an integer point. That's something we'll do in the lecture LP four on the Max-set Approximation Algorithm. The key point is that linear programming optimizes over this entire set and when we optimize over this entire set, then the problem is polynomial time solvable. So, linear programming LP is in the complexity class P. Now, the corresponding problem where we look for the best integer valued solution is called integer linear programming and is denoted as ILP. The ILP problem is NP-complete. So it's unlikely that we can solve it in polynomial time. We'll see this fact that ILP is NP-complete in the Max-set Approximation Algorithm lecture. Another key idea is that the optimal point for this linear program lies at a vertex of this polygon. What does a vertex mean? A vertex means a corner of this polygon. So, there are five vertices of this polygon: one, two, three, four, and five. Why is it the case that the optimum must lie at a vertex of this polygon of this feasible region? Now, it may be the case that other points are also optimal. We're just saying that vertices are at least as good as any other point. Look at this line for the max C achievable. In this case, C equals 1300. Suppose this optimal line intersects a point such as this point Z which is not a vertex of this polygon. Well, this point Z lies on on edge of the polygon. Therefore, it must be the case that one of these two endpoints of this edge must be better than this point Z, or it has to be the case that this optimal line intersects this edge. If this optimal line intersects this edge, then all the points on this edge are optimal. Therefore, the two endpoints are both optimal and therefore an optimal point lies at a vertex. The last important concept is convexity. This feasible region, this tan region is convex. What exactly does convexity mean? Well, if we take any two points in this set and we look at the line connecting them, then that entire line, that entire edge is contained in this set. This means that we don't have a shape like this. The feasible region can't go down and then back up because if we take a point over here and a point over here and we look at the line, the edge connecting them, then it goes outside the set. So this is non-convex set. Because the feasible region is defined by the intersection of half spaces, it must be a convex set. We can't get these nasty shapes. Since it's convex, if we have a vertex such as this point,100, 200, which is better than its neighbors, these two points, well, the feasible region can't go down and then back up. So, if this point is better than its neighbors, then the entire convex region, the entire feasible region is below these two lines. Therefore, this point is optimal because if a point is better than its neighbors, then that vertex is an optimal point. That's the key point of convexity, the optimal point always lies at a vertex of this feasible region. There may be other points which are optimal, for example, this entire line might be optimal, but there always is a vertex of this feasible region. In this case, these two points which will be optimal. This concept that an optimal point lies at a vertex of the polygon and the key fact that if a vertex is better than all of its neighbors, then its' therefore the global optima. This leads to the simplex algorithm which we'll detail later, but let's give a brief sketch of it. It's sort of a local greedy approach. We'll start at some vertex of the polygon. We'll check its neighbors and we'll look if any of its neighbors are better. Then we'll move to a neighbor which has a better objective function and we continue until we find a vertex of the polygon in the feasible region which is better than all of its neighbors and therefore it's optimal. That's the basic idea of the simplex algorithm. Now let's move on to another three dimensional example.