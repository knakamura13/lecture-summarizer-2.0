Kruskal's algorithm proof of correctness relies on induction and the cut property. The algorithm selects edges in increasing weight, avoiding those that form cycles, in order to construct a minimum spanning tree (MST). Assuming the subset of edges X chosen so far is part of an MST, introducing a new edge E will either keep X within an MST (if E doesn't create a cycle) or lead to a different MST. The crucial condition is that E must connect two separate components, one containing vertex V and the other W, without creating a cycle. X contains no edges between the component of V (S) and its complement (S_bar). E is a minimum weight edge that crosses from S to S_bar, which is key because when such an edge is added to X, the union X âˆª E is still within an MST provided no other edges in X traverse from S to S_bar. This principle, where a minimum weight edge can be added across a cut of the graph without other crossing edges, is known as the cut property, which will be formally proven to substantiate the algorithm's correctness.