We saw how to determine the connected components for an undirected graph, now let's take a look at directed graphs. How do we determine the connectivity properties for a directed graph? Once again we're going to use a DFS based approach, but now for directed graphs, we're going to need additional information from the DFS. The additional info that we use are the preorder or postorder numbers for the tree or forest of explorer the edges. The algorithm is going to be a slight variant of DFS that we saw just before, so let's look at that previous algorithm and just modify it a little bit. Here's a DFS algorithm for figuring out the connected components of an undirected graph. Our basic algorithm is going to be the same, but we no longer need to keep track of the connected component number, so let's remove those lines. This line, this line and this line. We can drop these three lines. So I've removed those three lines which talked about the connected component number. Now I want to add in lines which take care of the preorder and postorder numbers. In order to keep track of the preorder and postorder numbers, we're going to add in the clock. The preorder number for a vertex Z, is going to be the value of the clock when we first visit vertex Z, and the postorder number is going to be the value of the clock at the time when we finished exploring vertex Z. So we looked at all edges out of Z. First we need to initialize the clock to one. When we first visit a vertex Z, we can store as preorder number, which is the current value of the clock. After we do this, we need to increment the clock. Finally when we finish exploring vertex Z, then we can set its postorder number to be the current value of the clock. And then once again we have to increment the value of the clock. That gives as DFS undirected graphs. Now we want to see the properties of these preorder and postorder numbers. And actually for our connectivity algorithms, we're simply going to use the postorder numbers. And to be perfectly honest, I'm not even sure where preorder numbers come into play. The only application I know of for preorder numbers are in order to try to trick you on exams or homeworks. But just in case I kept the preorder number in here in the algorithm.