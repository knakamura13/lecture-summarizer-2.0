Reducing feasible flow to max-flow problem by using max-flow algorithms as a black box. Feasible flow seeks any valid flow, whereas max-flow aims for the largest possible one. To solve feasible flow, transform its input—a directed graph with edge capacities (C of E) and demands (D of E)—into max-flow input using a function, g. A new graph (G prime) and capacities (C prime) are defined for this purpose, but without demand constraints. Once the max-flow black box returns a result (F prime), another function, h, is used to convert it back into a feasible flow (F) for the original input graph, respecting the given capacities and demands. The challenge lies in detailing transformations g and h to manipulate inputs and outputs between the problems.