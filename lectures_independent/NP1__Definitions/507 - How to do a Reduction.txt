Now, let's suppose I want to show a reduction from colorings to SAT. How do I do it. Well if we reduce coloring to SAT, what we're showing is that, if there is a polynomial time algorithm for SAT, then we can use it to get a polynomial time algorithm for colorings. So what do we do. We suppose that there is a polynomial time algorithm for SAT. And we're going to treat this algorithm like a black box. What does it mean to treat this algorithm as a black box. Well we don't know how the algorithm works, but we can use this as a basic subroutine. We can put in some input for SAT and we can get out some output and it takes polynomial time for that algorithm to run. And we're going to use this black box algorithm, as a subroutine to get a polynomial time algorithm for colorings problem. So let's look at it pictorially. So here's our black box algorithm for SAT. We can give it some input and it produces some output. Either it gives us a solution, or it outputs no, if there's no solution for that particular input. Now, we want to use this black box algorithm or subroutine for satisfiability problem and we want to use it to construct an algorithm for the colorings problem. So this red box denotes our subroutine for the colorings problem. So the input to our colorings problem, is a particular I, which in this case is a graph and a number of colors K. Now, what we need to do, is define a transformation f. We have to show how to transform this input to the colorings problem and produce an input to the satisfiability problem. So we have to change this graph and there's number of colors into a boolean formula. Then we plug that boolean formula into our set solver and our set solver either gives us a solution, in this case it's an assignment, which satisfies this formula or it outputs no, there's no solution for this input. Now, we have to transform this solution into a solution to the original colorings input. So we have defined another transformation which we denote is H.This H takes as input, a solution to our SAT input and it transforms it to get a solution to our original colorings instance. So if S is a solution to f(I), then h(s) is the solution to I. And if our SAT input had no solution, then we'll say that our colorings input had no solution. So if we get out no we output no.