Extended Euclid algorithm outputs D (GCD of X, Y), alpha, and beta given inputs X â‰¥ Y, with alpha and beta fulfilling the relation D = Xalpha + Ybeta. Base case is when Y=0, where D=X, alpha=1, beta=0. In general cases, it utilizes Euclid's rule (GCD(X, Y) = GCD(Y, X mod Y)) and recursively calls itself with Y and X mod Y. It returns D, alpha prime, beta prime, then manipulates them to find alpha and beta: alpha=beta prime, beta=alpha prime - (X/Y floored)beta prime. The algorithm's correctness is proven via algebra; details are in the textbook. It takes O(N^2) time per iteration and O(N) iterations akin to Euclid's algorithm, resulting in O(N^3) total runtime.