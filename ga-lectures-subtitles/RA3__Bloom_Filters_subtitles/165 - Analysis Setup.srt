1
00:00:00,000 --> 00:00:02,335
 Let's start analyzing the false positive rate.

2
00:00:02,335 --> 00:00:04,085
 As before, let M,

3
00:00:04,085 --> 00:00:07,735
 denote the size of our database or dictionary that we're maintaining.

4
00:00:07,735 --> 00:00:10,985
 And let little N denote the size of our hash table.

5
00:00:10,985 --> 00:00:14,160
 Now, presumably, N, the size of our hash table is going to

6
00:00:14,160 --> 00:00:17,715
 be at least the size of the database that we're maintaining.

7
00:00:17,715 --> 00:00:21,775
 So, the number of bins is at least the number of balls that we're inserting.

8
00:00:21,775 --> 00:00:25,140
 So, the important parameter is going to be the ratio of these sizes.

9
00:00:25,140 --> 00:00:27,180
 So, let C denote this ratio.

10
00:00:27,180 --> 00:00:31,085
 The size of the hash table compared to the size of the database.

11
00:00:31,085 --> 00:00:32,935
 So, C is going to be at least one.

12
00:00:32,935 --> 00:00:36,615
 And our goal is to try to get the smallest C possible.

13
00:00:36,615 --> 00:00:42,030
 So once again, the size of our database as a dictionary of unacceptable passwords is

14
00:00:42,030 --> 00:00:44,770
 M. And the size of our hash table is C times

15
00:00:44,770 --> 00:00:48,345
 M. There's a constant C which is at least one,

16
00:00:48,345 --> 00:00:55,080
 and our hash table is this constant C bigger than the database that we're maintaining.

17
00:00:55,080 --> 00:00:56,640
 Now, for an element X,

18
00:00:56,640 --> 00:00:58,530
 which is not in our database.

19
00:00:58,530 --> 00:01:00,660
 So, we didn't do an insertion on X.

20
00:01:00,660 --> 00:01:04,475
 Let's look at the probability of a false positive for this X.

21
00:01:04,475 --> 00:01:07,275
 So X was not inserted into the database.

22
00:01:07,275 --> 00:01:09,870
 And what is the probability of a false positive?

23
00:01:09,870 --> 00:01:14,475
 So, we incorrectly say that X was inserted into the database.

24
00:01:14,475 --> 00:01:15,930
 So, in order for this to occur,

25
00:01:15,930 --> 00:01:18,150
 we need that all the K bits for X.

26
00:01:18,150 --> 00:01:21,685
 So H-1 of X H-2 of X up to H-K of X,

27
00:01:21,685 --> 00:01:23,360
 were all set to one.

28
00:01:23,360 --> 00:01:28,185
 If all of these bits are one but X was never inserted into the database,

29
00:01:28,185 --> 00:01:29,665
 then we'll get a false positive.

30
00:01:29,665 --> 00:01:31,315
 We'll incorrectly say yes,

31
00:01:31,315 --> 00:01:34,010
 it is in the database because all of the K bits are one,

32
00:01:34,010 --> 00:01:37,415
 but it was never in fact inserted into the database.

33
00:01:37,415 --> 00:01:41,370
 So, let's try to analyze this probability that all this K bits are set to one.

34
00:01:41,370 --> 00:01:45,290
 Let's first look at a simpler problem for a specific bit, B.

35
00:01:45,290 --> 00:01:48,645
 What's the probability that specific that is set to one?

36
00:01:48,645 --> 00:01:50,350
 So, for a specific bit.

37
00:01:50,350 --> 00:01:52,020
 B, this is ranges between 0,

38
00:01:52,020 --> 00:01:54,005
 1, and N minus one.

39
00:01:54,005 --> 00:01:56,320
 What is the probability that this specific bit,

40
00:01:56,320 --> 00:01:58,307
 B is set to one?

41
00:01:58,307 --> 00:02:00,090
 It would be slightly easier to look at

42
00:02:00,090 --> 00:02:04,165
 the complimentary event that this specific bit is set to zero.

43
00:02:04,165 --> 00:02:06,570
 So, the probability that this specific bit is one,

44
00:02:06,570 --> 00:02:09,890
 is one minus the probability that this bit is still zero.

45
00:02:09,890 --> 00:02:13,554
 Now, to analyze the probability that it's still set to zero,

46
00:02:13,554 --> 00:02:20,760
 what we have to do is we have to check that all of the insertions miss this one bit.

47
00:02:20,760 --> 00:02:22,410
 Now, let's go back and think about our balls and bins

48
00:02:22,410 --> 00:02:25,410
 analogy in order to analyze this probability.

49
00:02:25,410 --> 00:02:27,460
 Now, we have M insertions.

50
00:02:27,460 --> 00:02:29,460
 In our simple hashing scheme,

51
00:02:29,460 --> 00:02:33,830
 these insertions correspond to throwing a ball into a bin.

52
00:02:33,830 --> 00:02:36,985
 So, this corresponds to throwing M balls into bins.

53
00:02:36,985 --> 00:02:39,255
 But notice for each insertion,

54
00:02:39,255 --> 00:02:41,960
 we have K hash values that we look at.

55
00:02:41,960 --> 00:02:44,595
 And we set K of these values to one.

56
00:02:44,595 --> 00:02:47,920
 So, each insertion corresponds to K balls.

57
00:02:47,920 --> 00:02:51,765
 So, actually we're throwing M times K balls into bins.

58
00:02:51,765 --> 00:02:56,940
 So, we're throwing these M times K balls and we're throwing them into N bins.

59
00:02:56,940 --> 00:02:59,365
 Now, what is this specific bit being set to

60
00:02:59,365 --> 00:03:03,000
 zero correspond to in this balls and bins example?

61
00:03:03,000 --> 00:03:06,360
 In order for this bit to still be zero we need that

62
00:03:06,360 --> 00:03:10,585
 all these M times K balls miss this specific bin, B.

63
00:03:10,585 --> 00:03:14,820
 So this probability that this bit is zero is equivalent to

64
00:03:14,820 --> 00:03:19,365
 the probability that all M times K balls miss this specific bin.

65
00:03:19,365 --> 00:03:23,350
 For one ball, what's the probability that it misses a specific bin?

66
00:03:23,350 --> 00:03:25,995
 The chance that it hits the specific bin is one over N,

67
00:03:25,995 --> 00:03:28,743
 the chance it misses this bin is one minus one over

68
00:03:28,743 --> 00:03:32,000
 N. And we're doing this for M times K balls.

69
00:03:32,000 --> 00:03:34,770
 Now, this expression is not very complicated but will be

70
00:03:34,770 --> 00:03:34,770
 much more convenient for us to have a slightly simpler expression.

