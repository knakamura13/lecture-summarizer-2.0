Let's recap and summarize our recurrence. We're looking the length of the shortest path from S to Z using at most I edges and we're considering the case where I is at least one. When I equals zero we have our base case. Now either the shortest path from S to Z uses the most I minus one edges or it uses exactly I edges. And we're going to take the best of those two scenarios. If it uses the most I minus one edges, then the solution is in D of I minus one Z. If it uses exactly I edges, then we're going to try all choices for the penultimate vertex Y and then we're going to take the length of the shortest path from S to Y using the most I minus one edges plus the length of the last edge. So we have a double min. We take the min of the I minus one case and the min over Y, choices for Y. And this defines a recurrence for D of I Z. Notice, in order to get this D for I Z, we're using entries which involve I minus one. So if we build up the table from I going from zero, which is the base case, to N minus one, we'll have a valid dynamic programming algorithm. So let's go ahead and detail-