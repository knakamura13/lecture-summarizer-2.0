Now here's an example of a Markov chain whose graph corresponds to a bipartite graph. Let's look at some basic properties of this Markov chain. Suppose we start our random walk from one of these vertices on the left side, either state one, three, or five. What do we know? We know at time one we're on the right side, and actually at any odd time we're on the right side and at any even time we're on the left side. Now suppose we start on the right side, so at times zero we're at either vertex two or vertex four. Now we have the opposite situation, at odd times where on the left side, at even times we're guaranteed to be on the right side. So the punch line is that the starting state matters in this graph. Whenever we have a bipartite graph the starting state matters. Now we want a simple way to ensure that our Markov chain is not bipartite, and even more so we want to ensure that the Markov chain has no periodic structure. Instead of being bipartite, having these cycles of period two we could have cycles a period three. So in general, if we want to ensure that the graph has no periodic structure, that is aperiodic. Well what's an easy way to ensure that? An easy way is to have a self loop on each vertex. So with some probability we stay where we are. This can be a very small, miniscule probability. So let's say with probability point 01 we stay where we are, and then we can rescale the other probabilities so that they sum up to one. In terms of their transition matrix, this means that our diagonals, the self loops are out diagonal entries in this transition matrix. We want all of these diagonal entries to be strictly greater than zero. So we want the diagonal entries to be positive. If they're positive, that destroys any periodic structure. It can't be bipartite or any periodic structure. So for every state i, we'll make sure that the probability of going from state i and staying in state i is strictly greater than zero. Okay that gets around this pitfall.