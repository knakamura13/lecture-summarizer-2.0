Now let's look at the task of reducing SAT to 3SAT. Let's outline first what we need to prove. Now, we're assuming we have an algorithm a polynomial time algorithm for the 3SAT problem, and we're going to use this as a black box. And we're going to construct an algorithm for the SAT problem, using this 3SAT algorithm as a subroutine. So what do we need to do? We need to take an input for the SAT problem. So we have an f, which is an input formula for the SAT problem, then we have to transform this input f into an input for the 3SAT problem. We'll use f prime to denote the input to 3SAT problem. Now this is a bit tricky to do. Why? Because f might have some big clauses. It might have some clauses which contain maybe n literals. But our input for 3SAT has to have clauses of size and most three. So somehow we have to transform these big clauses, into a series of small clauses. And we need to do it in such a way that if we have a satisfying assignment sigma prime, which is a satisfying assignment for f prime, our 3SAT formula, then we can transform this satisfying assignment for the 3SAT input into a satisfying assignment sigma for the original SAT input. Moreover, we want that if our 3SAT formula, f prime has no satisfying assignments. So there's no Sigma prime. So the algorithm is going to output No, we want that our original SAT formula f also has no satisfying assignment. So you want that f prime has no satisfying assignment, if and only if f has no satisfying assignment. And that way we can simply output No, in both cases. So once again what do we need to do? We need to take an input f, for the SAT problem, and we need to create an input for the 3SAT problem, and then given a satisfying assignment sequence prime for the 3SAT input, we need to transform it and make a satisfying assignment, for the SAT formula. And we need that Sigma prime satisfies f prime. So this is a satisfying assignment for f prime the 3SAT input, if and only if, this transformed output sigma, is a satisfying assignment for our original set formula. So we have a satisfying assignment for the 3SAT input if and only if we have a satisfying assignment for the SAT formula. Why do we need this equivalence? Because we need that No instances for the 3SAT formula, correspond to no instances for the SAT formula. So if we get a No output, we can output a No, for the SAT input. Now this is the main test, so let's dive into it. We want to take an input f for the SAT problem, and transform it into a valid input for the 3SAT problem.